# command:
# git-check-rebase --meta rebase_3.10.0-1160.66.1.el7_rh7-3.10.0-1160.76.1.el7.meta --rows-hide-level show_all --columns full vz7.188.x:rh7-3.10.0-1160.66.1.el7..rh7-3.10.0-1160.66.1.vz7.188.11 vz7.189.x:rh7-3.10.0-1160.76.1.el7..2a709cd369f2 > rebase_3.10.0-1160.66.1.el7_rh7-3.10.0-1160.76.1.el7.log
#

<tag>  vz7.188.x     vz7.189.x     SUBJECT
match  481de6cd2dc0  2aed0c2820d6  Revert RHBZ#1506437
match  c66b9a0dae45  2e6a1c2a6a8c  Revert RHBZ#1822405
match  23dd4eb772e9  ba5e927d94ee  Revert RHBZ#1489573 patches
match  fa18ce9be747  8c577d434f68  Revert RH "mm: do not stall register_shrinker()"
match  826fbdf4623a  cb5a005d1029  KBUILD: build should fail on modpost errors for external modules
match  0309c10b9888  dbb8eb71f26d  MS/TTY: TIOSAK Secure Attention Key ioctl
match  f89c65e3d19e  15e193985a3d  ms/tty/ppc: define TIOSAK (fix tty_ioctl() compilation)
match  2b8c85535371  02619d7aeeb0  ms/tty: Fix potential use after free in release_one_tty
match  d816cd5059d8  f47eb2c257d8  MS/IDLE: add boot param to forcibly enable intel auto demotion
match  3711b2b7f0d8  3160f82b22b0  MS/DEVICE: input_mutex isn't static now
match  a4e44d3d1681  8025849a3876  MS/KBD: add file kbd_bind in sysfs, which allow unbind keyboard from tty (v2)
match  bb654c24cf26  e679cee750bc  ms/idr: print a stack dump after ida_remove warning
match  3bc36fa5629e  3ce81c0736e8  ms/module: remove rmmod --wait option.
match  42a91f1e2223  ebc0635f8db6  ms/kcmp: fix standard comparison bug
match  758beb5a09c4  cd3a20419417  x86/SYSCALL: remove sys32 vm86 warning
match  870a1118d71e  4c2fe23496ce  Kconfig: introduce kernel/Kconfig.openvz
match  46734af21771  0d4489ad563a  Kconfig: Kconfig.openvz includes in arch
match  5f9fcf4ffbf6  383706d7d569  Initial patch commit + compilation fixes: commit messages history
match  21ca41e468ae  c4f6184e7a06  headers: inclusion
match  b4f96b40bfa7  6d65509b4c56  devcgroup: initial patch
match  7ab33195127e  15c283a374c2  ve/devcgroup/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  8989d02f1cbe  9fb348408b31  capabilities: correct descriptions
match  b962ded6ce42  622288abced9  ve/device_cgroup: fake allowing all devices for docker inside VZCT
match  621433adaa09  9d9e1d624186  ve/device_cgroup: allow to change device mount permission via cgroup
match  627b8b110bd5  f97d0b3722ba  ve/device_cgroup: kill ACC_QUOTA permission
match  93c4befd555b  b732aea8958d  vzwdog: initial patch
match  bd1c7e80b99b  bb524e397ff5  vzdev: initial patch
match  359db1c344c1  cdf512538d45  Revert: rh/kmod: use system_unbound_wq instead of khelper
match  775945c70f69  20306021efdd  cgroup: initial patch
match  d507fa32e333  d840946dc116  ms/cgroup: reorder the operations in cgroup_destroy_locked()
match  7f81a15f82cb  b17362664d28  ms/cgroup: split cgroup destruction into two steps
match  ba25ea73271b  4ea91418f602  ms/cgroup: use percpu refcnt for cgroup_subsys_states
match  ee01b267eafb  3f30f7baf197  ms/cgroup: switch to new percpu_ref API
ok     105372d9474a  dd1a8ce54da3  ve: Add VZVERSION suffix to kernel release
match  4e0792d40183  1431fcd41d3a  ve/sysinfo: don't clean uptime, procs and loads in containers
match  e5ac856e02f6  6e17521ba56f  ve: Prohibit containers add random entropy
match  7f7315c28087  d097fe3594cf  ve: Add ve syscalls numbers
match  2f0d1c960a53  295b21d0bd2f  ve/ppc: wire OpenVZ-specific syscalls
match  45c44e6e7fae  b1075d2882a7  ve: Use ve_printk() for often kernel messages about user actions
match  257b60b90809  437d6b068721  ve: Implement per ve randomize_va_space
match  399b45898c78  9f139066fa75  ve: Virtualize /proc/swaps to watch from inside CT
match  bc0239823c51  bfbf2f073f11  ve: Virtualize /proc/cmdline
match  83642c184688  18406a60856c  ve: Virtualize devpts superblock
match  67692e3b5484  db7df9509f34  ve: Add virtinfo subsys
match  a1bc785be099  d2d727cde067  ve: Prohibit module load and usermode_helper from inside CT
match  386844de52b6  0ff3272523a5  ve: Use ve_relative_clock in times() syscall and /proc/[pid]/stat
match  f9aa6cab2e39  e117d2d29dc8  ve: Customize VE uptime
match  efefdbc95329  f5d6ec9f1348  ve: Replace 0 ppid with 1 (workaround for bad utils)
match  cac12a251410  68d1a1e97af4  ve: Virtualize sysinfo
match  7559f8582eec  a28cfb74b255  ve: allow user ns in chroot
match  d6bcb069b5ad  2ae5c5a48e8a  ve/userns: associate user_struct with the user_namespace
ok     f2868b6d0dd3  1c7b22d4f270  ve: initial patch
                                     (two commits with identical subject - to be merged on next rebase)
ok     f2868b6d0dd3  70866697cc80  ve: initial patch
                                     (two commits with identical subject - to be merged on next rebase)
match  636b8f0ddf60  39c3eaf86a7c  ve/mm: print OOM info to VE log
match  6a85a99f9303  b5cf2c767ef6  ve/mm/trace: introduce vps_dumpable flag
match  71ab309cf45e  415cdc84c338  ptrace: prevent tracing "init" from inside a CT
match  d0a051499c82  c4cc44e2ad3a  ve/devmnt: Introduce ve::devmnt list
match  f82e0c528d29  5582fc8028f4  ve/fs/devmnt: process mount options
match  7f5a3c3527ae  292614991eef  ve/devmnt: Add a ability to show ve.mount_opts
match  f8564909edec  53e24808b102  uts: Add virt_utsname and /proc/sys/kernel/virt_osrelease entry
match  898b62d53446  1cb64836bdae  ve/uts_ns: Implement cgroup interface to configure ve's os_release
match  582ce2b8be15  3e79a1fe60a5  ve: Port diff-ve-allow-taskstats-netlink-in-netns
match  41c54cb9b1d3  4d2bc813570d  ve/taskstats: allow delivery of task attributes in CT context
match  aaf88683aa97  7fc9be41567e  ve/lockdep: Port diff-lockdep-taint-kernel-on-circular-locking-complains
match  e4e1b4e45128  ff6813b189b5  ve: Add support of features mask
match  6a821744201f  dd5e8be79a95  ve: Add support of iptables mask
match  a4d2b8ab117e  a1543c248591  ve/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  57124c2e9c84  4d3a952e477a  ve/itimer: add ve_name to warning for a NULL new_value
match  ea98dd29e16e  fb52b8692d09  ve: Implement current_user_ns_initial() helper
match  083bcdc77b89  20eef9f20391  vecalls: fix VZCTL_GET_CPU_STAT uptime_jif scale
match  92a685e863e7  ac501ec33a5d  ve: introduce ve_init_user_ns() helper
match  8ecea4916767  8e84328b3143  ve/acct: Allow process accounting in containers
match  7fc914eb9d4e  a5da6255f5f0  ve/kernel: allow to increase rlimit from inside container
match  60af21194fad  494f507eee5b  ve/cgroup: Add pseudosuper state for restore sake
match  d283e7d69677  3d7c0b17abe9  ve/security: device_cgroup -- Allow manage devices in @pseudosuper state
match  2c382a8fd902  c4dcf58cca1c  VE: convert khelper_wq to kthread_worker
match  74391c7f3719  70843281eae3  ve/cgroups: fake num_cgroups in /proc/cgroups output
match  8bc5617b7ede  4556902e9c3d  cgroup: Mark cgroup CGRP_VE_ROOT
match  2007f038ebd5  da5f5ddf8601  ve/cgroup: Mangle cgroups root from inside of VE view
match  1ad865facd06  14702bbc66d6  ve/cgroup: do not virtualize output of cgroup_path
match  0cdfe6253b8e  b950f3957fc2  ve/cgroup: Allow to write to several safe cgroup files from CT
match  d98545b239c6  aa858647e506  ve/cgroups: Introduce subgroups_limit control
match  3e1a04324cd0  39226ada3b93  ms/net/RDS: verify the underlying transport exists before creating a connection
match  fb6f39b514b6  6c49ad3216cc  ms/netlabel: fix the netlbl_catmap_setlong() dummy function
match  d1afe40fdf09  5ba3972e98f9  netns: export net_assign_generic()
match  bdcbd0e86fe3  34d7b23506ab  net: Make sit feature optional
match  b4ec57a5bec9  1e9065e082c8  net: Make ipip feature optional
match  c3c1de319128  79f247f3f8ee  net: Add sysctl_tcp_use_sg to disable NETIF_F_SG sk route capability
match  5aca03767c04  36718fa69401  net: Add NETIF_F_VENET netdev feature and optimized skb forwarding
match  a10bc060d075  d7472480fd18  net: Add NETIF_F_VIRTUAL feature to mask devices allowed in CT
match  e10c10a0437b  c403c2da1426  net: Make neigh_alloc() return ENOMEM in kmalloc() failed
match  77a9ec64b088  4a186cc5a584  tun: Create tun_flags file on for init_net only
match  3c51e300c19c  680ba8c087be  net: move dev_name_hash/dev_index_hash to netdevice.h
match  4eac22e70956  56764ffe79a4  net: introduce ip_rt_src_check
match  9c8bafd844ec  e3018eb30584  net: honor TW_WSCALE_MASK/TW_WSCALE_SPEC
match  00e044f474b2  cd3587cca3fe  net/compilation: sysctl_tcp_adv_win_scale
match  61c74b2e4310  3d22e564b2ad  net: don't push data in a socket in repair state
match  3ba9a3868c67  53ec001f3cde  net: force tcp maximum segment size (MSS) to 64K
match  026f7d34c9c8  23130a2b80ec  net: shift rcv_nxt appropriately in case we received only part of data
match  0737dbda2351  694df13c8e53  net/udp: honor SK_FORCE_REUSE
match  b8a8b6304c7d  9e4676b48d0a  net/ipv6: fix MIP6 compilation
match  052c6734162e  f6c79e4af565  net: fix cbq quantum calculation
match  5b58b086ff66  97211d69f0db  net/teql: disable "True" (or "trivial") link equalizer inside a CT
match  fe85804d86dc  09efcec9515d  veip: initial patch
match  ff9125b9f125  1921efd0202f  ve: export ve_subsys symbol
match  9b58d6323b2e  37631f925fde  drivers/net/ve: venet network device introduced
match  d930bf07108a  e83b711b5792  venet: delay skb_orphan() for venet CT->host path optimization
match  ba20f255aacd  c06ff55de3a6  veip: Add commentary about veip_shutdown_hook
match  a1ae19262674  398f975aa290  venet: ipX_forward headroom check
match  93e8dafcfd7c  6a0fe25c9d5c  ve/net,netfilter: Adjust REDIRECT target on venet device
match  6460d5e71e33  7437502e5896  fs/nfs: don't use delayed unmount for nfs.
match  89f15fd592af  f5ba0b663a39  ve/net/sysfs: Porting diff-ve-net-sysfs-drop-redundant-net_ipv4_route_path and diff-ve-net-route-bring-back-route_src_check
match  b2aa4fc7cdc0  284d5f60ee38  ve/net: allow to rename devices in non-ve namespaces
match  8af712e477a4  be0c5b7b6bff  ve/net: Add ipt_mask checks into ip6table_nat
match  9fc7f413d2cb  f0b97f288b98  ve/net: Add VE_NF_CONNTRACK check in resolve_normal_ct()
match  0473d82e4aeb  5cc4855f0149  ve/net: sit: fix crash on newlink if VE_FEATURE_SIT is disabled
match  28a9048295f9  8c6598c86d4c  VE/NET: don't oops in net_generic() on disabled features
match  8b54e16cba57  394da6d25286  ve/net/packet: show tx-ring warning only for host
match  e1d9b560a8f2  e722809c61fc  ve/net: restrict number of net devices for CT
match  14b579784fda  3c651737994e  ve/net/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  b7a7337c8c87  4aeff5c0ca6b  ve/net: restrict ethtool to CT root userns and prohibit EEPROM change
match  1ca07a4448d2  bf382ac1b466  ve/bridge: br_dev_init: check if "bridge" feature is enabled
match  bb85c0c6048c  7411c307186f  ve/tun: expose "owner", "group" and "tun_flags" attributes in container
match  3f561a7b3e7e  0b4a84a6513a  ve/net: Fix vlan NETIF_F_VIRTUAL feature initialization
match  7846748f8245  9856cad7a93b  ve/net/ppp: introduce VE_FEATURE_PPP feature
match  cf69ee185042  8d8649dae2ab  ve/net/dummy: enable support in a container
match  43a5a7d481e4  a11bde349c33  ve/net/ip_gre: containerize per-net devices
match  51a57df6a3ca  999450b92c11  ve/net: ip_vti: skip per net init in ve
match  23ef14471899  f2bead9a061e  ve/net: ipip: enable in container
match  5f96236d5273  b83ae1a2f0e0  ve/net/vxlan: enable support in a container
match  05443c73b248  bf2a8021eef1  ve/net: introduce TAP accounting
match  3094df8ae49d  cf3fa1c81dfc  vzeth: initial patch
match  fcd0b31190e3  27996be62b2a  ve/veth: don't drop skb->mark if NETIF_F_VENET is set
match  25074660f788  7114e9c23f85  vzevent: initial patch
match  ac50b12063c5  8f218c260b6d  ve/uevent: Use own uevent_seqnum for every VE
match  6bd57c53588f  395e595366e9  ve/kobj: Send events per VE instead of all net-namespaces broadcasting
match  1752e83a99fa  a94e477c94e8  ve/net: introduce vz_security_*_check checks
match  01ed0ea670cc  7d9552ac2cf7  cpuset: initial patch
match  ed5a1b8f94eb  4b51a16fea48  cpuset/cpus: don't propagate changes to empty descendant cgroups
match  c7ce745aa914  82dd8a5d0d2b  net/sched: restore "mpu xxx" handling
match  de2e4b220199  d90978b38495  ve/printk: printk virtualization
match  1312ceb946cd  105414570c10  ve/printk: per-CT printk helpers introduced
match  201238ab84a4  2ff6399bed28  printk: Add touch_all_softlockup_watchdogs() to console_unlock()
match  3b93e5c683dd  2b92fad134ac  fs/quota: Compatibility with older quotactl interface
match  36360d0af0e4  b30a77e0a1e3  ve/quota: allow to manage quota in top CT user ns
match  cea36775a91a  3f781910c61f  quota: missing lock in dqcache_shrink_scan()
match  6e5f0ab1ef36  01ca4ab3f5a0  proc: Show vcpu in do_task_stat()
match  0d11cab72724  fc1a02636aff  fs/proc: enhance proc_fd_access_allowed() and provide appropriate error code to callers
match  328fd0b73435  1fc3df745fba  fs/proc: print fairshed stat
match  f801dbe22822  3802a3d5a204  ve/proc: restricted proc-entries scope
match  34086ef5c8c2  53b5b0bcca43  blkcg: Hide not allowed device from /proc/devices
match  23ca09843176  635a6b55f928  ve/proc/block: Show CT allowed partitions in /proc/partitions
match  1cffea914c6c  e00781ac4de9  ve/proc: use memcg limits for showing oom_score inside CT
match  713c11cc48f2  17be108b5214  ve/fs: drop useless d_root_check()
match  04504982d6db  f1c1cb7185c0  ve/proc/time: Port diff-ve-proc-report-real_start_time-in-_proc_PID_stat-if-CONFIG_VE
match  1e004ccc190e  c6c516f49331  ve/proc: fix mangling cgroup mount source path in container
match  999187d7e89d  711a2ee394f2  ve/proc/net: proc_net_create() helper introduced
match  a528270d4f88  275abea35579  ve/proc/net: virtualize all the network proc entries
match  e8f46ff60605  3b7a3b696105  ve/proc/net/nr_cpus: cut lines in /proc/net/softnet_stat to number of vcpus in CT
match  13506f22ebb0  46ab38de481a  ve/module: hide module refcounts from container
match  676865e51c4a  808594accf43  sysctl: Change sysctl::show_unhandled_signals default
match  072513992c37  6fdedbbeea99  sysctl: make hotplug, printk and mmap_min_addr accessible inside a CT
match  fc731aee1346  be4e005e183f  ve/sysctl: write permission restriction
match  6a5e9fc1d10b  063dc907ba7d  ve/sysctl: implement virtualized methods
match  0baa1712459e  80dd580f137e  ve/sysctl/ipc: mark as virtualized
match  1f59192db1ad  e29f70742b2c  sysctl: make may_detach_mounts immutable in CT
match  9e1332672c71  a18d9e7971a3  ve/sysctl/pidns: allow to change sysctl "ns_last_pid" from containers
match  aba8ce1e658c  7533e6ce21d1  ve/sysctl: allow to write kernel/hostname and kernel/domainname entries in container
match  9508cd154412  a11143b64fa8  ve/sysctl/net: allow "net.unix.max_dgram_qlen" sysctl in CT init userns
match  76e25fb1373d  1d800b9f37d3  ve/sysctl/net: allow net.ipv4.vs.* in CT init userns
match  979b987ae2b1  29142e041d4b  ve/coredump: virtualize kernel.core_pattern sysctl
match  b5b7c352edff  6a061fbc8803  ms/coredump: fix unfreezable coredumping task
match  b05125899009  30944ec4bf5c  ms/sched/numa: fix unsafe get_task_struct() in task_numa_assign()
match  9cf1b4d6be78  de989cafb6ca  delayacct: Add stats primitives
match  0cd8c520f1e7  789c66783e75  kernel: Account nr_zombie and nr_dead
match  438c354e58de  4bcd010c12b9  sched: Count rq::nr_sleeping and cfs_rq::nr_unint
match  733a8f25883e  18398d08a79e  sched: Account cfs_rq::nr_iowait
match  b096322dcb33  b1e80bbd66fc  sched: Add primitives to calculate nr running, sleeping, stopped and uninterruptible tasks
match  5051672aa882  a394f679d719  sched: Account task_group::start_time
match  881a0dd20644  b38c796e5150  sched: Change show_state() view
match  ec110a592087  e2a35d5089a4  sched: Account ve_task_info::sleep_time
match  d35e7a2a8178  53e3da5cf0a3  sched: Export per task_group statistics_work
ok     7b7fdcdea0dc  33110a8359fd  sched: Add cpulimit base interfaces
match  5f1056db8d19  20ac0c516e2a  sched: put setting scheduller under CAP_SYS_ADMIN (instead of SYS_NICE)
match  cad09df896a8  13a0f3381551  sched: prohibit setting affinity from inside a CT
ok     1f15e0f1f149  fe0546b1d504  sched: other changes
match  64130fce4693  53440fc383d4  sched/stat: initial patch
match  b042d2ab4615  2c8ca79a2923  sched/stat: account ctxsw per task group
match  1e220d563830  1cb1b981123a  sched/stat: account forks per task group
match  2dda8cdbe3c9  4b6af03cd886  ve/sched: port nr cpus limit
ok     46306aeca404  b82bcad644cb  ve/sched: port vcpu hotslice
match  845889d5546f  a03b9b4c3124  sched: Port diff-sched-initialize-runtime-to-non-zero-on-cfs-bw-set
match  43924e50e646  1dfe6ea49321  ms/sched: Port diff-sched-increase-SCHED_LOAD_SCALE-resolution
match  5fcc6c6ef3a3  f9963feb6a72  sched: Port diff-sched-clear-prev-entity-if-curr-is-dequeued
match  9fc9950ed321  e681f1abdcc0  sched: Port diff-sched-return-only-virtual-cpus-in-sched_getaffinity
ok     d1ac80050ead  eddd72bc2443  sched: Port cpustat related patches
match  e96625f6bd05  55be7c04bda0  sched: Port diff-sched-make-nr_cpus-limit-support-hierarchies
match  6aaa5021e28b  a0b8a70819eb  ve/sched: Hide steal time from inside CT
match  ca6689823ba3  ddc6e2a11e7e  sched: disable dumping cfs info on sysrq trigger
match  a94d10582961  c55fb0e3de60  ms/sched/core: Fix unserialized r-m-w scribbling stuff
match  bdeaa46ccead  9f772d1d9090  ve/fairsched: Resurrect proc fairsched files
match  527293c95162  f8ad828be3a7  sched: use topmost limited ancestor for cpulimit balancing
match  9c51fb2c965f  8c9d0515746a  ms/sched/fair: Initialize throttle_count for new task-groups lazily
match  f968c7b476fa  88064f1b7db2  sched: debug: show nr_failed_migrations_cpulimit
match  c78974b4898a  73c5289a0f30  ve/sched: make load balancing more agressive
match  c9593b9fbdcc  a52b0d7962da  ms/sched: Fix race on toggling cfs_bandwidth_used
match  fde707454757  053b4dd56230  ve/sched: sched_show_task: call task_ve_name() under RCU lock
match  2899d7d003a3  46255655d3d8  ms/sched/numa: Fix use-after-free bug in the task_numa_compare
match  7f1ee594cf9a  a1a6ca62eb2f  sched: Count loadavg under rq::lock in calc_load_nohz_start()
match  63eb85ce55e7  30ae5219692d  OpenVZ 7 config file
match  2181f7675150  c6505b034b2e  ms/epoll: fix use-after-free in eventpoll_release_file
match  e4cfaf558410  74ec7a6e7237  ms/epoll: Make fdinfo to always success
match  faef4965d4be  ed835086e9f1  fs: Lower ioprio in case of ioprio_set() called from CT
match  0a9505713897  2eb69ba7e9fc  fs: Show saved signal mask in /proc/[pid]/status
match  0bed0cc5535d  961b16cdab22  fs: Split statfs_by_dentry()
match  548d1bace2ac  d5b653298dc4  fs: Restrict ve sync methods
match  253dba98fb2e  75a21266ca91  fs: Mask appropriate filesystems FS_VIRTUALIZED
match  7f577e2f63a2  8ee641c53851  fs: exec_mmap() arg corrected
match  58b3bb78e52e  bba9e7ef6164  ve/fs: Port diff-ve-fs-allow-to-remove-swapfile-hardlinks
match  099e13dae028  a4498ef72b56  VE/FS: allow to mknod inside ct
match  41f101182c32  79c11ab6c168  ve/fs/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  ce36347fff6f  0f73b24588d2  ve/fs/namei: check containers capabilities in may_linkat()
match  d1123777889a  9351c7408a7b  ve/fs/namei: fix capabilities check in sys_renameat2 () to support Containers
match  c8185523bca5  7e7094e0e9b9  ve/fanotify: Use ve-capable instead of plain capable test
match  68a03f0acc58  178da772dc3d  ve/fs/locks: Make CAP_LEASE work in containers
match  c88292931b1f  776e59e4fb1e  ve/fs/autofs: mark autofs as virtualized
match  064d3f0c8d29  1598ab9af4c7  ms/autofs: show pipe inode in mount options
match  a5582cd922c0  f9e0726c7514  VE/FS: containerize filesystems access
match  60c214d2c69e  5f9f317b7ac8  ve/fs: mark virtual filesystems as virtualized
match  f780767e3c02  576f2b259bbc  ve/fs/nfs: NFS containerization
match  0334b09e84e8  0ce7daec8ad2  nfs: abort delegation in dying VE
match  2be73d7cf366  a22d941fc8a0  ms/NFS: Don't call COMMIT in ->releasepage()
match  df2ff25851b9  8de3ab641b31  ms/NFS/CIFS/SUNRPC: don't allow to freeze execution
match  bba8b630fd8a  5ebe2fabbbe5  ve/fs/nfsd: NFSd containerization
match  94cbe61b287f  7d03a2959107  ve/sunrpc: containerize kthreads
match  1f406816dc70  f9f7ed2e6430  ve/nfsd: enable UMH client tracker in a container
match  254ff5322ae7  1ce4136209ea  ve/nfsd: disable legacy recovery tracking for containers
match  eca2ee4132b1  2ec9c0dcc2a1  ve/nfsd: do not print nfscld warning in a container
match  3dc676b283b0  698a790e8c79  nfsd: return file system superblock time granulaty on FSINFO request
match  6ed96e82562c  03a505d47c0b  ve/fs: virtualize devtmpfs file system
match  d3b28efb63ba  ab878ea9dd17  ve/fs/devpts: don't require newinstance
match  a5a43574dd78  63c61c932bfb  ve/devpts: Assign containers @devpts_sb on first mount
match  3645be5d5655  3da70e7f6159  ve/fs/binfmt: move all internal data to structure
match  d83829348033  183f5d68e473  ve/fs/binfmt: virtualization
match  d7be0da7a30c  67dc0d3fe586  ve/binfmt_misc: destroy all nodes on ve stop
match  4e83ced8517e  4e17f1f1240f  ve/fs: introduce "fs.fsync-enable" and "fs.odirect_enable" sysctls
match  061062142a1f  09d457070b19  rh/fs: introduce "fs.relatime_interval" sysctl
match  f6dff03c6c45  dfed35abd791  rh/fs: unwind changes on shift_arg_pages error path
match  d20a68d8fd94  26ecacfb4d44  vfs/nfs: add set_flags wrapper
match  4b18a7fd92c9  487368014308  fs/shmem: skip "relatime" in shmem_parse_options()
match  10b801ca11a6  d88467fa2bd3  tmpfs: shmem_fallocate must return ERESTARTSYS
match  fc408623f126  230ad5a8bec9  fs: add fadvise file_operation
match  19b56025be0e  decac393ed24  ve/fs/ioprio: confine ioprio_{set, get}(IOPRIO_WHO_USER) to current ve
match  0f5c99cf480e  56249c0c675f  mm/fs: Port diff-mm-debug-memallocation-caused-fs-reentrance
match  6cecd63a62d2  5f6bb7163dfa  ve/fs: Port diff-ve-fs-security-check-for-mount
match  2ff7ae00888d  016c4f3e28f0  ve/fs/inotify: do not impose limit on the number of instances by default
match  f2427751aef3  cc4c0af84a96  ve/fs: Allow to mount ext4 and binfmt_misc under non-root ns
match  a781a9657d0b  9f6b73fdf2a2  ms/fsnotify: Make fdinfo to always success
match  a3a80e8e90b2  41a1db86ee0a  ve/fs: add per-VE limit of mount points
match  306c00f3c621  45aa7a331e1b  ve/fs: namespace -- Ignore device permissions during restore
match  f5bdcdc253e2  bb2a9ccb215d  ve/fs: namespace -- Don't fail on permissions if @ve->devmnt_list is empty
match  fdcc7459d580  e8dcf025848d  ve: remove sysctl_fsync_enable and use ve_fsync_behavior instead
match  705dc5f5dc25  e0f41ae9a0c3  fs: fix accounting pipe buffers to kmemcg
match  1730301795df  3d6e4192ab79  ve: remove sync_mutex
match  eb45a76e2422  8bed4d6adccb  ms/fs/super.c: fix WARN on alloc_super() fail path
match  c0d69528132d  3d301dbcbc61  fs/block_dev: fix NULL ptr deref in freeze_bdev()
match  65f406501f18  964aeaef98bc  ms/fs/file.c:fdtable: avoid triggering OOMs from alloc_fdmem
match  8de9338acfbc  d625c4dd77c3  ms/fs: Fix race when checking i_size on direct i/o read
match  625f75a34726  789e19368239  fs: FIEMAP should sync only required range with FIEMAP_FLAG_SYNC
match  b3b0aeecc475  54ef03941a42  fs: ioctl_fiemap must check what filemap_write_and_wait_range returns
match  6242d1a4eb1c  22ffbb4d72b8  ve/fs/writeback: filter per-container inodes earlier
match  95f2031aa056  4f6563d8bd6b  ve/fs/overlay: allow overlayfs to be used inside a Container
match  e90260eb93c0  a5fd25c488ef  overlayfs: unmark overlayfs as tech preview
match  377a1f77f690  4da7b581e4c2  fs/aio: kernel direct aio
match  e7bea52bbd51  983b85cd33fa  ve/fs/aio: aio_nr & aio_max_nr variables virtualization
match  7ca9c79f8530  29938ebaa794  ve/fs: Export fs.aio-max-nr via ve cgroup
match  ecb65c48cc7d  ac15fe38baa2  ms/aio: Multiply passed nr_events in io_setup()
match  2b600e3931f4  7acaa8db90de  ve/aio: Add a handle to checkpoint/restore AIO context
match  9108f29bf997  8e0ab8926367  fs/ceph: honor kernel direct aio changes v2
match  f7371bcf09e9  830634363bb0  pid_ns: Virtualize pid_max
match  bd82a5f18e59  d9d059f45357  PIDNS: implement change_pid_ns()
match  1795385f6e1e  c90372ce228a  ms/pidns: Make the pidns proc mount/umount logic
match  a6000bf87b2c  e08d6eef9f83  pid: export symbol nex_pidmap
match  ac9c53a63fad  874659c628cd  pidns: Disable pid allocation if pid_ns_prepare_proc() is failed in alloc_pid()
match  274a274fb4a6  21de544d0bf4  pidns: add proc mount option 'hidepidns=0|1'
match  e6725c41d1e4  cc4f15c2d780  signal: make SIGKILL top priority signal
match  93aff3dfca3e  34c6bb17df03  ve/signal: Ignore signals from wrong ve
match  0b2099a93ef9  22bf9090e35e  signal: don't rearm a posix-timer if siginfo was queued from user-space
match  f7bc77e2ee05  cc0688a41d05  Use ve init task's css instead of opening cgroup via vfs
match  383603f95630  d00e2c014fd1  ve: add one more SHUTDOWN hook chain
match  9d90f65a5331  55658440044c  KMAPSET: set of key-value mappings with build-in
match  67ff86910bb1  f74ff4d7cfe0  drivers/core/sysfs: respect ns when removing sys dev link
match  5bc7d3657a80  f554cba54dc7  ms/cfq-iosched: remove @gfp_mask from cfq_find_alloc_queue()
match  d557d68ddadf  5c1d16340ca3  ms/cfq-iosched: simplify control flow in cfq_get_queue()
match  9208a8480bb4  e227eafce5ed  ms/cfq-iosched: fix async oom queue handling
match  29a9d2b195f4  111eea409817  ms/cfq-iosched: fix oom cfq_queue ref leak in cfq_set_request()
match  9c54a792d332  59695e0263d8  block: Export disk_type,block_class and disk_name
match  0091889ca1a8  ddca945fe5b0  block: suppress hard lockup warning in elv_drain_elevator
match  77ab1ba70281  396cecc6fb1f  kthread: make of a new kthread's queuing code to a callback
match  26d795119708  ef0441a06d36  ve/kthread: kthreads creation facility introduced
match  26d14991214d  8790cc1f0b36  ve/kthread: introduce kthread_run_ve() helper
match  d72b8781fdef  6e15f139ce99  ve/kthread: khelper kthread in a container introduced
match  a2fd276d52a2  83a0cbc88045  ms/mpi: revert "Remove unused code from MPI library"
match  05c5b3ec5e74  983bf4860965  ms/mpi: revert "Revert "crypto: GnuPG based MPI lib -
match  63cd6b7ef6cc  07c7c1e06727  mpi: export arithmetic functions required for in-kernel DSA implementation
match  4d746c07f33f  3ab3c1015967  config.OpenVZ: OpenVZ related config options are added
match  2423994cfa8c  002586520f3a  bcache: check correctly for bcache cgroup subsystem presence
match  9189d6424020  6f9bbda6aacf  config: enable BCACHE as a module"
match  4762d52c93d0  9524c2488bad  VE/sysrq-trigger: make it VE-namespace aware
match  ecc0bca99402  76b0370ba6c3  radix-tree: save previous gfp_t tags in radix tree for dirty memory accounting
match  f05c7bf377dc  4c354f5ba356  ve/posix-timers: reference ve monotonic clock from ve start (v2)
match  a8358c8c4f22  c403c56811c7  timers should not get negative argument
match  7e74c8ea7fb3  e074083f8d78  ve: Add interface for @start_timespec and @real_start_timespec adjustmen
match  9d8b4b6cf952  b37ba1a9d7a1  ve: Use @real_start_timespec in uptime_proc_show
match  06f2fa841267  ad9e96d6e3a6  ve/futex/timeout: adjust futex timeout to absolule
match  e2c09ff56237  9b6343741760  ms/netfilter: Add {ipt,ip6t}_osf aliases for xt_osf
match  9ff01b956aa4  c694d5cf77fd  ve/netfilter: Basic ve transformations
match  b3f5cfe4b040  d1d466a4c093  ve/netfilter: Restore revision 0 "iprange" match support
match  6ca2495817cb  e6be77d7ef4f  ve/netfilter: Restore revision 0 "mark" match and "MARK" target support
match  222e6e0d45e4  14b66fe4407c  ve/netfilter: Restore revision 0 "tos" match support
match  a931e5e2d595  cb96396e5063  ve/netfilter: Restore revision 0 "TOS" target support
match  dd40cd7a241d  35d862306dd8  ve/netfilter: Restore revision 0 "connmark" match / "CONNMARK" target support
match  1cb40b16b4b9  b7915bd68c93  ve/netfilter: MARK -- drop off @table entity to support rhel5 containers, v2
match  51c7cb8e4ccc  5a71bd009920  ve/netfilter: Restore revision 0 "owner" match support
match  dff09fcf3980  c30834beed9a  ve/netfilter: Restore revision 0 "conntrack" match support
match  a7ec8803b2b8  e48a10d0217c  ve/netfilter: Implement ip_conntrack_disable_ve0 module option
match  54ccef4d921d  847d91dc8e6c  ve/netfilter: Implement net_ipt_permitted() etc
match  afbfc7fa3b40  3e502641729a  ve/netfilter: Add pernet permission checks in ip_tables
match  f47d68243b09  5e7ebbd9f834  ve/netfilter: Implement pernet expect_max / virtualize "net.netfilter.nf_conntrack_expect_max" sysctl
match  d4c5d823e963  d8873a6e10d0  ve/netfilter: Implement pernet net->ct.max / virtualize "nf_conntrack_max" sysctl
match  16a1093ff1ba  b971f3cf8b84  ve/netfilter: Add autoloading of sockopt modules
match  64531341e6f6  f50ae7b1be03  ve/netfilter/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  cd000cb9a85e  6bdb160333f7  ve/netfilter: Check for permittions while looking for target and match
match  e526297e16a6  e10334050e10  ve/netfilter: ve_printk for "nf_conntrack: table full"
match  90a8b72d7bcd  c74f585ced0b  ve/netfilter: allow adding matches from the container initial user namespace
match  364bc294ccd3  a4c123362811  ve/netfilter: get UID and GID from container user ns on rule match
match  7536a2059ce9  0e823d7f08e9  ms/netfilter: x_tables: check for bogus target offset
match  f2e24ad717bc  e1665f3fa6c1  ve/netfilter: use ve_printk for BUGPRINT in ebtables
match  2bff5c8b66e6  3756ee7de34f  ve/netfilter: rectify nflog inside CT
match  c0ca99615735  d426ce74145f  ve/netfilter: rectify ebtlog inside CT
match  32528c3e4c41  d498d2e93203  netfilter/x_tables: account entry offsets allocations
match  e0f79fb85e74  6df0ceaf45d1  ms/netfilter: nfnetlink: correctly validate length of batch messages
match  0a4c96e86cdd  81efde175798  ms/netfilter: x_tables: avoid warn and OOM killer on vmalloc call
match  e0d5f42ddccb  208ecc0c3a8a  ms/bridge: drop netfilter fake rtable unconditionally
match  6c212f21f8db  26d54c40a72f  netfilter: ve_ipt_permitted() helper introduced
match  ac7463c2911d  3d15c3aa094a  netfilter: check per-ve netfilter status on actual operation
match  d8c1ab94f607  db4937853538  netfilter: always create per-net "filter" tables objects
match  abd5552a2f1e  2c7a789650bd  netfilter: always create netfilter per-net objects for ipv4/ipv6
match  3c02f614abc1  98bfd9a8fae8  ms/netfilter: Allow xt_owner in any user namespace
match  d7b195cc5665  74782aa26943  config.OpenVZ: enable netfilter module xt_match_wdog_tmo
match  c43ad002d14c  e440f57cc09f  ms/netfilter: Restore xt_connlimit version 0
match  344817708bf6  2b1a4f53fc25  ve/nf_conntrack: allow expose of priviledged sysctl inside containers
match  d9c8c4936256  6c29cda32b80  ve/nf_conntrack: expose "nf_conntrack_max" in containers
match  0afce2fc3ff5  dee48df3d354  ve/nf_conntrack: expose "nf_conntrack_acct" in contaners
match  2b3b94672b33  ab1581d0efc8  ve/nf_conntrack: expose "nf_conntrack_events*" in contaners
match  1b4a3fb1dd2b  b32c062103ba  net: Primitives to enable conntrack allocation
match  88b09e6dc80f  783872817535  net: Mark conntrack users in xtables
match  9ed6c2a9306a  88c2fcfa9df7  net: Mark conntrack users in nftables
match  f104aef10f08  d389de639332  net: Add dependence xt_socket match on nf_conntrack_ipv4
match  4c512c02c821  5b53337ba983  netlink: allow to set peeking offset for sockets
match  0782490d859f  1308c086c7b9  netlink: add an ability to restore messages in a receive queue
match  640d744b1f04  09a770c997a2  netlink/diag: report flags for netlink sockets
match  292220b7eba7  9f76623ad147  ve/netlink: allow messages with family PF_BRIDGE type RTM_xxxNEIGH in CT
match  27d9797ada13  17f5335c6642  ms/netlink: fix an use-after-free issue for nlk groups
match  dd5109d0a557  1a24342a4405  ub: Add pty accounting
match  72b6b62c1adc  d179c5cc3131  ub: Add flock accounting
match  55748f4d0878  bf0897d2c7e2  ub: Show ub memory on sysrq mem show
match  dad45a29a325  4beeccbf2f98  ub: Account file struct
match  64872bc671f9  93d24f744c55  ub: Add address_space::dirtied_ub
match  5829a0712d9e  0d1a228e90b7  ub: Split meminfo_proc_show()
match  7622f26715cc  f7bf4d4975b7  ve/proc: Port diff-ve-proc-add-buffers-field-to-meminfo
match  93b26e061e75  ee417430e88b  ub: Show task ub info in /proc/[pid]/status etc
match  5383ec26fcbf  b182ee47d119  ub: Account siginfo
match  f17ca25e0fdd  d7c654b4dd06  ub: Set ub0 to do softirq
match  71e9fb5e3ad5  2b0ceb715da7  ub: Add dirty page accounting
match  aaa5e443c6e5  494af05d15a0  ub: Execute posix timers in ub0
match  889d219085f7  de9dfda70e81  ub: Track task mm ub
ok     027cebd2f36c  04ab93706a45  ubc: initial patch
match  324084044a51  2ba50f7ea8b6  ub/netfilter: account x_tables to ub
match  bfc3722a77ac  9485971baa75  mm/bc: Port diff-bc-shmem-fix-accounting-on-error-path
match  7108334bd097  08b15b9b045b  ub/memcg: introduce ub_total_pages
match  0a670253b24d  b2d04ed6b092  ub: ressurrect ioprio_set IOPRIO_WHO_UBC
match  4dcc948cb652  d6868ee075aa  ub: ressurrect iostat and ioprio reporting
match  83cc5fa0827b  dd1117e54b3d  ub/fs: account writeback io
match  41cd662ee711  4cef08fc5283  ub/fs: resurrect sync accounting
match  a6a869fa6cf9  39193508f75c  ub: sync exec_ub on fork
match  4138628068ca  e4de82527158  ubc: proc show stats in ve user ns
match  c31d23b65082  6a8c7f8c7185  ub/fs/writeback: per-CT fs writeback
match  aae493baab65  398625eff058  ve/fs/sync: per containter sync and syncfs
match  c3d34c9fb9ee  ab0ce6d92ded  ub: show swapin/out in /proc/bc/<bc>/vmaux
match  6134da3d70c2  da8f748bd21b  ub: add heuristic check for memory overcommit
match  f7dcccf233e4  40290532bd0a  vznetstat: apply vznetstat patches from 2.6.32 as is
match  45b39aaa38dd  bd9ac67d963b  vznetstat: Port diff-vznetstat-support-of-resetting-of-traffic-statistics-on-running-CTs
match  edfd955fce24  f69220f1c185  vzlist: add vzlist from 2.6.32-x as is
match  7ba41f047208  e72717783215  dummy: add dummy modules for service vz init script
match  4f5d88312c2d  f16b8d9da1b7  ms/mm: save soft-dirty bits on swapped pages
match  fafffa25b2dc  08bd3dff3f81  ms/kmemcg: don't allocate extra memory for root memcg_cache_params
match  0e3ce5876418  9a6ebe7b4d06  ms/mm: softdirty: clear VM_SOFTDIRTY flag inside clear_refs_write() instead of clear_soft_dirty()
match  615454ef5821  298d95209b95  ms/mm: softdirty: keep bit when zapping file pte
match  b6b453578d91  81c26cbc2f57  rh/mm: Drop off Live Kernel Self Migration (TRACK_DIRTY_PAGES)
match  f0a29b3d8c97  9d9af492a0cb  mm: Add oom_group to set custom oom_score_adj
match  0a8ca1bbffd9  1e4da3faa66b  mm: Do not leak node data to CT's /proc/vmstat
match  42db02e92b72  948b77accb6d  mm/swap: comment about managing swap inside a CT
match  f81332f7e9eb  0f3a74d24001  mm/swap: do not uncharge on reuse_swap_page
match  0abcf62cca1d  b16cd870f40e  mm/fuse/oom: Show writeback_temp stats in oom message
match  f63f790bac42  4f283d2cb578  mm: add independed bio pool for swapout
match  c5071184144a  1fae7e27c582  mm: make task with TIF_MEMDIE die faster
match  a1ad897cc755  340e38d62838  ms/super: fix calculation of shrinkable objects for small numbers
match  e2edf59c7492  deeadff80bd9  ms/dentry: move to per-sb LRU locks
match  9aef18c003f6  547bf10a441e  ms/dcache: remove dentries from LRU before putting on dispose list
match  e06f7d3ee36d  e08624e12078  ms/mm: new shrinker API
match  53f1ef5b1463  376df8e8d96a  ms/shrinker: convert superblock shrinkers to new API
match  bda536473f30  226c489794ac  ms/inode: convert inode lru list to generic lru list code.
match  a796a7bbe1b2  6d5fec247ee6  ms/inode: move inode to a different list inside lock
match  a6f12c549cc6  428e2070e572  ms/shrinker: add node awareness
match  08b414ac3efc  f0acb58b5f17  ms/vmscan: per-node deferred work
match  71550a7e03d7  46e31f4854fe  ms/fs: convert fs shrinkers to new scan/count API
match  2ad156863603  06d7ba8c92de  ms/drivers: convert shrinkers to new count/scan API
match  b1405f2465d9  f95301c9a5c7  ms/hugepage: convert huge zero page shrinker to new shrinker API
match  fba710701211  d0d6d004ff0e  ms/shrinker: convert remaining shrinkers to count/scan API
match  893fd22c69dc  129026a056cd  md/raid5: use new shrinker API
match  e007ba55d1cd  b2f1eccf86b4  ms/shrinker: Kill old ->shrink API.
match  b3cba7fc5522  824073aac7a7  ms/dcache: convert to use new lru list infrastructure
match  30aa01ac4a75  06041ea5fecd  ms/list_lru: remove special case function list_lru_dispose_all.
match  0aabefdb0027  f7b22625833b  ms/fs: convert inode and dentry shrinking to be node aware
match  ac497b691632  4db4e4c85665  mm: workingset: convert shrinker to count/scan API
match  855219948628  9ba71ce36758  ms/list_lru: dynamically adjust node arrays
match  728d547608e9  67b8fffdbf17  ms/super: fix for destroy lrus
match  55b35b7d8a9e  dbc3b8804d54  ms/fs/super.c: fix lru_list leak for real
match  9c34bb2efdea  714854e4e292  ms/vfs: fix dentry LRU list handling and nr_dentry_unused accounting
match  480ef098dcc8  aaa96ac61622  ms/memcg: use css_get() in sock_update_memcg()
match  792f497fa7db  b7be17597833  ms/memcg: use css_get/put when charging/uncharging kmem
match  40a599ff0944  fb991decbaae  ms/memcg: use css_get/put for swap memcg
match  8f3607df959e  5610f1dcfbd8  ms/memcg: don't need to get a reference to the parent
match  28b4d1c92603  509382db526d  ms/memcg: kill memcg refcnt
match  7addb31d369c  d47eb9dbde97  ms/memcg: don't need to free memcg via RCU or workqueue
match  ef7c067357ff  b05b9e49d500  ms/memcg, kmem: use is_root_cache instead of hard code
match  68815c5d188e  5f8f06583dd8  ms/slub: adjust memcg caches when creating cache alias
match  baa2939260a5  ced2bc616da2  ms/slub: rework sysfs layout for memcg caches
match  7c023206b8a7  dd9c4ae00e47  ms/sl[au]b: charge slabs to kmemcg explicitly
match  95689dab6799  f63ea2b99a1c  ms/slob: Rework #ifdeffery in slab.h
match  7e19429d05a3  de7d3f7e0e98  ms/mm/sl[aou]b: Move kmallocXXX functions to common code
match  368a019c2ac6  5616868e594e  ms/memcg, slab: merge memcg_{bind,release}_pages to memcg_{un}charge_slab
match  e61ae3c65052  def58fc3184d  ms/memcg: get rid of memcg_create_cache_name
match  ca6a447c9abf  9cf10eade870  ms/memcg: memcg_kmem_create_cache: make memcg_name_buf statically allocated
match  b008016f19a9  995af333e745  ms/memcg: cleanup kmem cache creation/destruction functions naming
match  dea837c63e30  176e05336dec  ms/slab: delete cache from list after __kmem_cache_shutdown succeeds
match  e5983189bac0  6aa2e12f6a26  ms/mm: vmscan: call NUMA-unaware shrinkers irrespective of nodemask
match  bf65881527de  2be1210aef53  ms/mm: vmscan: respect NUMA policy mask when shrinking slab on direct reclaim
match  0d194f1b9652  e599a86f2632  ms/mm: vmscan: move call to shrink_slab() to shrink_zones()
match  7717710a9f2b  906f9f9a7e42  ms/mm: vmscan: remove shrink_control arg from do_try_to_free_pages()
match  ec495881326b  6a7052aa2b48  ms/memcg: move memcg_{alloc,free}_cache_params to slab_common.c
match  c0119edd9551  bb81241f60de  ms/memcg: don't call memcg_update_all_caches if new cache id fits
match  5c73951e8c86  e369f26aa65f  ms/memcg: move memcg_update_cache_size to slab_common.c
match  45a719d76083  e329996aa555  ms/memcg: zap memcg_can_account_kmem
match  6b5e243828e9  1e7b75a2177d  ms/mm/slab: Sharing s_next and s_stop between slab and slub
match  b8df45a2c84e  3c99a3efcd50  ms/mm/slab: Give s_next and s_stop slab-specific names
match  9ac160000ba9  72d275882e41  ms/slab: print slabinfo header in seq show
match  7ec3188ec438  4c186fe6d7ad  ms/memcg: use generic slab iterators for showing slabinfo
match  ca70ad73aeeb  5d4c95caf0a7  ms/memcg: fix possible use-after-free in memcg_kmem_get_cache()
match  1cccf4e6012c  db1483dba141  ms/memcg: zap __memcg_{charge,uncharge}_slab
match  d56a7fcc1c22  2726fb7365ac  ms/memcg: zap memcg_name argument of memcg_create_kmem_cache
match  543d5b4874c3  f03937c96ac0  ms/slub: fix memcg_propagate_slab_attrs
match  f625af6cf347  7db20907ac43  ms/slub: use sysfs'es release mechanism for kmem_cache
match  c3e9e3e8bd0e  c0cbe604b386  ms/memcg: zap memcg_slab_caches and memcg_slab_mutex
match  ff9026617115  2662eb194f1b  ms/mm: vmscan: invoke slab shrinkers from shrink_zone()
match  50e1f230641c  92b9346948f7  ms/list_lru: introduce list_lru_shrink_{count,walk}
match  a668caae28a2  132c30e5f750  ms/fs: consolidate {nr,free}_cached_objects args in shrink_control
match  8dfd87d259c0  ca874ecc6a00  ms/vmscan: per memory cgroup slab shrinkers
match  c7284b9fd07e  80b63147c602  ms/memcg: rename some cache id related variables
match  5b545e2404fd  604fe05f5eb3  ms/memcg: add rwsem to synchronize against memcg_caches arrays relocation
match  1c6c49b2b48c  a0fc6f141e09  ms/list_lru: get rid of ->active_nodes
match  08c6ddf4db6e  d5822f8c085f  ms/list_lru: organize all list_lrus to list
match  0030d1bf4411  e0ca769709ff  ms/list_lru: introduce per-memcg lists
match  eedbc3597a9e  85674c99087a  ms/fs: make shrinker memcg aware
match  7ca936aa644d  a5b00f2aaf39  ms/mm/slab_common: move kmem_cache definition to internal header
match  896ca5f29ecf  3ec8e402a565  ms/slab: embed memcg_cache_params to kmem_cache
match  6b3fd62859b3  e1135445f88e  ms/slab: link memcg caches of the same kind into a list
match  28bc5bb24bb3  ce65a81e7700  ms/memcg: free memcg_caches slot on css offline
match  ae2baa26f154  3e6ca552d544  ms/list_lru: add helpers to isolate items
match  b329ea1c782e  6615cf8ebefa  ms/memcg: reparent list_lrus and free kmemcg_id on css offline
match  d735640236ae  3a79d71c23e9  ms/slub: fix off by one in number of slab tests
match  db6ea3cf8f95  5efe98fea897  ms/slub: never fail to shrink cache
match  9a46c1054047  84f5e43c752e  ms/slub: make dead caches discard free slabs immediately
match  6b5c677bfeeb  dd1b1b8d7226  ms/memcg: port low limit
match  c94d8c4835f3  0d4f01a34b9a  ms/fs/ocfs2: copy fs uuid to superblock
match  be84b168890e  be8782d6e06b  ms/cleancache: zap uuid arg of cleancache_init_shared_fs
match  eefcf260840a  b7d4d4eb45c9  ms/cleancache: forbid overriding cleancache_ops
match  3cd1fc8921b4  9048bf54a554  ms/cleancache: remove limit on the number of cleancache enabled filesystems
match  414e3f64c585  e57431ced2e7  mm/vmscan: Introduce PF_MEMCG_RECLAIM task flag to identify memcg reclaim.
match  d93226f12a19  197f6738d426  mm: introduce transcendent file cache
match  3e82ab684827  6efa7be490e2  memcg: allow to disable cleancache per memcg
match  6c2cd61dc8eb  d0c5fea9a9e0  mm/frontswap: invalidate expired data on a dup-store failure
match  5fa55ad5638a  c605a9232588  mm: transcendent swap cache
match  53c7f0261056  4c78153ccb1c  meminfo: show size of tcache
match  e80f21320d41  be08a4f2bf40  meminfo: show size of tswap
match  b33b48a0960c  3e6854ea8d3e  fs/cleancache: fix data invalidation in the cleancache during direct_io
match  a409308e1909  461ed253cf62  cleancache: avoid pointless cleancache_invalidate_inode() calls.
match  2ad2ab49efde  b74f1a9f0c46  ve/mm/cleancache: count only successful put in the cleancache_puts counter
match  4359a34310a2  c4bb7a3f6949  tswap: Add optimization for zero-filled pages
match  b0d4bbd96c2c  531aa7269fd2  ms/mm/vmscan.c: don't forget to free shrinker->nr_deferred
match  0696b06845f1  e0f2a937a007  mm/memcg: remove memcg from kmemcg_sharers list on css free
match  6695945674a5  60c4f1f9c02a  ms/mm/memcg: do not use vmalloc for mem_cgroup allocations
match  d2921f77e482  33397ff415bc  memcg: add oom_guarantee
match  f43d507b15ce  f730b3e924f7  memcg: count oom kills
match  d6d2a770a103  44a46a27faa7  ms/memcg: port memory.high
match  6c61e9ce316e  c006bc3ec757  ms/memcg: do not call high reclaim if !__GFP_WAIT
match  8d5df24810a1  016705acf9c9  ms/memcg: issue memory.high reclaim after refilling percpu stock
match  36e2646c41b0  4feb2eaa4118  ms/headers: Support GCC 5
match  6a5b7d99fdf3  070251f8d192  mm: Port diff-mm-add-sysctl-vm.force_scan_thresh
match  dc72c94effd5  d70b69ff89e7  mm/compaction: fix too_many_isolated()
match  9efd946925d5  eef6c7bd7cb3  ms/mm/vmscan: never isolate more pages than necessary
match  8cf77419efa5  ac05974348a5  ms/mm/vmalloc: use wrapper function get_vm_area_size to caculate size of vm area
match  d70fd57f1916  7b4b2daf0f20  ms/MIPS: Use NUMA_NO_NODE instead of -1 for node ID.
match  951ee8caa20a  ee93c4af5551  ms/mm: move slab related stuff from util.c to slab_common.c
match  4bbe0a36ab1c  8353a497db4e  ms/mm: slub: SLUB_DEBUG=n: use the same alloc/free hooks as for SLUB_DEBUG=y
match  b885bdccf949  879b54e72bed  ms/kasan: add kernel address sanitizer infrastructure
match  14bc566c483e  f5b48ddc23dc  ms/kasan: disable memory hotplug
match  edf4857389fc  38019a18ba10  ms/x86_64: add KASan support
match  7c6dac6f42a6  c58b2e36be97  ms/mm: page_alloc: add kasan hooks on alloc and free paths
match  b210a8ef94d4  85ac24500b25  ms/mm: slub: introduce virt_to_obj function
match  d84eff68dbe3  cf9afefe7f25  ms/mm: slub: share object_err function
match  ad4ea599db51  4d5465a41291  ms/mm: slub: introduce metadata_access_enable()/metadata_access_disable()
match  6d93a2d0b16c  c3ee1e14687d  ms/mm: slub: add kernel address sanitizer support for slub allocator
match  63afcfb97f7f  1a99c64632a5  ms/fs: dcache: manually unpoison dname after allocation to shut up kasan's reports
match  dc6a9d87f090  df7b6f8fe7ad  ms/kmemleak: disable kasan instrumentation for kmemleak
match  12b811b2da0c  a488d6955aec  ms/lib: add kasan test module
match  89404d93f2e0  06d45821cc4a  ms/x86_64: kasan: add interceptors for memset/memmove/memcpy functions
match  16596f247faf  0e92118a2604  ms/kasan: enable stack instrumentation
match  3036601756e7  bfde319c13e5  ms/mm: vmalloc: add flag preventing guard hole allocation
match  36cd873b4cf1  3da94e0a924b  ms/mm: vmalloc: pass additional vm_flags to __vmalloc_node_range()
match  7c6caef9fb0e  0d7d3a67fad8  ms/kernel: add support for .init_array.* constructors
match  7d1079924639  d2d6fdb15c9c  ms/kasan: enable instrumentation of global variables
match  eafd89f0ac28  5bd561253696  ms/kasan, module, vmalloc: rework shadow allocation for modules
match  52088dcb3193  47a1b8005efd  ms/kasan, module: move MODULE_ALIGN macro into <linux/moduleloader.h>
match  949c8610b60b  4aaa286af4b4  ms/mm, mempool: poison elements backed by slab allocator
match  3df8919372b3  d46cb9b94742  ms/mm/mempool.c: kasan: poison mempool elements
match  702972898ebc  7e064e03c27a  ms/kasan: Makefile: shut up warnings if CONFIG_COMPILE_TEST=y
match  525675c7a3da  e65fdc3fbd69  ms/x86/kasan: Fix KASAN shadow region page tables
match  326ad7338c2d  443cf76d71d1  ms/x86/kasan: Flush TLBs after switching CR3
match  af3ec669a9cd  b0b66783c3c2  ms/x86/kasan: Fix boot crash on AMD processors
match  e1df276d9878  c8ae89945c67  ms/x86/kasan: Add message about KASAN being initialized
match  5e3b3f3abf50  d06972cb9921  config.OpenVZ: add KASan support for debug kernels
match  124fb4009e48  c5a58d3b89c3  mm: vmscan: fix the page state calculation in too_many_isolated
match  7dbb5f259259  806cc910d538  mm: vmscan: fix do_try_to_free_pages() livelock
match  8c7093ab3dc1  0c9f900c7021  vmalloc: account to memcg/kmem
match  1f79efb1f9af  61ca0f934009  fs: account anon pipe buffers to memcg/kmem
match  490bfa89f2fe  75e2bade855b  pipe: uncharge page on ->steal
match  bf97001a7e1b  c7df79eefe3a  gfp: inc __GFP_BITS_SHIFT
match  8c9b97b3cd64  9be178957ee4  gfp: add __get_free_kmem_pages helper
match  fc2b273cd567  031b673d2da5  arch: x86: charge page tables to memcg/kmem
match  c167d8665b96  d2b3819a28d8  mm, slub, kasan: enable user tracking by default.
match  858b68d983bc  fa3deb904fec  kasan: update reported bug types for not user nor kernel memory accesses
match  3fcb8ab6b799  f8343de2b972  kasan: always taint kernel on report.
match  a77f0b229bd8  62a96aa02812  kasan: introduce single-shot mode and enable it by default
match  639063b2064a  565f48f28369  kexec, kasan: increase KEXEC_AUTO_RESERVED_SIZE under CONFIG_KASAN=y
match  75e2a9e59470  d91195625770  memcg: do not loop in mem_cgroup_reclaim if killed
match  8ca17e34d9d0  e04c91ea303d  ms/memcg, oom: lock mem_cgroup_print_oom_info
match  b004a8c535a7  0e046ea9cecb  ms/memcg: change oom_info_lock to mutex
match  cb70d0493765  ee430fe50463  memcg: do not allow to disable oom from inside a container
match  e9257b5e3eac  c60a7faa28dd  ms/x86/asm/entry: Create and use a 'TOP_OF_KERNEL_STACK_PADDING' macro
match  e445e7c5b56e  144aac7d52ad  ms/x86/process: Add proper bound checks in 64bit get_wchan()
match  7d4be460a8ae  be138eb3c026  ms/x86/process: Unify 32bit and 64bit implementations of get_wchan()
match  daeaeb470d6a  f0f9103c1067  ms/x86/mm, kasan: Silence KASAN warnings in get_wchan()
match  28892ea51102  d8c04ed05be0  ms/memcg: add page_cgroup_ino helper
match  99e79b5a14c0  4457bc17cfbb  ms/proc: add kpagecgroup file
match  9ab24a44ab52  829df352f942  ms/mmu-notifier: add clear_young callback
match  bacce2d665b7  3146dafaf317  ve/mm,oom: print information about ve of killed task
match  5fe41e3fa47b  893bc37f3bb2  ms/include/linux/kmemleak.h: needs slab.h
match  fd8da188c8e9  e9ba7e3f36e3  ms/kasan: fix kmemleak false-positive in kasan_module_alloc()
match  1337c05c3cba  d981a481f05f  ve/mm: allow container's root to ignore mlock limit
match  a5faf6107ece  a1e7a66fdde8  ve/mm/page-writeback: Introduce per-CT dirty memory limit
match  737872696562  20a3ffdfb1d8  ub/mm/writeback: do not check dirty limits for ub0
match  3a92cfdf951f  40355036518b  memcg: never fail kmem allocations
match  1a3e9f40eefa  9a53c7ab31c8  ms/vmscan: do not force-scan file lru if its absolute size is small
match  870fff1817c1  038a8e900b1b  memcg: ignore memory.low for cgroups w/o tasks
match  e7ef71bb02d7  6b8390c0b22a  ms/slub: use lockdep_assert_held
match  a2f4c1001c8e  f6cef9fd07c2  ms/slub: do not assert not having lock in removing freed partial
match  4ad66d2b85e3  56d6407d8117  ms/mm: slab: free kmem_cache_node after destroy sysfs file
match  4c7eb2dafc52  98612fa25b9e  mm: memcontrol: add swapin/out stats
match  75b8aa4c8690  0db0eb52dd35  mm/vmalloc: add v[mz]alloc_account helpers
match  fc70db4d3796  e0b1331fa71a  arch: x86: fix accounting page tables to kmemcg
match  63ca79b52725  ac21d2f5edaa  mm: memcontrol: account shmem pages
match  83aebef92b1b  c17eccf00eec  ms/memcg: make mem_cgroup_read_{stat|event}() iterate possible cpus instead of online
match  1439f58a7c4d  63eea578286c  rh/memcg: make mem_cgroup_sum_all_stat_events() iterate possible cpus instead of online
match  6fadb668b995  782e9bfd4d70  ms/dcache: dentry_kill(): don't try to remove from shrink list
match  5f65c43c3147  901199bebd87  ms/dcache: don't remove from shrink list in select_collect()
match  094736d95a16  64ab9628e3eb  dcache: zap dentry_lru_del()
match  2c045503e8f4  3e7609977f30  ve/mm: introduce min threshold for dcache
match  e89618cb039d  b1aebdef5858  ms/dcache: don't need rcu in shrink_dentry_list()
match  0f40305007a4  164517dbf888  ms/dcache: lift the "already marked killed" case into shrink_dentry_list()
match  664aaa5b7ff4  ee92c36af80c  kernel/sysrq: reset watchdog on all cpus while during sysrq-w
match  53925f66bc54  b6bd8b38c68a  ms/kernel/sysrq: restore touch_nmi_watchdog() in show_state_filter()
match  d78460703fe1  ea3866225d0e  ms/mm/kasan: print name of mem[set,cpy,move]() caller in report
match  7e53802d6066  7148ddcc24d2  ms/mm/kasan: add API to check memory regions
match  415eb079dfd8  b085412efbc7  ms/x86/kasan: instrument user memory access API
match  acfb7ef9270f  ad2801f720ed  arch: x86: don't charge kernel page tables to kmemcg
match  65a751fa3fc8  635ef7b1ff43  mm: memcontrol: drop memcg_kmem_commit_charge
match  9cfafa4b9fae  dfa308652b46  mm: charge/uncharge kmemcg from generic page allocator paths
match  72b98f274374  6cf02ffc1842  ms/mm: memcontrol: reclaim when shrinking memory.high below usage
match  c05aa4c50f86  e808691824b4  mm: vmscan: never wait on writeback pages
match  b24b2b54964b  0cc5e065cca2  config: disable numa balancing by default
match  b000cdb26fd2  d6083f8d9dc3  mm: memcontrol: fix race between user memory reparent and charge
match  0d90c75c3498  262bcac31489  mm: default collapse huge pages if there's at least 1/4th ptes mapped
match  dbf01df2cb43  e23dfbcca488  mm/page_alloc: don't return freed pages from alloc_pages()
match  1bb245ae6019  e0959b649bbe  mm: memcontrol: add memory.numa_migrate file
match  07e32bf9ed26  12414bd14fdc  ms/mm: replace remap_file_pages() syscall with emulation
match  931410e27d63  5345b69f6ca3  ms/mm: drop support of non-linear mapping from unmap/zap codepath
match  7a2c52812886  a220af21bef1  ms/mm: drop support of non-linear mapping from fault codepath
match  db5a5f82d8f8  4ffb6bde8367  ms/mm: drop vm_ops->remap_pages and generic_file_remap_pages() stub
match  482e12f18f29  6e3060e7cc38  ms/proc: drop handling non-linear mappings
match  52e15df3d43f  6c1bf69ce316  ms/mm: remove rest usage of VM_NONLINEAR and pte_file()
match  517ee5b376a0  137afbb489e4  ms/mm: fix regression in remap_file_pages() emulation
match  83f84c477017  e14f4ef5f72f  mm: memcontrol: fix race between kmem uncharge and charge reparenting
match  cd1aa1460c1c  01a028518bf6  ms/memcg: rework memcg_update_kmem_limit synchronization
match  81ae568d2eca  5f0620cfe995  ms/mm/slub.c: list_lock may not be held in some circumstances
match  175dfae03cb0  8f1d2c5933b1  ve/prctl_set_mm: allow to change mm content in ve
match  17f80bcde453  78fe93a24c4a  prctl: reduce requirements to exe link change
match  1ac49d86ba4c  0ca74d0c14a8  prctl: remove one-shot limitation for changing exe link
match  72611e5dbc31  381f8cbb90a4  ms/shm: add memfd_create() syscall
match  7183863b6e4e  47da5471b7fe  ms/selftests: add memfd_create() + sealing tests
match  fd33a2f6d9c4  ff08eb09dbc1  ms/selftests: add memfd/sealing page-pinning tests
match  62d2712244cf  5f05a4068c2c  ms/rmap: drop support of non-linear mappings
match  84f7e5c70276  13649722e084  ms/mm: replace vma->sharead.linear with vma->shared
match  19a6c4aab0fc  725171dcf113  ms/vhost/net: extend device allocation to vmalloc
match  8b2d25fccc59  0074ad5bb276  oom: do not dump all tasks info on each oom kill
match  d0abc07106b4  b72fc86be827  ms/mm, oom: remove unnecessary exit_state check
match  e37c1d3a7a0b  f3d9bd5155b8  ms/oom: add helpers for setting and clearing TIF_MEMDIE
match  1929aabab843  79564ab7c9d0  ms/oom: thaw the OOM victim if it is frozen
match  4eb0aa5f8af9  86f6c8b4bd02  ms/mm: oom_kill: clean up victim marking and exiting interfaces
match  111a0cb4a863  92ed3f81baed  exit: clear TIF_MEMDIE after exit_task_work
match  957695f244ed  57b3f04cf6bc  memcg: add lock for protecting memcg->oom_notify list
match  98fbb0b78cbc  d7179f3c568e  oom: rework locking design
match  f7856d2be703  dcf20ad1eb46  oom: introduce oom timeout
match  fe49eb071a26  fd51319f4fc3  oom: drop OOM_SCAN_ABORT
match  b1e5acc19664  2996f73d109a  oom: rework logic behind memory.oom_guarantee
match  d61e5691f7ad  eb61510bdb19  oom: pass points and overdraft to oom_kill_process
match  ec94f6e2d959  e4314043eb99  oom: resurrect berserker mode
match  058008b5779f  7451712f4f25  ve/memcg: do not ignore oom_guarantee for unlimited cgroups
match  4ab8e3cac097  64b222f801dd  oom: do not select child that has already been killed
match  91d04ab1d852  eb4f2b0310b8  mm: memcontrol: check more carefully if current is oom killed
match  fe2d94c578f1  87ff1cdf60a5  oom: do not ignore score of exiting tasks
match  6d1edf14b842  1f3dd3a38e0e  oom: zap unused oom_scan_process_thread arguments
match  c959c67f954a  c70add0203eb  oom: make berserker more aggressive
match  b20381894432  ac257063f802  oom: fix NULL ptr deref on oom if memory cgroup is disabled
match  f343b7aff4fb  b82736ad2386  ms/freezer: Do not freeze tasks killed by OOM killer
match  b77629155da5  b242f72826a7  kernel/freezer: don't freeze stopped & about to be ptraced task
match  ca23918ca78a  499dcbac6eae  net/mm/tcp: Charge socket buffers into cg memory (v3)
match  e0076e13086b  52629c55cfa5  net: resurrect parent_cg_proto()
match  6312412bd587  c4cf1feb1ab6  net/mm/tcp: Limit orphan sockets per-cg
match  73da1f8e0b65  96dd19155fd0  net/mm/udp: Charge ingress buffers into cg memory
match  ca219e20cfbb  3b63db611428  mm/netlink: Make all in-cg memory be kmem accounted
match  314b9776dd29  93976d0ad180  net/mm/packet: Pre-account maximum socket buffer into cg memory (v3)
match  55e1f97f5692  78108bab717b  memcg: add mem_cgroup_get/put helpers
match  28dd16a502ca  47ad995b958b  mm: memcontrol: fix meminfo:SUnreclaim output in containers
match  925ee5e52234  a12b9ebf7b04  mm/memcontrol: res_counter -> page_counter transition
match  c891d9e67caa  3f0fb835a31b  ms/mm: memcg: inline mem_cgroup_charge_common()
match  622685495d91  59c6f38b225a  ms/mm: memcg: push !mm handling out to page cache charge function
match  23862d41994f  3c660f732454  ms/memcg: remove unnecessary !mm check from try_get_mem_cgroup_from_mm()
match  69a82f8b8c95  47e5bb67db1e  ms/memcg: get_mem_cgroup_from_mm()
match  1f141e88411f  98f5faf2cef8  ms/memcg: do not replicate get_mem_cgroup_from_mm in __mem_cgroup_try_charge
match  5b8df01abbf0  ade4de369a07  ms/memcg: sanitize __mem_cgroup_try_charge() call protocol
ok     7d846aa8a521  ab2d3825e7cf  ms/mm: memcontrol: fold mem_cgroup_do_charge()
match  c6addb6d73a0  0ad1f0491cc5  ms/mm: memcontrol: rearrange charging fast path
match  dbdf33ceeb9b  1174278f0107  ms/mm: memcontrol: reclaim at least once for __GFP_NORETRY
match  3584891f0313  b01893bb719d  ms/mm: huge_memory: use GFP_TRANSHUGE when charging huge pages
match  13fcb7e2fd7f  38d65fe9ec39  ms/mm: memcontrol: retry reclaim for oom-disabled and __GFP_NOFAIL charges
match  181ba78abc88  a5be5eea9c76  ms/mm: memcontrol: remove explicit OOM parameter in charge path
match  527dec57c482  65180dc541e2  ms/mm: memcontrol: simplify move precharge function
match  c69bf9520071  1e49ea259ef2  ms/mm: memcontrol: catch root bypass in move precharge
match  e72a7fea3da4  cde4fd258e14  ms/mm: memcontrol: remove ordering between pc->mem_cgroup and PageCgroupUsed
match  bc44ae78c524  00e2fa8390b7  ms/mm: memcontrol: rewrite charge API
match  1e3181fedefe  05bcc168b431  ms/mm: memcontrol: rewrite uncharge API
match  710d67c7263c  7c809766bfe0  ms/mm: memcontrol: use page lists for uncharge batching
match  4d2414cf06e5  8759facdbf21  ms/userns, pidns: Force thread group sharing, not signal handler sharing.
match  96596393aedb  1d9a8d7efafd  ms/mm: memcontrol: revert use of root_mem_cgroup res_counter
match  e926800e81e4  51fb718b06b5  ms/mm: memcontrol: teach uncharge_list to deal with kmem pages
match  6056d603f567  a3340c7288ec  ms/mm: memcontrol: only mark charged pages with PageKmemcg
match  73d3ccaf8339  c41f32a6a7c1  mm/memcontrol: fix shmem accounting
match  5c86d21446ca  1fd08e64665f  ms/mm, oom: remove task_lock protecting comm printing
match  412a89f6c10d  817fb75028f5  ms/mm: memcg: fix race condition between memcg teardown and swapin
match  1186357feb2c  c3c2ebcaa0b1  mm/memcg: fix kmem pages uncharging uncharge_batch()
match  fd8750503826  41a2671636ce  mm/memcg: make __memcg_activate_kmem() to actually activate kmem
match  d359314ea9e7  756d5f1af5b3  ve/memcg: enable kmem accounting for all cgroups
match  791ea1f1b1ad  1ffb1f6cfdaa  mm/memcg: don't release memcg->css too early
match  19aa86e733d9  ca5d18cca0ff  ms/mm/memcontrol.c: fix order calculation in try_charge()
match  4ba3f9e08870  97586d9ee52c  mm: fix false positive WARN on fs reenterence
match  dfc1be1d93d0  eb12dfcf8581  ms/mm: prevent KASAN false positives in kmemleak
match  edff3a29c9ab  ecf73c5870c3  mm/memcg, ub: fix overflow in mem_cgroup_apply_beancounter()
match  6b9ac20cd1a0  089baf230fdc  ms/mm/memcontrol.c: fix the margin computation in mem_cgroup_margin()
match  b68fc7872fe2  030f9972dc6c  ms/mm/list_lru.c: avoid error-path NULL pointer deref
match  90a53f2dbb32  a84b4c0cdea8  ms/memcg: make mem_cgroup_read_stat() unsigned
match  5f6371f43687  32392f9b172f  ms/mm: larger stack guard gap, between vmas
match  a4bfb046e1c1  d022afe7c621  ms/mm: Follow-up for "larger stack guard gap, between vmas"
match  30fb78143196  c19a5ce03321  ms/vmscan: fix increasing nr_isolated incurred by putback unevictable pages
match  29e2738bb8bd  43980a8c5baf  ms/mm: vmscan: reduce size of inactive file list
match  086185c64a35  8984b5fcc58e  ms/mm: vmscan: fix IO/refault regression in cache workingset transition
ok     941996c7d91c  eccd25f72fca  mm/memcg: reclaim memory on reaching kmem limit.
match  5f54d81e5519  e30d2389ad5d  ms/x86, efi, kasan: #undef memset/memcpy/memmove per arch
match  151b4dc260af  735c96f40256  ms/mm: use sc->priority for slab shrink targets
match  efbd2f0a66d9  cfc7b3a02c89  mm/memcg: reclaim only kmem if kmem limit reached
match  2d35a7556e72  4cae3e224157  ms/mm/huge_memory.c: respect FOLL_FORCE/FOLL_COW for thp
match  4e026a23af6b  0373edf07189  mm: Add rcu field to struct list_lru_memcg
match  78592255da93  62c69d7e5507  mm: Make list_lru_node::memcg_lrus RCU protected
match  c3d9fd4861a4  e54eed1f5dfc  mm: Count list_lru_one::nr_items lockless
match  974d2a210ed5  bbcf614b067b  mm/memcg: sleep if mem_cgroup_force_empty_list() stumped on busy page
match  4af52a2102c5  9a40e32cccf5  kasan: show gcc version requirements in Kconfig and Documentation
match  211e0c95c7d1  453e0b7059d5  Documentation: kasan: fix a typo
match  6a423c778993  3fca98c6fed8  kasan: various fixes in documentation
match  0fd2af10a222  a7c5696df288  mm, kasan: SLAB support
match  fad035a5e4df  9d8546a9f996  mm/mempool: avoid KASAN marking mempool poison checks as use-after-free
match  34cbcb38ac80  638ea9e0abee  mm, kasan: add GFP flags to KASAN API
match  bfca5f91801b  be36e8dfd772  arch, ftrace: for KASAN put hard/soft IRQ entries into separate sections
match  7acafbbd5027  13b09998257c  mm, kasan: stackdepot implementation. Enable stackdepot for SLAB
match  dc3e17f3fe14  0dd9e10954f1  mm, kasan: fix compilation for CONFIG_SLAB
match  f30e2b64224d  64e4502ff453  mm: kasan: initial memory quarantine implementation
match  61d5de60e71d  9f0efa831325  lib/stackdepot.c: allow the stack trace hash to be zero
match  d2d589dba07c  44f0489aa5dc  lib/stackdepot: avoid to return 0 handle
match  eefa267fc540  13781a7f86a9  mm, kasan: don't call kasan_krealloc() from ksize().
match  02db61b18238  ced06a65ffd0  kasan: add newline to messages
match  e10109c6fa0a  f57bb591c531  kasan/quarantine: fix bugs on qlist_move_cache()
match  40e404b63985  52d2ff5413c6  mm, kasan: switch SLUB to stackdepot, enable memory quarantine for SLUB
match  7910eddcc7ad  58e1c7d87c62  lib/stackdepot.c: use __GFP_NOWARN for stack allocations
match  360ad0db2fac  b94a5f4186f0  mm/kasan: fix corruptions and false positive reports
match  c516779c6683  981d2aa2cf49  mm/kasan, slub: don't disable interrupts when object leaves quarantine
match  631ffba2eaf1  bf695e86be5c  mm/kasan: get rid of ->alloc_size in struct kasan_alloc_meta
match  ca3b8e541f98  b8d8578021f7  mm/kasan: get rid of ->state in struct kasan_alloc_meta
match  67c2d4eeba50  7028fc9211c0  kasan: improve double-free reports
match  6b51a915fbed  7bde2d47ecea  kasan: avoid overflowing quarantine size on low memory systems
match  7c30c9204426  03cb577b40df  x86, kasan, ftrace: Put APIC interrupt handlers into .irqentry.text
match  de48328cf2e2  4bf76ce4d92d  kasan: remove the unnecessary WARN_ONCE from quarantine.c
match  a7a94536a900  9f5a332b7a43  ms/mm/mempolicy: Add cond_resched() in queue_pages_pte_range()
match  a23f1422295d  14b4d121cf8d  kasan: update kasan_global for gcc 7
match  33fe00137940  bf78e1cbe514  kasan: eliminate long stalls during quarantine reduction
match  f960ed2a53e7  468412f0eae8  kasan: drain quarantine of memcg slab objects
match  25cb60059947  6240b87828bb  kasan: fix races in quarantine_remove_cache()
match  d235eee8d498  faf4652aaf19  ms/mm: mempool: kasan: don't poot mempool objects in quarantine
match  21f701e8e12c  1e2db0c70b6d  ms/kasan: support panic_on_warn
match  3d8aa7173ead  dd1404bd30d7  mm: issue panic() on bad page/pte bugs if panic_on_warn is set
match  333d511134ab  ecd1c31c1a8b  mm/memcg: Don't enable interrupts too soon.
match  9f156a609f2f  4644f0f3b866  memcg: charge kmem allocations accounted to UBC in PCS6 to memcg
match  e646b70bd05c  6739a9ddf8d9  ms/x86/coredump: use pr_reg size, rather that TIF_IA32 flag
match  9248385ecdb3  5f9cf178d0f1  ms/x86/ptrace: down with test_thread_flag(TIF_IA32)
match  3af5b425809e  c8aa40fb0ef3  ms/x86/signal: add SA_{X32,IA32}_ABI sa_flags
match  65fcdf88e17a  06a9ddc42ef1  ms/x86/signal: Remove bogus user_64bit_mode() check from sigaction_compat_abi()
match  3d5dade40bff  985e16fd2846  ms/x86/coredump: Always use user_regs_struct for compat_elf_gregset_t
match  7bde4a326cd6  8affcf646034  ve/audit: allow changing loginuid for VE root
match  a1eb902d10cb  fe3532f0b2be  ms/audit: fix a double fetch in audit_log_single_execve_arg()
match  2f23923d36ff  1b07279e10e3  ve/tty: Disable /dev/console in VE environment
match  60cadd53b81d  c6a455ae063f  ve/tty: vzcon -- Add container dummy console support
match  c1e607cc2742  7009fa172d80  ve/tty: console -- Enhance container console to support per VE ops
match  78228b1a8ef9  264d45e99e5d  ve/tty: vt -- Add dummy stubs
match  82c0b1978358  4cc943da99f3  ve/vt: Drop debug vars from console code
match  1c9b2ad0ff4f  8b2e03456f42  ve/tty: vt -- Fix nil dereference due to race
match  5255ea786245  a55d31e6bdb6  ve/tty: vt -- Implement per VE support for console and terminals
match  67a062bb8def  6b84b385dab1  ve/tty: Use ve_capable in vhangup syscall
match  fb511329aeee  083e9c79054d  ve/vtty: Make indices to match pcs6 scheme
match  1f4c3ad95b20  21c05ac33f2d  ve/vtty: Don't zap termios fields on slave peer
match  af1f8238fe62  3a94629150cf  ve/vtty: n_tty -- Allow write on sole slave vtty peer
match  a46dcee52535  de0b965c2f83  ve/vtty: Don't close unread master peer if slave is nonzero
match  35356418a6e4  4da7ccfdedd7  ve/tty: vtty -- Drop TTY_PINNED_BY_OTHER bit
match  d0356b115416  dc906943d90d  ve/vtty: Don't free console mapping until no clients left
match  00cffb01be53  bc3521a81b5c  ms/tty: Fix unsafe ldisc reference via ioctl(TIOCGETD)
match  ed1a7deb5505  607f2343669a  ms/TTY: n_hdlc, fix lockdep false positive
match  dcda3742f38d  63dd6f1e2954  ms/tty: n_hdlc: get rid of racy n_hdlc.tbuf
match  eef8ace457a0  c190d1b53d1a  ve/kmod: Port autoloading from CT
match  3248b693fb1d  16560dcb4652  ve/kmod: Add rules for autoloading (new) nf_tables
match  aa48d13a3d66  0e2ced1cc4d0  ve/kmod: Add rules for new {ip, ip6, x}table modules
match  19c6cd1ac886  5a9e0a4e210c  ve/kmod: allow to autoload nf_log_ipv[46]
match  5f00dd933bab  6c4213d8e6da  ve/kmod: list of allowed to autoload in CT modules
match  bce1ab5825a8  b8f09224927a  ve/kmod: Add modules to whitelist for c/r sake
match  dc23f05f85e0  f0ff1c5a420d  ve/kmod: Allow netfilter conntrack inside VE
match  ede56001d484  1680d7c21b39  FIXME: to drop: ve/kernel/taint: Port diff-taint-message-enhanced-with-dump
match  0e0f04242997  b825dc82f757  ms/kmod: remove false positive warning "waiting module removal not supported: please upgrade"
match  c8f9382fd9f3  b24dff7820e3  ve/kmod/whitelist: allow overlay fs module autoloading
match  20fb3e3d5f7f  042d26b56e7b  ve/kmod/whitelist: allow dummy module autoloading
match  856e39d02333  a08b3f2ab8fb  ve/kmod/ebtable: allow to autoload ebtable_* modules from inside a CT
match  fea513b5d0d3  fc9c9bc172d3  ve/net/vxlan: enable support and autoload in a container
match  58b368b1fe18  2feefececd0d  ve/net/ipvs: allow IPVS modules autoload in CT
match  624ec2061ce5  50156008522e  ve/netlink: allow IPVS netlink messages to CT init userns
match  6eaf2b7db645  3dbf14641ca3  ve/netfilter/ipset: allow modules autoload
match  8f0bf8b7fb75  9e37516482d3  ve/net/ip6tables: fix autoloading of the ip6table_raw module from CT
match  fda63b5d7b53  b419bf6421cf  ve/modules: allow NFS modules autoload in Containers
match  b4f04ec8311c  21e7ac94d56b  ms/netfilter: ipset: fix ip_set_list allocation failure
match  9c9f4438b79e  be8eac7da3d1  ms/netfilter: account ebt_table_info to kmemcg
match  85652767956a  dc2fa75c40df  ms/net: sock: move ->sk_shutdown out of bitfields
match  6c939847d781  e91d09b2f406  net/af_unix: charge buffers to kmemcg
match  6a16eb7863a4  2c197deb3f8b  ms/af_unix: move unix_mknod() out of bindlock
match  895773c8879d  ba991c8164d7  ms/af_packet: remove a stray tab in packet_set_ring()
match  19e7ba241da3  ec8ccf8e70ce  net: packet: rework rx/tx ring pages accounting
match  29e273c19ee4  ac82dc22eacc  ve/netns: limit number of network namespaces per container
match  43d77349ff52  764d692d4f7e  ve/pid: Export kernel.pid_max via ve cgroup
match  862fdbae063b  7a84d09fd7ce  net: Add ipv6 statistics cpu notifier
match  0dcd692cf45a  2d02daf68e57  net: Allow pass cpu mask into snmp_fold_field{, 64}()
match  749c30430388  34243aee217f  net: Iterate only online cpus in __snmp6_fill_stats64()
match  42b3cdb95f1c  34bfef0a2195  rh/net: add recursion limit to GRO
match  ebf19ff82057  2ee866f9e1ff  ms/net: ip, diag -- Add diag interface for raw sockets
match  c7bf4a963151  5659e1272b09  ms/net: ip, diag: include net/inet_sock.h
match  30449b0190ab  e84b2433b4a2  ms/net: ip, raw_diag -- Use jump for exiting from nested loop
match  470c41758716  97f757799e58  ms/ipv6: add IPV6_HDRINCL option for raw sockets
match  2a5fc9a2acf2  3b13689e10fe  ms/net: raw sockets diag interface compilation fix
match  45112a174580  45f3477b1cad  ms/net: sysctl: fix a kmemleak warning
match  f0aaae12b26a  fce6a35099f9  config.OpenVZ: add and enable INET_RAW_DIAG - RAW: socket monitoring interface
match  4ab7910168c1  62a31a9edb1d  ms/net: prevent of emerging cross-namespace symlinks
match  02054fbccd06  7a0f9833ce0c  ms/net: fix creation adjacent device symlinks
match  51b7343b3fd0  b082644c92bc  ms/neigh: disallow un-init_net to change thresh of neigh
match  b5fd3082d06a  ae5c33dcb371  ms/udp: must lock the socket in udp_disconnect()
match  1378975018a9  3980005e463a  tcp: sendpage should not handle Slab objects
match  efb3f3a27f31  00458f29da15  net: fix false-positive deadlock detection for sk_receive_queue lock
match  1cea206ed0a8  08bac9b3c9ef  ipv6/sit: account and don't WARN on ip_tunnel_prl structs allocation
match  812aceb436d2  125d5bad2b97  core: Add glob_kstat, percpu kstat and account mm stat
match  93cf1e3aec75  6d76d2504acc  sched: Account task_group::cpustat,taskstats,avenrun
match  8abb8ddf94f4  23774558b8bd  ve/mm/kstat: Port diff-ve-kstat-disable-interrupts-around-seqcount-write-lock
match  4f7999ce12ed  5e9f4754eb6e  vzstat: initial patch
match  212ed79aa0ae  25f475852995  block/ploop: export put_io_context_active()
match  f64f84a69c91  bc7853ed6a9a  ext4/ploop: ask ploop about ENOSPC condition
match  37cb34470fa2  95627854974c  blk/ploop: Add BLKPG_GET_PARTITION operation
match  83871e649e7a  8397c13d754a  fs/ext3: check for CAP_SYS_ADMIN, not CAP_SYS_RESOURCE in ext3_ioctl()
match  9b3027b231ab  9e68d0df2090  fs/ext3: add_dirent_to_buf() should return an error, not always 0
match  7714a67fb984  cc3bfd5f9d57  fs/ext4: ext4_ioctl should check for CAP_SYS_ADMIN, not for CAP_SYS_RESOURCE
match  cf9df2fd9ffd  40ee7e43a18b  ext4: Teach the fs where the balloon inode is
match  785a109ae6a7  36a7ba870f62  ext4: Teach statfs to report reduced disk usage
match  99b24f04a2e0  955e6427f4cf  ext4: Don't show the active balloon to user
match  1f66d494becb  87b593781fce  ext4: Provide a balloon nipple for management
match  7a183f41df83  ead457c2dd24  ext4: quarantee rename atomic behavior
match  0cb8347787d6  48df0479be4b  ext4: make data=writeback mode safe
match  2c35f9204fdf  d9c1b7dbbdfb  ext4: pfcache_csum mount option
match  77a8fd74ee13  d7ab90af2577  jbd2: make shure that we do not miss aborted state
match  a5b3f359831a  b169db72575c  ext4: Fix error handling after filesystem abort
match  3de2b3baeff6  419edbb6b293  ext4: update defragmentation codebase
match  53cd7cea4d99  5dc432cfa637  ms/ext4: use ext4_ext_next_allocated_block instead of mext_next_extent
match  cdb44fca2f54  5bc914282d35  ext4: fallocate mode - convert and extend
match  a20edbe3ef8b  ea50b537b391  jbd2: raid amnesia protection for the journal
match  03260114e8be  4a78b265e8c6  ms/vfs: add support for a lazytime mount option
match  136de329f4dd  a90c90900d74  ms/vfs: add find_inode_nowait() function
match  924c2c9fd7cf  f2249fadf9b6  ms/fs: make sure the timestamps for lazytime inodes eventually get written
match  179fe2a50b2b  3ba72d663660  ms/fs: add dirtytime_expire_seconds sysctl
match  62c7e87b47f4  c413e3c460c8  ext4: fix race aio-dio vs freeze_fs
match  76f17abc7ca8  2a5203c58578  ve/ext4: treat panic_on_errors as remount-ro_on_errors in CTs
match  ca03180974fd  c8fb75075654  ms/ext4: improve ext4lazyinit scalability
match  19dc45af2c95  33af4615d5a5  ext4: Discard preallocated block before swap_extents
match  175d4d8967d9  03da558f6ced  ext4: add generic uevent infrastructure
match  213ef4602f6a  7beda2926394  ve/fs/ext4: allow container's root to change immutable attribute.
match  5934e763fbb6  69f1b958b462  ext4: send abort uevent on ext4 journal abort
match  27d01c72e451  809e65e0d53d  ms/ext4: improve extents status tree trace point
match  21043ba79c00  568b1cfc51ad  ve/xfs: add missing ub_io_account_dirty in set_page_dirty
match  9de1d5670823  9926b4f2730b  ext4: ext4_fill_super() should handle register_shriker() errors
match  43c201c35557  b63576cb141a  ms/xfs: convert dquot cache lru to list_lru
match  1389e5b1a72f  cd1c4b862837  ms/xfs: fix dquot isolation hang
match  98a531b986c4  3372b6461c94  ms/xfs_qm: lost hunk from "ms/list_lru: introduce list_lru_shrink_{count,walk}"
match  f65431fb0a00  54ea84558384  ms/xfs_qm: lost hunk from "ms/list_lru: add helpers to isolate items"
match  a0a3a012f9b6  47b747a1bbd8  Revert: [fs] xfs: rework buffer dispose list tracking
match  447c7a478c04  3c9027cd9404  ms/xfs: convert buftarg LRU to generic code
match  e849a9faf7ca  fc7492fba158  ms/xfs-convert-buftarg-lru-to-generic-code-fix
match  665203d7e645  c33a07ce9b32  ms/xfs: rework buffer dispose list tracking
match  997f00f8f96f  a98a3d1ed372  xfs: allow to mount xfs fs inside a Container
match  c91c3dad356c  a5f87c535d7f  ms/vfs: reinitialize error for resetart in prepend_path as in ms
match  1d70bd8d246b  bb626093685a  ms/vfs: Remove second variable named error in __dentry_path
match  915b1590eb2f  109606d73284  pfcache: add generic mapping peers
match  43c18e8306ea  4512ef69070b  pfcache: add hashed peers for ext4
match  c42af2c5bb8b  8710bc7ae61a  pfcache: iterate peer list only for shared pages
match  1e46f2c76542  89b57154a2a1  ext4: add mfsync support
match  971d413a83b4  a8469d3ee981  ext4: Add ioctl EXT4_IOC_SET_RSV_BLOCKS V2
match  6723f98505c9  5562026db3b9  ms/ext4: add optimization for the lazytime mount option
match  f90bac51cb65  2375833c6a1e  ms/ext4: fix lazytime optimization
match  032d6e25e259  71cee950c9e4  pfcache/ext4: drop pfcache csum on fallocate
match  c74bd37a5b3e  f1cf54a6cc82  pfcache: do not account peer files to memcg
match  40627a00dca2  e03f374ad12d  rh/ext4: release leaked posix acl in ext4_acl_chmod
match  dbcbe19a2b1d  934a454fb8ee  rh/ext4: release leaked posix acl in ext4_xattr_set_acl
match  fe8bd0fdaa1c  b769e20e4790  ext4: don't iterate over sbi->s_es_list more than the number of elements
match  c10403235db6  3c763b7abb47  ve/xattr: prohibit getxattr/setxattr trusted.pfcache
match  033fe1f794f8  e25954b820af  ve/xattr: allow to set trusted.xxx for container admin
match  f23ec0035301  f7cf7a53ac8b  pfcache: hide trusted.pfcache from listxattr
match  9f2bb3a135ff  ad73b0c347bb  pfcache/ub: account pfcache peer files in ub0
match  163e892448d5  1d31d4552b57  pfcache/fork: don't inherit vm_private_data on fork
match  d1f36c7ddb36  9770ea52a6ab  mm/iolimits: fix double I/O accounting for iolimits
match  97e1445614f0  94b23e76c334  sched/vziolimit: Port diff-fairsched-do-not-account-iothrottled-tasks-in-loadavg-core
match  8720279a88b0  b7837f9ceed2  vziolimit: Add vziolimit driver
match  d0d6ba29e26d  a00b21633419  vziolimit: add bc cgroup control
match  89464ec62a3a  79dc3feb484e  vziolimit: port diff-ubc-iostat-wire-vziolimit-into-deadline-io_scheduler
match  4193dda8bc59  b8319e8e94ad  cfq/vziolimits: add virtinfo hook for vziolimits
match  46bd4dea09fb  7940b1846f73  config.OpenVZ: add "vziolimit" module
match  b91569afc3c7  aa8aa9167b6d  vziolimit/fs/ext4: allow to throttle due to iolimit while reading directory blocks
match  69094f6dd327  ce2d4c3fcf6e  memcg/bc: account dcache size
match  c547235f1fa3  c96ffccc6b8a  mm: memcontrol: add stats for reclaimable and unreclaimable stats
match  1eed0137de1a  2abe6c0fede6  mm/memcg: improve mem_cgroup_dcache_is_low() performance.
match  8ff3a41ee225  bb29deba5a84  mm/memcg: get precise stat2 counters for statistics.
match  38848f74b3e7  c3c44f0609e7  arch: x86: perf_event_intel: do not taint kernel when irq loop is stuck
match  1047c1bc0597  32216df552f7  ve/vdso: x86-64 -- Implement kernel version virtualization
match  f3fb6ec9a8cc  7281aa3d7f7c  ve/vdso: x86-32 -- Implement kernel version virtualization
match  2c083f6e585a  a2305036a330  ve/vdso: x86 -- Eliminate race in vdso allocation, v2
match  a62e9bf7fddc  8edf5a856089  ve/vdso: x86 -- Disable virtualization in native x86-32 mode
match  d89dedff3bb8  8cf804d8a3bf  x86/vdso: Fix build failure with GCC5
match  192d4eb14e89  872cf6cf5035  x86/arch_prctl/vdso: add ARCH_MAP_VDSO_*
match  983f61bdd56a  0e16cce8c677  x86/vdso/prctl: fail if vdso present in ARCH_MAP_VDSO_32
match  39854a559a7d  05b84f8b551c  x86/vdso/prctl: Return size of vdso blob for ARCH_MAP_VDSO_32
match  13aa501e24a8  79c2b58ff8c6  ve/vdso: virtualized monotonic gettime through vdso
match  51795dee6882  2cf5282fbb4c  x86/vdso: Add 64-bit vdso map API
match  de10e3b2cd10  16f297cf9829  x86/mm: Support mremap()'ing vdso vma
match  98b642cfe5bd  f960ef42cca9  ms/x86: standardize mmap_rnd() usage
match  3c34d76a4656  29f7cf146417  ms/x86/mm: Introduce arch_rnd() to compute 32/64 mmap random base
match  3a4cf0e25aa4  ddebf0e36b6c  ms/x86/mm: Add task_size parameter to mmap_base()
match  da07480c4687  24cb8f49edf5  ms/x86/mm: Introduce mmap_compat_base() for 32-bit mmap()
match  7ee79b4c3810  fee8b47e5125  ms/x86/mm: Make mmap(MAP_32BIT) work correctly
match  8b684cf5c894  bdf27921b797  ms/x86/hugetlb: Adjust to the new native/compat mmap bases
match  f0b8fc7d6563  ac4ccd187061  ms/x86/mm: Make in_compat_syscall() work during exec
match  baacd8bb127d  b5a1c73b16b4  ms/mm: introduce kv[mz]alloc helpers
match  09fbf3dd9233  c2d659774e25  ms/mm: memcontrol: use vmalloc fallback for large kmem memcg arrays
match  ebfdd7434d9f  a682ab28090b  mm/memcg: limit page cache in memcg hack
match  5ee5758d1b71  37afabe8b717  ms/mm, thp: Do not make page table dirty unconditionally in touch_p[mu]d()
match  cb8f02817bc1  a9094ff6a400  ms/ipc/shm: handle removed segments gracefully in shm_mmap()
match  604b3435996f  c1e44e04f4a2  ms/asm-generic: drop unused pte_file* helpers
match  30b8b551aaaa  84ded83d4f1e  ms/x86: drop _PAGE_FILE and pte_file()-related helpers
match  d9fb1bad93df  d2147f98ec5b  arch/x86: introduce cpuid override
match  19d0eae1cd98  5b3770d92eb5  arch/x86: only enable cpuid faulting for containers
match  afb10fc55773  8c9ec3480769  arch/x86: disable cpuid faulting on reboot and cpu offline
match  170adc96acf3  d905e145ebed  x86: cpuinfo: Refactor c_start()
match  b0afb408ccf0  5748ffebb619  x86: Show vcpu cpuflags in cpuinfo
match  60d4333d2bbb  5cd7985a5a85  ms/seccomp: add ptrace options for suspend/resume
match  3b03e63344c1  3c9c737784ed  ms/seccomp, ptrace: add support for dumping seccomp filters
match  6772aeb824b3  2bca4fc9bb2d  ve/seccomp, ptrace: Save original BPF program when setting the filer
match  60a8901ee6a6  eb410ec6a201  config.OpenVZ: enable CONFIG_LOCALVERSION_AUTO
match  5e111f47f3cf  1b96d1df6e2d  config.OpenVZ: enable fencing watchdog for HA cluster support
match  8f682faca17c  9dc0dfe83068  x86: "pages zeroing on free" option introduced
match  5a989d8e83e7  94dc3edfaa0d  config.OpenVZ: enable NBD module
match  d9152df4152f  53c078862e8f  config.OpenVZ.debug: Enable audit subsystem in config"
match  2e5b0abefd7c  25b79cf0d679  config.OpenVZ: enable TAP accounting
match  ddaf17d00f91  3668af355fa2  config.OpenVZ: disable RH_KABI_SIZE_ALIGN_CHECKS
match  141cd458ff67  b17074d97c5b  config.OpenVZ.debug: enable panic-on-oops in debug kernel
match  c3287583c6bf  118d7cab844a  drivers/bnx2x: Limit setting of the max mtu
match  e5d5a67b9810  145a55618487  drivers/target/mhvtl: introduce a virtual tape module
match  3acc79260796  af89a0fe7d6d  config.OpenVZ: add mhvtl virtual tape module
match  639fdd2f7470  25032c4d8b54  config.OpenVZ: add more options (disabled) which depend on EXPERT
match  9e769de7f291  5018675ec462  config-vz: add DISABLE_DEV_COREDUMP=n option
match  46ef5450b156  6a2ffacf7dc0  config.OpenVZ: increase default value for vm.mmap_min_addr
match  97467bee1839  55b4bf0e06d6  config: Enable CONFIG_TCM_QLA2XXX module
match  3a8ef8e318f4  fcab8dbf11d5  Kconfig.openvz: force CGROUP_PERF if compiling VZ Containers code
match  ffa14c12291f  969380e55028  rh/drm: fix compilation
match  8e80242c6653  37638bfc65b6  scsi/debug: make scsi error loud
match  31014e1d3468  39eef71da3ba  debug/scsi: debug Scsi_Host recovery
match  f3497711aadc  0a0e20a7b04b  scsi: fix the issue that iscsi_if_rx doesn't parse nlmsg properly
match  322b2c4c469e  205235ebca9b  ms/mvsas: fix misleading indentation
match  440ed99a937c  c37f2f5f4b70  scsi: rollback to reset request in a request timer handler
match  493745e3cba5  c20540c9b17d  ms/scsi: libsas: fix error when getting phy events
match  28e94c9c272e  6c4bfd8fd422  trace: add debug prints to nail down busyloop in tracing_read_pipe
match  c678d3bb1e62  cfa23b26b094  irq: make definition of irq_set_vcpu_affinity() static
match  d5407bc0272e  06e30e9933b6  wait: Teach do_wait() to know entered tasks
match  3532261bb590  cad91ce98ca0  kernel: call task_work_run() before exit_task_namespaces()
match  98a37b2429e5  f0c7398fc23b  license: put correct copyrights into file headers
match  dbc1c40173f5  d5da8cdd67d2  modules: set module author for Virtuozzo modules
match  3f54de54eba4  b2629a6db987  ms/kernel: add kcov code coverage
match  d031893dbc81  3fe8895a6e68  ms/kcov: don't trace the code coverage code
match  df3eb5382bc4  7c61fbc4a2bc  ms/kcov: don't profile branches in kcov
match  2dc034b95a1a  20a9bb99b3a7  ms/kcov: properly check if we are in an interrupt
match  2e64a1127956  97e8e86a0b8f  config.OpenVZ: add kcov code coverage
match  f4206d9b8785  6bd32960d189  kcov: do not instrument lib/stackdepot.c
match  4d460525bbe1  7d84f29f6f84  lib/stackdepot.c: bump stackdepot capacity from 16MB to 128MB
match  9c27146b29dd  b0179c8b133d  sunrpc: add "kill-tasks" proc entry
match  67f85e3ac854  150fa5526c54  sunrpc: bring back SUNRPC task abort logic
match  790ca63a6f93  7676a3c813b2  sunrpc: pending tasks kill helper added
match  4f5dc5a9c936  60184ea10d92  sunrpc: fix race between "kill_tasks" set and actual task killing
match  ae28474097d4  65ace54b9716  sunrpc: use rpc_killall_tasks helper when "kill_tasks" toggle is raised
match  49d9d3c33d2c  09c354e1511d  sunrpc: do not place task to sleep if has to be killed
match  fec5d2d17b71  2852125ff33c  sunrpc: take net from task client only is available
match  c8a5699054fa  c1e518519637  ms/KEYS: don't let add_key() update an uninstantiated key
match  a8325ad4fb6c  419e361894c9  ms/keys: fallback to user_match if type->match is not available.
match  e3b5ebfdec18  9252e73c6733  dm-crypt: add ability to use keys from the kernel key retention service
match  4b45bd4d035d  8952d4b45a35  block/nbd: use REQ_TYPE_DRV_PRIV instead of REQ_TYPE_SPECIAL
match  e8163259b12c  770763ad0d8c  ms/block: fix use-after-free in sys_ioprio_get()
match  c702f2a3dd90  d6627a5084b7  ms/posix_acl: Clear SGID bit when setting file permissions
match  43237e08fb12  7a2305ce380a  ms/kernel/groups: Use __GFP_NOWARN on user triggerable allocation
match  825b5157e7c7  6f10f92cb589  ms/cgroup: fix rmdir EBUSY regression in 3.11
match  603f02561e3c  09cefe6bc8e0  ms/percpu: fix this_cpu_sub() subtrahend casting for unsigneds
match  7541d1b1b895  75f8b74790e5  ms/kernel/groups: Account group_info allocations
match  f57256250441  907b677f510e  ms/iovec: make sure the caller actually wants anything in memcpy_fromiovecend
match  93f4b01af46f  5b7c63d25b55  ms/pvclock: introduce seqcount-like API
match  20eb890eda39  8a0d17e6e20e  ms/xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window
match  20c9945e1be1  453e1b790975  ms/xfrm_user: validate XFRM_MSG_NEWAE incoming ESN size harder
match  6ae4f5454653  00aff689dec0  ms/ipsec: Fix aborted xfrm policy dump crash
match  13548eb3ee27  e936ee55907f  ms/futex: Fix potential use-after-free in FUTEX_REQUEUE_PI
match  0955177ba44b  03ca48d61b3f  ms/tracing/filter: Do not allow infix to exceed end of string
match  5262bd4213af  f96d1f4782a4  ms/pidns: fix free_pid() to handle the first fork failure
match  c049f9ccd758  d929de01989c  ms/ipc/shm: Fix shmat mmap nil-page protection
match  cbcc4c431584  da24422eb4fa  ms/prctl: Allow local CAP_SYS_ADMIN changing exe_file
match  df47a1f6cf2d  58baf1c2b1bd  ms/pid_ns: Fix race between setns'ed fork() and zap_pid_ns_processes()
match  e63d7506ff03  130e20e639c3  ms/kcmp: add KCMP_EPOLL_TFD mode to compare epoll target files
match  20ebd98e97e1  1fe442679945  ms/procfs: fdinfo: extend information about epoll target files
match  b85efbb9efae  313f395d0776  ms/kcmp: fs/epoll: wrap kcmp code with CONFIG_CHECKPOINT_RESTORE
match  1a5eab73347e  ff5fe099ddaf  ms/kprobes/x86: Return correct length in __copy_instruction()
match  994c8314dd49  eee08a405fd1  ms/ /proc/PID/status: show all sets of pid according to ns
match  0c3d36945cf3  dd6b67a5ac7c  ms/x86/spinlock: Replace ACCESS_ONCE with READ_ONCE
match  27ca55ddd0dd  cbd90130354e  ms/x86/ticketlock: Fix spin_unlock_wait() livelock
match  8a031241d102  ba45122cb222  ms/x86/spinlocks/paravirt: Fix memory corruption on unlock
match  1482125512ad  19e1e63f6c5f  ms/pty: Remove pty_unix98_shutdown()
match  8b6764762777  6974821efd6b  ms/devpts: fix null pointer dereference on failed memory allocation
match  64d56f022f0a  35259ec7a212  ms/workqueue: fix ghost PENDING flag while doing MQ IO
match  db1933355ced  d0e66e951836  ms/x86: Fix norandmaps/ADDR_NO_RANDOMIZE
match  f1c51a8ca1e7  a0c9142f30fb  ms/kernel/kcmp.c: drop branch leftover typo
match  d1435a4bcd84  39d7df7f012f  ms/trylock_super(): replacement for grab_super_passive()
match  bb236717fbb2  27e408673ecd  ms/pidns: fix NULL dereference in __task_pid_nr_ns()
match  8c6514269c94  f2b4c916961a  ms/new helper: wait_event_killable_exclusive()
match  fa6128043923  8fee61471834  ms/module: Optimize __module_address() using a latched RB-tree
match  de49ac648c65  3f35cc17c349  ms/module: Fix load_module() error path
match  87efdc42406d  ec5603132a29  ms/kernel/ucount.c: mark user_header with kmemleak_ignore()
match  a8f1eb7db69f  eb8b4cb5b4cc  connector: bump skb->users before callback invocation
match  e291d0d7db77  0541bfc5f122  connector: remove redundant input callback from cn_dev
match  86533582cde3  7237c2997174  connector: store all private data on VE structure
match  7f1924f64f16  697b7384de42  connector: introduce VE-aware get_cdev() helper
match  0abd72190603  5efe4f1a28f5  connector: per-ve init and fini helpers introduced
match  3a8599fd7582  2bbbd2030343  connector: use device stored in VE
match  555e5b2f6403  b40efaaa57dc  connector: per-ve helpers intoruduced
match  f54e0da64c20  0522c6eafdd5  connector: take cn_already_initialized from VE
match  6e0f8cbf30b2  c6d445e801d9  proc connector: generic proc_event_connector() helper introduced
match  39b4752581c0  0bb2a6e8dcc1  proc connector: use generic event helper for fork event
match  b7114818b693  79f5dda95d7b  proc connector: use generic event helper for exec event
match  e86a348ab7da  a64b2a49b25f  proc connector: use generic event helper for id event
match  ded94693d8cb  c1299ae6600f  proc connector: use generic event helper for sid event
match  19809b04909f  6d099465e699  proc connector: use generic event helper for ptrace event
match  d58d30606169  38dacfa2fef7  proc connector: use generic event helper for comm event
match  013a71a8b644  a91d83f1276b  proc connector: use generic event helper for coredump event
match  dcd7e0bcf71c  775cb7d09fe9  proc connector: use generic event helper for exit event
match  40f5d285cb6d  a9031c5b4527  proc connector: add pid namespace awareness
match  7a624faa9ad2  d83b21bc2b4f  proc connector: add per-ve init and fini foutines
match  fa478f066261  e32c546e6d88  proc connector: call proc-related init and fini routines explicitly
match  94bef201c31d  2f90cd5a3108  proc connector: take number of listeners and per-cpu conters from VE
match  6b6ef48c20c3  c5880ae0af5c  proc connector: pass VE to event fillers
match  409d1e3d4e54  6b5865772779  proc connector: take namespaces from VE
match  cf222511d213  640094232fd6  proc connector: use per-ve netlink sender helper
match  5de4f31cea52  2898027a1e96  proc connector: send events to both VEs if not in VE#0
match  c76b16072224  e64f734875d1  connector: containerize "connector" proc entry
match  5e9668d16e5c  9f65f8d7199f  connector: take VE from socket upon callback
match  ff35f9546d6c  2299c64f30d9  connector: add VE SS hook
match  2a5523dede6c  86d74ae91b38  fence-watchdog: Add fence-watchdog driver
match  c6217f17d1bd  967339a53af4  fence-watchdog: Add xt_wdog_tmo netfilter match
match  ab17076cbed7  fa10674798a8  fence-watchdog/arptables: add ability to filter by watchdog timeout
match  cc250875d286  e1f2b4f24633  ip_vzprivnet: Add ip_vzprivnet driver
match  6bf6d6f0b6d7  9fbecc43b7d3  ip6_vzprivnet: Add ip6_vzprivnet driver
match  72af8999c538  c4c3581a0cbf  vzprivnet: Enable module in configs
match  7e5a83db0db5  f884b2f3fb7f  vzprivnet: classify_write() cleanup
match  da5a108a28ab  371fa1711329  netfilter/vzprivnet: Fix memleaks of 'struct seq_operations'
match  08ddcb598af5  05c655dc17a7  ms/fuse: use list_for_each_entry() for list traversing
match  71fd8ecc978a  96e3b2ec92a7  ms/fuse: flush requests on umount
match  90aeee73f94c  c9e2f356542a  ms/fuse: add memory barrier to INIT
match  28e6b80761da  696184833810  ms/fuse: fix background request if not connected
match  686468175a9b  bcda203c4efd  ms/fuse: reset waiting
match  1b3827e333db  938791749fbf  ms/fuse: account as waiting before queuing for background
match  f408a004c0c0  53541ddba3f1  ms/fuse: check conn_error earlier
match  def56274e5f5  9d68fbc7de5d  ms/fuse: fold fuse_request_send_nowait() into single caller
match  e7117bbe4505  3d8ad2768ed5  ms/fuse: call fuse_abort_conn() in dev release
match  d6fb38c4d453  f1b579e62ec8  ms/fuse: simplify request abort
match  b3a448057f99  4e7193390981  ms/fuse: req use bitops
match  d6c99126c76a  1bc50fec12df  ms/fuse: use per req lock for lock/unlock_request()
match  2e12d2351d47  42803829d3ae  ms/fuse: fold helpers into abort
match  64226f1f3e46  d8bd000b2adb  ms/fuse: rework abort
match  698826c814e6  c6cbe4b50b9d  ms/fuse: simplify unique ctr
match  565fbb73014f  fbc27046afe5  ms/fuse: don't hold lock over request_wait_answer()
match  24776647ce86  162bb7725580  ms/fuse: simplify req states
match  d83b6c785c2d  3f6d2bcfc3c1  ms/fuse: req state use flags
match  5e9fe633291a  436aca5b494b  ms/fuse: separate out input queue
match  3898388f083c  df08a307e577  ms/fuse: duplicate ->connected in iqueue
match  d8b1bf6657c8  bd1bb90de97e  ms/fuse: abort: group iqueue accesses
match  8aaa2e267728  5d1f2d6cdfee  ms/fuse: dev read: split list_move
match  cee0c435e1f8  22887931f8c2  ms/fuse: iqueue locking
match  0aac708ac927  6393d2fb060a  ms/fuse: allow interrupt queuing without fc->lock
match  1972a4d2ad1e  772cf2ec3681  ms/fuse: no fc->lock for iqueue parts
match  9186a07cc213  f50a09c38018  ms/fuse: simplify request_wait()
match  dfd912e2cc18  790b898087eb  ms/fuse: separate out processing queue
match  d7a122e4a6a2  3ca60e7905e5  ms/fuse: duplicate ->connected in pqueue
match  e8455aa8fbfe  e16481bffe9e  ms/fuse: move list_del_init() from request_end() into callers
match  913fb569f517  cd516bb8ad30  ms/fuse: cleanup fuse_dev_do_read()
match  16095e5b0dff  e84e9fd7b170  ms/fuse: abort: group pqueue accesses
match  a0c3e4cafd8e  560da44de6be  ms/fuse: pqueue locking
match  41c2447d789e  c72713437a73  ms/fuse: add req flag for private list
match  c817c932b055  ae4003636163  ms/fuse: request_end(): do once
match  6a49c7418c45  11c850c0a3c5  ms/fuse: cleanup request_end()
match  7b212a7c52fd  80f3cec3ca46  ms/fuse: no fc->lock in request_end()
match  0d4cdc930d4d  5fa11dd3698a  ms/fuse: no fc->lock for pqueue parts
match  e95908c8fa33  8a1bfaeaf825  ms/fuse: abort: no fc->lock needed for request ending
match  552d17564394  a06749a27ccc  ms/fuse: device fd clone
match  67ffa3c3c4c2  6522bd2c27f6  ms/fuse: introduce per-instance fuse_dev structure
match  1ef719a8c119  b69dddc06604  ms/fuse: separate pqueue for clones
match  2e7ea9cf1c9d  16bde6e3c9b3  ms/fs/fuse: fix ioctl type confusion
match  feb78db40b5d  fcbf19392a17  ms/fuse: don't mess with blocking signals
match  b699187f4c59  229b7b7cc4a3  ms/fuse: use filemap_check_errors()
match  ef249fa02fb3  7391aa63228e  ms/fuse: clear FR_PENDING flag when moving requests out of pending queue
match  a542c7c6b929  6a37f1819d12  ms/fuse: fix use after free issue in fuse_dev_do_read()
match  b0a2581d180f  9cc70aba211f  ms/fuse: convert to errseq_t based error tracking for fsync
match  3b4abbb4fa53  2487be04ec9a  ms/fuse: use kvmalloc to allocate array of pipe_buffer structs.
match  3e4711c34f0b  24ed48423bf7  ms/fuse: reduce allocation size for splice_write
match  f433c9db2d88  5e4607891276  ms/fuse: Fix use-after-free in fuse_dev_do_read()
match  b1d98ea07a0d  a2418932124a  ms/fuse: Fix use-after-free in fuse_dev_do_write()
match  c9328c7719ab  2c83a028ff13  ms/fuse: set FR_SENT while locked
match  a4bcbbcd53ac  48de6cfcfa3d  ms/fuse: use list_first_entry() in flush_bg_queue()
match  705afe72f40c  2875831f117c  ms/fuse: introduce fc->bg_lock
match  a2a3f6d555c2  71c3e00a0f7e  ms/fuse: do not take fc->lock in fuse_request_send_background()
match  c86393917a2d  985193af5a57  ms/fuse: change interrupt requests allocation algorithm
match  d1cd7105a89a  e1a7a9575436  ms/fuse: kill req->intr_unique
match  c98bbe54dfa3  8dee015ba8b9  ms/fuse: fix unlocked access to processing queue
match  e1e13f912d90  4a5950b9da7b  ms/fuse: Use hash table to link processing request
match  11e6e6e5a97a  c6454f238ae6  ms/fuse: Kill fasync only if interrupt is queued in queue_interrupt()
match  26da2614ceff  5469c7d7ac14  ms/fuse: fix double request_end()
match  d3101f892cf6  8e5e3c1f4e3f  ms/fuse: umount should wait for all requests
match  3cab1a5ff81a  0208ab052d4b  ms/fuse: Optimize request_end() by not taking fiq->waitq.lock
match  fbbe9ad5572b  9ea40730fefe  ms/fuse: Wake up req->waitq of only if not background
match  19663413fecc  01ff28d73f90  ms/fuse: Add fuse_inode argument to fuse_prepare_release()
match  d1879a4235ac  1357696f39a4  ms/fuse: Convert fc->attr_version into atomic64_t
match  85b67405c8de  972ba91ff0f5  ms/fuse: Introduce fi->lock to protect write related fields
match  db6765b9f945  228e501791c5  ms/fuse: Protect fi->nlookup with fi->lock
match  1df20f1d6684  4338e5c8c370  ms/fuse: Protect ff->reserved_req via corresponding fi->lock
match  2de94fdddcc3  aa8f1664878a  fuse: kaio support
match  fb70bdd83b11  6e568bfbc558  fuse: Turn writeback cache on
match  00b9d4f41b44  62d25322a7d0  fuse: direct_enable mount option
match  923946970435  c588cf6fdeaa  fuse: fuse-ve-odirect sysctl
match  0bef1015a6d9  cfcffaaf5938  fuse: Show active requests in fusectl files
match  e921c0e3ff43  51e225738e9c  fuse: Show open files in fusectl
match  02c1a0aad070  afbbd5e30394  fuse: Fuse ctl file with connection info
match  16e829bc22ed  99ec3b1ff08a  fuse: some fairness in handling writeback
match  661b3a5f045e  73c5b71467aa  fuse: Wait for real writeback to finish on file
match  5845b2d63875  67a8b51dd466  fuse: reimplement synchronous close
match  8d9efcec70cf  2f571e6b6735  fuse: i_size to be updated on first open
match  1d8b088fac4e  11fd31eb4909  fuse: account read/write requests into iostat
match  4caf8d7131b6  1e4c91e07c98  fuse: wire iolimit sleep-hook into directio path.
match  a27aab32b78d  64119fb13e73  fuse: account directio requests into ioacct
match  90f25fca43f0  b74a71c4c3f2  fuse: optimize fuse_vma_close()
match  efbe1c44216a  6098c0c2cda0  fuse: enable async_dio for pcs
match  34c056427af9  132e8c08c49e  fuse: improve bdi dirty memory limits for fuse
match  870d6103a88c  a72de934df5d  fuse: account read/write requests into iopslimit
match  9cd2688676f5  ad439537764d  fuse: implement invalidate_files notification
match  7318721b5e21  a6ba2062c0f9  fuse: pass "fc" to fuse_invalidate_files()
match  2fde858b1573  64f1b9241d4e  fuse: cleanups in fuse writeback
match  29c34bd7accf  891307321479  fuse: add missed fuse_file_put()
match  4145cde5abf3  b7a7bc0ba8c5  fuse: do not use RELEASE on directory
match  1cbd4460d0e9  40e2a091b73c  fuse: extend report on pstorage errors
match  63df78a569ed  0e28235367e8  fuse: print initialized flag in conn info
match  5815ef8552e8  a99be837531d  fuse: make umount synchronous
match  d3b33edb896f  bf21d399c86a  fuse: add mount option to disable close_wait
match  a0146b1d5c52  09f2f39e54ef  fuse: do not flush files opened ro
match  5abbc50b67ec  58f7a46657d0  fuse: the list of all opened files
match  62199c4dabe9  a335953ce482  fuse: add page_cache bit to fuse request
match  b2ee40e0b12c  23e812cd33fe  fuse: add "killed" bit to fuse request
match  d39f59c23ec5  effc832249cc  fuse: kill requests on "lost-lease" event
match  defe1ff7a958  9502e031c67f  fuse: prevent queueing new requests after
match  beda042f440f  bb9962d7f2d4  fuse: skip waiting for fuse writeback
match  e066cf993710  4176d9a64fad  fuse: fail lost-lease notification if async_read
match  9212f36d70eb  80ddd8bd52a4  fuse: report details of aio failure
match  479ca1938834  628d06545d3c  fuse: invalidate_files backward compatibility mode
match  92fc340bd5da  d458f2f8fb69  fuse: fix deadlock in fuse_flush()
match  bcb2457194df  8d96acf8e9a0  fuse: release cleanup
match  b3b2dd8319ea  d7fd13bf4319  fuse: virtualize file system
match  5b533bc02dea  be512c2643f7  fuse: resend interrupted release
match  c70a31354dbe  6f381bfa11ec  fuse: increase min/max_dirty_pages up to 256/512 MB
match  b921370106e0  622770069263  fuse: enable synchronous close for both "pstorage://" and "vstorage://" fs types
match  a7ef0b9d43d1  1cccb5c83532  fuse: process small sync direct reads synchronously
match  a5784d4c2bd7  8f9820688ec1  fuse: queue work for aio_complete (v3)
match  609316c893d4  ad5654b05d9e  fuse: relax i_mutex coverage in fuse_fsync
match  6fa56e9321a1  e930486dea5c  fuse: fuse_send_writepage() must check FUSE_S_FAIL_IMMEDIATELY
match  47743c985536  fa68ce5b78b4  fuse: ratelimint dio complains
match  4cd88863520f  893579e38bae  fuse: trust server file size unless opened
match  27924a2dc037  69cf786749f4  fuse: fuse_blocked_for_wb must check rw_files
match  ebca1471cec7  e76033acce88  fuse: cleanup fuse_wait_on_page_writeback
match  a6865ed29790  91192f185d2b  fuse: fuse_prepare_write() cannot handle page from killed request
match  abb7eac4a910  23b034ead3c0  fuse: ioctl() to bind fuse device to input queue
match  bd5d6570ad33  276f35c3ab07  fuse: add support for fallocate(FL_ZERO_RANGE)
match  3ab8ebd65477  1ed47ef023af  fuse: fallocate must return error if mode is not supported
match  bbfbe2372c2b  8c0c568efe99  fuse: ioctl(FIEMAP) support
match  637bea1947ec  78b06886e2d7  fuse: skip invalidate_inode_pages2 on truncate
match  1885c8c5159c  771b2e4ea9b8  cbt: introduce changed block tracking
match  6ae94ab68bc6  c2961fea2851  config.OpenVZ: enable cbt - changed block tracking
match  20a9d6e6fe47  d0252e3a167f  cbt: factor out alloc_page
match  3237a61930de  69b2858bb720  cbt: introduce CBT_PAGE_MISSED
match  36e7e4c696be  eac890dd2332  cbt: make __blk_cbt_set() smarter
match  fdeebcb0fb1d  8aca36e6476d  cbt: fix page allocation
match  b337e4257b97  3e8979f94c19  cbt: add blk_cbt_map_copy_once() helper
match  42fec79b2edf  45d00dae2ae4  cbt: add uuid arg to blk_cbt_map_copy_once()
match  32f6b3ea2924  cabf91a322b7  cbt: fix cbt->block_max calculation
match  7285a6438fac  2f1265747833  cbt: fix panic in blk_cbt_map_copy_once()
match  dc4bdc51a753  4a2e66931938  cbt: new api: blk_cbt_map_merge()
match  212231aa3197  149e32214365  cbt: fix possible race on alloc_page()
match  d2c5adfd1d60  51133ad691ae  cbt: blk_cbt_update_size() should not copy uninitialized data
match  c21e55498c6d  7f455c92d851  cbt: blk_cbt_update_size() must return if cbt->block_max not changed
match  74063fd7ace6  38160f4a2a30  cbt: don't leak ce_reserved64 in cbt_ito userspace
match  602a4cf942e9  27d01f794778  cbt: license: put correct copyrights into file headers
match  7a878af731ce  962d7cdc5e8e  block: cbt: fix potential deadlock
match  45faf5b78cae  aea34054394e  cbt: bitmap corruption caused by ipi
match  1de119575897  e9cc2473f843  cbt: selfdeadlock in __blk_cbt_set()
match  8ddff12ed0e0  bf61a83908ec  ploop: add ploop to the tree
match  380e35399583  2e4fedf28d7e  ploop: fix file->f_count leak in raw_complete_snapshot()
match  139410eade9c  8541517aa3cb  ploop: check error from freeze_bdev
match  8e7842d8b722  3e585f378816  ploop: generic support of writeback control
match  7973c30d5d2a  a3796119f961  ploop: congestion detection
match  d853a24fe328  1a99aed995cb  ploop: port io_kaio module
match  d62f210ace35  9dfecc57ee21  ploop: check ENOSPC callback
match  3661962e4d1c  47f3eaa8afb1  ploop: support of explicit unplug: start and stop plugging
match  df78cf575592  18541d28c05e  ploop: support of explicit unplug: unplug callback
match  eb5244420393  94cfb656c4e3  ploop: update i_size on preallocation
match  a67925c2bec5  0f23b307074c  ploop: set PLOOP_MAP_IDENTICAL bit on merge
match  35094ecbebd4  1a521d7bf944  ploop: purge plo->map on merge
match  45bc4485a86e  9a2be00f2ecc  ploop: fix deadlock inside dio_alloc_sync - lock inside while() but unlock outside
match  abfa7d764a03  59205b1e7e5b  ploop: fixed deadlock by interrupts off inside lookup_extent_mapping
match  447a3887300e  6028f0e2dee7  ploop: fix accounting ploop_io_images_size
match  d9509d38a077  505479c508b9  ploop: fix dio_fsync wait
match  76b84d120918  d3487b88301e  ploop: check new size of block device on ioctl(GROW)
match  c1ae9aa4efd4  81526d26b8a8  ploop: prevent dangerous ploop-umount
match  7f1a4116450a  34d625a184b8  ploop: prevent disclosure 4 bytes of the stack kernel
match  364c9c07c8ed  840d45850f4a  ploop: report holes in pio_direct (v2)
match  65aab96ff418  6dfee5323126  ploop: rework accounting images_size
match  c0f6706d85ee  ceb9f7a14c66  ploop: fix iblk-to-sector calculations
match  a8dc9803dfff  acde4a68d376  ploop: fix sync delay for sync requests
match  cab8263e45b5  0b882f9e5f07  ploop: reverse order of fdatawait and fsync fop
match  b3058427eb2f  6097399a0a60  ploop: skip writes of zeroes to unallocated blocks by default
match  074a1ef0a951  7bf65bac5e77  ploop: support 4K block-size of host block-device
match  96185f6716c1  235f67e6a551  ploop: fix a race condition on relocation of blocks
match  2d8edb7466ce  617b2393a738  ploop: fix check_zero optimization v2
match  092fa65689df  f7f28a22bfe8  ploop: fix race in ploop_tracker_init()
match  b06d9ef9a51f  5f35022e5a04  ploop: prioritize BAT operations
match  6e03bac7b2ef  3ba15745e5a0  ploop: add ioctl to limit size of top delta (v2)
match  6abe274782fb  0594941650b4  ploop: bug on bad fiemap (v2)
match  039300da411a  65a1ded4668f  ploop: ensure non-empty delta list on running ploop
match  2cff56b65beb  b995401ca2e2  ploop: expose open_count to sysfs
match  b0265da39a50  e3a4b934d792  ploop: fix spurious hole complains
match  6ed3b9c48609  9d6c5e18853c  ploop: put top-delta back if merge failed
match  06efdf1c1b90  ed390f33e174  ploop: roll back alloc_head on ENOSPC
match  4d9ba04d0930  433494956fc7  ploop: zero blocks on reuse
match  dd520c0c08e7  0f01f14d8eab  ploop: make manual abort transition verbose
match  6255c8beb2b5  c705627889c7  ploop: warning on "disk full" condition
match  7e20c474e586  fa41294407d6  ploop: notify blktrace about bio completions
match  e478b69ea66e  464c144c94b6  ploop: added ploop_req_delay_fua_possible() func that detects possible delaying of upcoming FUA to index update stage
match  af3f92b7613c  fe0a1c9b83e3  ploop: define struct ploop_request->state flags to force pre FLUSH before write IO and FUA/fsync at I/O complete
match  80f138bf392c  5eb6a4847003  ploop: direct: to support truly FLUSH/FUA of req we need mark first bio FLUSH, write all bios and mark last bio as FLUSH/FUA
match  04e78458a688  659e0a6b7d8c  ploop: do preflush or postfua according force FUA/flush flags, and delay FUA if possible but add force FLUSH to req if so
match  3f61fa37c1ad  1cf1d5f58609  ploop: make image fsync at I/O complete if it's required by FUA/fsync force flag or by req->req_rw
match  8336cfd7f50d  a2f1c4a1527f  ploop: mark reloc reqs to force FUA before write of relocated data
match  4f3f4d10912f  5c218420192b  ploop: mark reloc reqs to force FUA/fsync(kaio) for index update I/O
match  1d0ce1d5f4fd  4bc366bac14f  ploop: force FUA of nullified blocks for BAT grow
match  594732ad9e85  db2245c1325d  ploop: added printk of function, line, backtrace before ploop_set_error
match  451deb5eb1bc  7ae3a3d52857  ploop: add a separate queue for discard bio-s (v2)
match  b6380972e8b1  db539cdbf160  ploop: fix busyloop on secondary discard bio
match  e98da9c9ce3d  d2563cb2dd48  ploop: added into pvd header new close signatures
match  4394ac2c4326  5486cf1d89da  ploop: fix processing sync bios
match  1f1159c7d63b  8d8eb29817c7  ploop: dio_fastmap() must refresh bvec_merge_data
match  fabb33081ab3  010965702093  ploop: fix race on prealloc request
match  dd81da8d4dd2  3b40b784b814  ploop: use GFP_NOIO in ploop_make_request
match  f45f48cc3918  7edb7148e69c  ploop: do not use fiemap beyond eof
match  e7fbe3274496  d367ee2ab940  ploop: release io_context on ploop_thread() exit
match  01d189c57d69  a1866d3232ad  ploop: disable WRITE SAME for io_kaio
match  e007bc7c0a04  e8dc9a6f10fa  ploop: rename extent maps management funtions
match  136711c31434  16e5ea7682b1  ploop: update gendisk disk_stats
match  0ac29ed89955  c8f849440797  ploop: fix direct_io prealloc checks
match  998861af3b74  85ffc2ea54de  ploop: replace BLOCK_UNINIT
match  758373dbae01  5f13ee91aa66  ploop: use FALLOC_FL_CONVERT_UNWRITTEN in io_direct
match  4bac0632825b  07e42b385c84  ploop: must acquire write access on space allocation
match  4c9169704dba  9d4552ea583d  ploop: io_direct must fsync after fallocate
match  360d28a7cf86  af0e82c01419  ploop: introduce pbd
match  ac5a14146d89  ef51501f907c  ploop: implement PLOOP_IOC_PUSH_BACKUP_IO
match  98e2e780f627  fc24f27f5248  ploop: wire push_backup into state-machine
match  4441ba5a79c5  ade8d26f569f  ploop: push_backup cleanup
match  1e1c1c732efc  308e9bc1591c  ploop: force journal commit after dio_post_submit()
match  46a73ce80156  3cb84177440e  ploop: push_backup: fix ploop_push_backup_io_read()
match  0bed84771c7c  095144c97b9a  ploop: push_backup: show uuid
match  6687d7d2be59  313b8bbce462  ploop: push_backup: optimize ploop_pb_get_pending()
match  5a728d3ca1d7  4d22ba40a912  ploop: push_backup: optimize ploop_pb_put_reported()
match  12bac7596a3e  242643381887  ploop: avoid costly user-controllable kmalloc() calls
match  74a068589595  ad13a04e4e00  ploop: get rid of FOP_FSYNC
match  e5e0f774ef50  ea19ef42d581  ploop: io_direct: check for fsync fop on startup
match  344f9193c230  43947fdc7eb6  ploop: get rid of dio_fsync()
match  4737aeb3f29b  13eaa553b29e  ploop: get rid of direct calls to file->f_op->fsync()
match  1425c8309e18  0d55b6b23511  ploop: push_backup: factor out destroy
match  8db85d28e24d  25a147f59b75  ploop: push_backup: implement auto destroy
match  233c6cf0386d  f089ca0de808  ploop: push_backup: introduce ppb->reported_map
match  5a689d04a531  879b543eadd9  ploop: push_backup: improve ioctl(PLOOP_IOC_PUSH_BACKUP_IO)
match  eb96c928c7aa  5f9aa1fccc89  ploop: push_backup: merge pbd->cbt_map back to CBT
match  5307d8c7a89e  726756f74da8  ploop: io_direct: delay f_op->fsync() until FLUSH|FUA (v2)
match  f9fa87b35cee  733ec9971bfa  ploop: push_backup: copy stop status back to userspace
match  9d3e5c9fc484  6ff90792a171  ploop: push_backup: rework lockout machinery
match  3ce03c490fe6  5a6788929eaf  ploop: push_backup: PLOOP_PEEK mode of ioctl(PLOOP_IOC_PUSH_BACKUP_IO)
match  c88cce1665f8  f3349530f18a  ploop: "Parallels loopback device" -> "Virtuozzo loopback device"
match  2c1ae02f01f1  30672832f428  ploop: fix gendisk disk_stats to be seen on partition
match  d24089ad621a  48571d3ada4a  ploop: fix counting bio_qlen
match  169377838daa  48762401305b  ploop: io_kaio: fix silly bug in kaio_complete_io_state()
match  500347031398  c1c4416d9200  ploop: fix barriers for ordinary requests
match  28012b717531  1e17a4aa73bd  ploop: skip redundant fsync for REQ_FUA in post_submit
match  6620e6eaa5ae  bfb558adb918  ploop: deadcode cleanup in dio_submit()
match  c7d623704efe  475b8afe42e6  ploop: minor rework of ploop_req_delay_fua_possible
match  ccca0f2c25bc  e9521a1c1a84  ploop: resurrect delayed_fua for io_kaio
match  a2b9ba295902  8d8deefb3222  ploop: minor rework of ->write_page() io method
match  63e042a83eb1  45341b4ce6d2  ploop: resurrect delay_fua for io_direct
match  8bd2bb847d45  97ce41abbf35  ploop: remove preflush from dio_submit
match  8fa102cefc94  a98ea7517183  ploop: generalize issue_flush
match  aa50d15b36d6  5e39a10be553  ploop: fix barriers for PLOOP_E_RELOC_NULLIFY
match  3ad271414221  bdb8fcdfd4f6  ploop: fixup barrier handling during relocation
match  a88deee94023  2f7346c1af78  ploop: push_backup: introduce pb_set structure
match  2198bd8a9cbb  c2ea7cc6b574  ploop: push_backup: factor rb_erase() out
match  40dad3af8d17  260736ae1137  ploop: push_backup: extend pb_set
match  d5df91fb714c  bdae9c784a33  ploop: push_backup: add timeout tunable
match  aec63587bdc1  8897ce4bdba4  ploop: push_backup: health monitor thread
match  22ccf02cf388  cf7b029054f8  ploop: push_backup: implement timeout functions
match  a89bfc9c11a2  a7bf132cb384  ploop: reloc vs extent_conversion race fix
match  450397568f92  18874bea4d7f  ploop: add PLOOP_IOC_FREEZE and PLOOP_IOC_THAW ioctls
match  f9b5656bac28  dcf40328095e  ploop: release plo->ctl_mutex for thaw_bdev in PLOOP_IOC_THAW handler
match  472434f91162  8afd5494ac1a  ploop: fix fsync_reqs accounting
match  0bfb8d09d147  4b93d3bb3084  ploop: introduce plo->free_qlen counter
match  e10c9efe15bc  1f780b4ba0c4  ploop: introduce plo->blockable_reqs counter
match  82f0e2d68a2b  8cae6c8c6078  ploop: fix free_list starvation
match  aee9f11616b5  c21a01873fb6  ploop: fix freeze/thaw ioctls
match  85948df9efcf  0d5ac8c427a7  ploop: factor ->write_page() out
match  b47fe1ef17b0  d824846ecb16  ploop: factor out add preq to fsync_queue
match  c698e118a0c7  aaa4b139bbed  ploop: io_direct: delay f_op->fsync() until index_update for reloc requests (v3)
match  285a866490a3  a58bb1a9c0e9  ploop: drop bdev refcounter on freeze_bdev() failure
match  4c51c9b13e28  95ac633a8509  ploop: keep frozen block device pointer instead of super_block pointer
match  48777c0002c6  23b2519c53f1  ploop: add support for dm-crypted ploops
match  a54413e84301  30e0fbc6c4f8  ploop: push_backup: fix pbd->ppb_lock deadlock
match  5035c8266eb1  59ae187dc44f  ploop: ploop_grow must nullify holes
match  e3bb292acb91  1f6024aedb0f  ploop: push_backup: avoid preq->state corruption
match  20b5d11c766e  913d5f216e5d  ploop: push_backup: avoid deadlock on PLOOP_PEEK
match  9d3e1021594d  cfcf814b2640  ploop: push_backup: ploop_pb_init must always spawn health_monitor
match  3b42e653b2a7  b5462e7bb1ed  ploop: don't leak ploop_freeblks_ctl_extent
match  e61e1c69d3d4  40baa4edd651  ploop: add comments about possible leaks
match  d40d985df2d1  cd7b538dd6b9  ploop: pio_nfs does not require PLOOP_REQ_ISSUE_FLUSH (v2)
match  c0b2ee0b930e  1e548f3ca607  ploop: fix IS_PSTORAGE() macro: add check for "vstorage"
match  10bdf810f5cb  99df913c8f00  ploop: push_backup: BUG() on list corruption in ploop_pb_add_req_to_tree()
match  96e3bac39c07  c5d56634c1d6  block/ploop: Add resched points in ploop thread.
match  910cd28e140a  404a072e4330  ploop: fix typo in ploop_pb_get_first_req_from_tree
match  bc1a896a54be  84d8f0296ffc  ploop: show ino and sdev for ploop images in sysfs
match  cb3e34a3296e  90bdf11c6cdb  ploop: push_backup: ploop_pb_get_pending should wait again instead of ENOENT
match  59eede89837b  d49e687237d7  ploop: fix race on map->levels[] update
match  c12fc678188b  158eb71caa86  ploop: make error messages about intersecting extents more verbose (v2)
match  d5e306e0a570  7314e186200f  ploop/license: put correct copyrights into file headers
match  edc8c31009a2  3192339c3c6e  ploop/modules: set module author for Virtuozzo modules
match  6c32b4a04bf5  49a01b69b6cf  ploop: add dependency for CBT in Kconfig
match  8caade7ccb24  b1da4610bd2c  ploop: fix dio_invalidate_cache()
match  19c7c6f401ed  585ea5104bd4  ploop: fix trim_extent_mappings() locking
match  700ed569a9b6  89d9bb3d7034  ms/crypto: skcipher - Add crypto_skcipher_has_setkey
match  6b447db066ae  b986f793f3bc  ms/crypto: af_alg - Allow af_af_alg_release_parent to be called on nokey path
match  8db2a3bc1cbf  1308eb1faa33  ms/crypto: af_alg - Forbid bind(2) when nokey child sockets are present
match  c7c88ca2859f  b38c2c7ef59d  ms/crypto: user - lock crypto_alg_list on alg dump
match  eff03d8052cc  e58bd8bacdca  ms/crypto: hash - Fix page length clamping in hash walk
match  87c878f362b4  f795c09ff760  ms/crypto: gcm - Filter out async ghash if necessary
match  9d9076e714c4  4abd8950b3c5  ms/crypto: scatterwalk - Fix test in scatterwalk_done
match  a99846fdfdfd  57acb8dd2419  md: add support for dm-crypted ploops
match  d62c13e5733c  87069dcae514  kvm: do not SetPageDirty for file mappings
match  315aa2d85ed5  0f6d09f86909  ms/kvm/x86: Pass return code of kvm_emulate_hypercall
match  04cdebb7b759  11794cded710  ms/kvm:vmx: more complete state update on APICv on/off
match  e4e9c38a46b1  d5d5f4d5be3b  ms/KVM: i8254: simplify atomics in kvm_pit_ack_irq
match  fd1f173b982f  d3dcda65f87c  ms/KVM: i8254: add kvm_pit_reset_reinject
match  2636fb9e679c  711dd570ceb9  ms/KVM: i8254: use atomic_t instead of pit.inject_lock
match  312b4bcb0ea6  eb2faf89c293  Revert "ms/KVM: x86: reset MMU on KVM_SET_VCPU_EVENTS"
match  afd5e06a85c8  0dac9420144b  KVM: async_pf: Let guest support delivery of async_pf from guest mode
match  3938d0c2076f  4d389a1e261b  ms/KVM: x86/vPMU: ignore access to LBR-related MSRs
match  8f18a4d05548  60d95e415263  kvm: x86: factor out kvm.arch.hyperv (de)init
match  c9b66a03af8a  06e3c3e76155  kvm: x86: hyperv: guest->host event signaling via eventfd
match  1063e5e902d7  585f69e03350  kvm: x86: hyperv: delete dead code in kvm_hv_hypercall()
match  d5bf26a8b5ba  f0e1f603daf3  kvm: Map PFN-type memory regions as writable (if possible)
match  15b8dfc72507  bc53d91f932e  ms/KVM: LAPIC: Fix lapic timer mode transition
match  ace1004bc397  3abc13226268  ms/KVM: LAPIC: Introduce limit_periodic_timer_frequency
match  13cf47ea7940  ba29c872a56d  ms/KVM: LAPIC: Keep timer running when switching between one-shot and periodic mode
match  88d2939ed135  ae2dcf3395f5  ms/KVM: x86: handle 0 write to TSC_DEADLINE MSR
match  09d1eeeb2ee8  bc4a7acc570d  ms/KVM: x86: really disarm lapic timer when clearing TMICT
match  183371c4891b  72046da9715c  ms/KVM: x86: thoroughly disarm LAPIC timer around TSC deadline switch
match  d076ba06a7d6  f1d5c0c90bb3  ms/KVM: x86: Add a return value to kvm_emulate_cpuid
match  3e62535cde6b  4dc3a191c486  ms/KVM: VMX: Reorder some skip_emulated_instruction calls
match  da722871388f  64397ae27a70  ms/KVM: x86: Add kvm_skip_emulated_instruction and use it.
match  c8eeafce8675  33cd2f578240  ms/KVM: x86: Do not clear RFLAGS.TF when a singlestep trap occurs.
match  ed7d4723b77a  2153e0e39200  kvm: move VMs which we skip during shrink to vm_list tail
match  2ed307030825  58fa84b0a383  kvm: move actual VM memory shrink out of kvm_lock
match  f4bf5e98b69c  cf603783dccb  KVM: x86: add a stub for MSR_PLATFORM_INFO
match  cddfefe4e6fb  b3c0164f41ab  ms/KVM: x86: Add module parameter for supporting VMware backdoor
match  93d18bfdc6d2  b7b52e361aac  ms/KVM: x86: Always allow access to VMware backdoor I/O ports
match  88a6bee2519e  ef13f67f956e  ms/KVM: x86: Add emulation_type to not raise #UD on emulation failure
match  44061f4b0e77  459ec25b7c13  ms/KVM: x86: Emulate only IN/OUT instructions when accessing VMware backdoor
match  be75348d2e55  f4202a15789d  ms/KVM: x86: VMX: Intercept #GP to support access to VMware backdoor ports
match  01b4edbd6832  ebc45ebfd4d6  ms/KVM: x86: SVM: Intercept #GP to support access to VMware backdoor ports
match  1402f9f47126  4288c577a522  ms/KVM: x86: Add support for VMware backdoor Pseudo-PMCs
match  050042fd1f3c  28add08176bd  ms/KVM: hyperv: idr_find needs RCU protection
match  81d569c87b7a  80f3e69dd1c8  ms/KVM: X86: Fix scan ioapic use-before-initialization
match  c5a2aefd7f85  f0605ae837d6  KVM: x86: Don't re-execute instruction when not passing CR2 value
match  18de68b78813  7967f6a1fd15  KVM: x86/vPMU: handle access to LBR stack regardless of PMU counters presence
match  7911bdfd8e8c  47345522eb79  vhost-net: enable zerocopy tx by default
match  2590a89794e2  48e6e6fc3c3d  net/vhost: Replace kmalloc with kvmalloc for order>=3
match  8eb089c5aee2  e4ac7557ab9e  ms/vhost: synchronize IOTLB message with dev cleanup
match  ac22cc957e26  feafa3ac833f  target: don't call an unmap callback if a range length is zero
match  7481639b183d  aac0d1941cad  target: add extra counters for LUN statistics
match  a3ebd45ce382  166ff6b8014c  target: add histogram for LUN statistics
match  1a98ccbd73b9  fcb32b3cb180  target: add read/write/sync latency counter
match  fcac7162dfcc  0b76f60da21a  target: add an user-mode helper to handle changes of a group state
match  f0f529d2c3e4  97e6d178d9b6  target: pass a device name to an alua user helper
match  3df9cf7c11c2  c4a278cd4c73  target: move alua user helper from group to device
match  5faa591c14eb  9ab9ec19e3e7  target: call alua helper before reporting group states to initiator
match  6e9421cc5bfe  999fa68e84f7  target: set ALUA_TG_PT_STANDBY if a backing store is in standby mode
match  71474b27de7d  60f67ef15cc8  target: allow to set a blkio cgroup for a backstore
match  2b36c414792e  b1733c60de3b  target: fix a locking scheme of persistent reservations
match  924092516c8f  842ac6a44598  target: move blkio_cgroup from attrib/ to param/
match  095d1a81f014  ae9fba0b98aa  target: rename user_helper back to alua_user_helper
match  56fe3e83a448  b5d6a2c627d5  target: use to_stat_tgt_port() to handle files in scsi_tgt_port/
match  a12207d5d5d5  aa4c3f52b402  mm: add warning about high order allocations
match  ad185c78cbab  d14daab35dea  mm: add __GFP_ flag to hide verified high order allocation warnings
match  ebfe6d5e42ca  c3fe0530f45f  ve/cgroup: hide ve and ub cgroups in CT
match  ceb1e279e66d  d31dadde9ae1  ve/fs/files: Add new argument to expand_files()
match  3921e0103dd7  44516c3534f9  ve/fs/files: Add fdtable_align() helper
match  5a3fed05fbbe  9db18008e57f  ve/fs/files: Shrink big fdtable on close in is_pseudosuper mode
match  b208b3c1e25f  f18977fd88ba  ve/net: partially return ms permission check for ethtool commands
match  5c29b315ed7b  6dc7292eed84  Revert "do_SAK: Don't recursively take the tasklist_lock"
match  3bbd287af358  85d2ba8926ac  tty: Avoid threads files iterations in __do_SAK()
match  4adbad97c580  930686096bee  tty: Use RCU read lock to iterate tasks and threads in __do_SAK()
match  458859b814dc  12facabe83c6  ms/fs, mm: account filp cache to kmemcg
match  86fb3db4d455  a7a891fec6f6  mm/tcache: invalidate existing page during cleancache_put_page()
match  d17eaaa0cc41  75de5a7749b0  tcache: Refactor tcache_shrink_scan()
match  1be6c342db8d  2612944c5a0e  tcache: Fix race between tcache_invalidate_node() and tcache_attach_page()
match  2bd98c53cad3  2e779704873b  fence-watchdog: print alive messages
match  ad94c3303690  091747122c2c  ms/scripts/has-stack-protector: add -fno-PIE
match  9868bdf11d60  10c7277f88e6  ms/kbuild: add -fno-PIE
match  a193d6d604a7  130395466a10  ms/mm: compaction: trace compaction begin and end
match  352acdc76d22  bb1bc737d230  ms/mm: compaction: do not mark unmovable pageblocks as skipped in async compaction
match  428884e2d0c4  28bfc29ebd80  ms/mm: compaction: reset scanner positions immediately when they meet
match  b9cc627044ed  424accbcc906  ms/mm/compaction: disallow high-order page for migration target
match  3a41e01e71d2  fd4f9dd20bbb  ms/mm/compaction: do not call suitable_migration_target() on every page
match  3f7f6e375b36  caeed0e41779  ms/mm/compaction: check pageblock suitability once per pageblock
match  c71dde7c3054  97b44072a866  ms/mm/compaction: clean-up code on success of ballon isolation
match  32f3b8039419  c3f42f9c616c  ms/mm, compaction: determine isolation mode only once
match  e61ceee1eb23  03b9f7da1d94  ms/mm, compaction: ignore pageblock skip when manually invoking compaction
match  771bfbcf744e  572ed8a7b645  ms/mm/compaction: clean up unused code lines
match  1b0d17204ba2  f1ab27372288  ms/mm, migration: add destination page freeing callback
match  82589e0d1479  3b03856c4f7d  ms/mm, compaction: return failed migration target pages back to freelist
match  bb80a08eb63f  a9e509540223  ms/mm, compaction: add per-zone migration pfn cache for async compaction
match  0a2462b580d9  873501b8eac7  ms/mm, compaction: embed migration mode in compact_control
match  09ab2d4fc4b9  ed76e0bb6f06  ms/mm/compaction: do not count migratepages when unnecessary
match  f84490a942c5  dbe7fd458672  ms/mm/compaction: avoid rescanning pageblocks in isolate_freepages
match  361f896af500  d98af839a9f9  ms/mm: fix direct reclaim writeback regression
match  2b76ee029fc9  3ab6ec4c8c37  ms/mm, vmscan: add active list aging tracepoint
match  43cb80472c1d  36d2e0249804  ms/mm, vmscan: extract shrink_page_list reclaim counters into a struct
match  52f293631a5d  421882ccb25b  ms/mm, vmscan: enhance mm_vmscan_lru_shrink_inactive tracepoint
match  6373742bd274  13b25755d76b  ms/mm: throttle on IO only when there are too many dirty and writeback pages
match  242e67dcf1bd  4aaa9a38a3b1  mm/vmscan: collect reclaim stats across zone
match  53bfb71eaac6  86f03b11e2d1  mm/vmscan: Use per-zone sum of reclaim_stat to change zone state.
match  a3fb9e127da1  d514d3c9e82b  mm/vmscan: call wait_iff_congested() only if we have troubles in recaliming
match  04402ae4b21e  3a4ba8859381  ms/mm: memcontrol: simplify detecting when the memory+swap limit is hit
match  39b0e0e3caf3  824fa6a0fc96  ms/mm: memcontrol: fix transparent huge page allocations under pressure
match  031729874e91  2565cbb3164b  ms/memcg: refactor mem_cgroup_resize_limit()
match  eeb0de646d20  96581b99baa9  mm: try harder to decrease cache.limit_in_bytes
match  65872831e57b  7bce8988dac3  ms/mm/memcontrol.c: try harder to decrease [memory,memsw].limit_in_bytes
match  b7ff497b9bfd  6f869c522079  ms/dm crypt: replace RCU read-side section with rwsem
match  1dbaff49a5b1  9a04c47fdda1  mm: fix memory cgroup leak in case mem cgroup gets offline before kmem counter is 0
match  6d4c446d50db  e85419dd2d61  configs.OpenVZ: add minimal kernel config for a KVM VM
match  7e4d9c633a26  6e6128bb3289  mm/memcontrol: Fix memcg swpin/swpout stats accounting
match  8fc0f644499a  a0466c2a58a4  ms/net: don't wait for order-3 page allocation
match  31ff6fbdda83  c853e573164f  fs/pipe: Use kvmalloc for pipe buffers
match  882f5aa87944  addadf8008d6  ms/x86/kvm/vmx: do not use vm-exit instruction length for fast MMIO when running nested
match  b7117c9d8e26  1c1904c260bf  ms/inotify: Extend ioctl to allow to request id of new watch descriptor
match  fdbdfc5bb7f0  cb3a68954ea8  configs.OpenVZ: more options to disable
match  570d81df78cb  02648fcb784e  ploop: don't forget to dec preq->io_count on a error path
match  bfaefa78bf45  3f971947d130  fuse: add a new async operation to unmap regions
match  a7a84aa32c6f  5e73062dd89c  ploop: handle discard requests via fallocate
match  200fda06ca87  5090bc1304c0  ploop: allow to set discard granularity and alignment attributes
match  fb335e8f49ef  76c0b37b2569  ploop: give aligned regions into fuse fallocate()
match  a70883b70c5f  c6b7dfff41e4  ve/kstat/alloc_lat: Don't separate GFP_HIGHMEM and !GFP_HIGHMEM allocation latencies
match  18d18dd2cff1  292c2db11898  ve/vzstat.h: move some kstat definitions into new header
match  200452e8dac0  43f5d84a6a96  ve/page_alloc, kstat: account allocation latencies per-task
match  02c6d0caf65a  0512d893fa0a  ploop: kaio_kreq_alloc specify nr_segs
match  9a9c6c9a37c9  4f71f98112fb  ploop: kaio_io_page switch to bvec iter
match  aa61126fe241  41db3fed4b2f  ploop: io_kaio remove direct_IO_page requirement
match  7d7191532fc5  8c104a7be785  fuse: remove direct_IO_page
match  8beae2066e5c  c8ce76854b7a  fuse: assert i_size boundaries for fuse_direct_IO_bvec
match  a5a6d978b31c  80202ed019d9  fuse: separate iqueue for clones
match  634704d9de9b  78ed66164194  fuse: add kdirect io engine v0.1
match  ca27f2ca2baf  a11b0811001f  fuse kio: minimal noop engine skeleton
match  b20d63385350  b802aff25275  fuse kio: Add nullio engine
match  ab20b81ba448  1aee3e595bcb  fuse kio: Add pcs engine combo v0.8
match  f2fe8e494d82  2af1e8b4feba  fio kio: PCS unblock writepath
match  00db27b4fc14  a576e705c881  fuse_kio_pcs: implement truncate
match  8e5f30d52f31  09a47ae16fdc  config.OpenVZ: enable modules for in-kernel fast path for vStorage
match  6ad87821571b  8ba3599a3285  ve/tty: Provide interface for current tty inheritance
match  0cba1f99d548  f7b6e18a82f2  ve/kstat/alloc_lat: Initialize alloc_lat to zero at start
match  34bbb20a17f5  3d6235116ed1  ve/fs/proc: Make per-thread and per-process allocation latencies.
match  75318cf443af  b96fec14a8e0  mm/memcg: Don't charge anon pages as cache
match  4f2ee80a8168  40e7e88972c5  mm/memcg: fix overcharging in cgroup try_charge() for !cache_charge
match  fda4ebf4597d  c1398b40c6be  ms/[media] drxk_hard: fix bad alignments
match  7dee057fa8ef  8636860f379c  fuse kio pcs: implement logging and prometheus statistics collection v2
match  fdcaac0819c4  36b57193dcb9  config.OpenVZ.minimal: disable CONFIG_X86_DECODER_SELFTEST
match  3502d5095c14  9511ac77fd08  ve/cgroup: Get correct VE init css when ve init_task is moved to child cgroup
match  717c91227d96  be49da04d860  sched/ve: Link VE root cpu cgroups in separate list
match  04ab389cdec9  f0807ee69ef6  sched/ve: Do not show loadavg in child VE cpu cgroups
match  5ae217591a93  c82b5c9cb093  sched/ve: Iterate only VE root cpu cgroups to count loadavg
match  9ebfc46c7d71  6862b3b497c9  sched/ve: Use cfs_rq::h_nr_running to count loadavg
match  fa9fd4b2e4c1  8bf617b20e49  ploop: Discard bios of size not aligned at 512 bytes
match  dbf7751e26ea  c03163f55592  fuse kio_pcs: ignore special inodes
match  09d0fe2d1c64  2c51a1434504  fuse pcs_kio: fix page zeroing beond EOF
match  9c8a9ea41af4  80da9c2abac9  ploop: add a standby mode
match  ca1c2a1ee756  1a02f2e53409  ploop: move discard_* attributes in the tune_attributes group
match  c80c38cd4362  97276a823848  mm/memcg: fix margin computation for kmem limit.
match  c18e49939e4f  b887d3243525  mm/tcache: Reset index before repeating invalidation
match  313cfcfc0d0b  1824f1d18658  mm/tcache: initialize 'repeat' variable only once
match  4917682c7f59  55365a6fbee3  config.OpenVZ.debug: disable kcov code coverage by default
match  e98f80620a4c  29e92cb841f5  ms/x86/ACPI/PCI: Recognize that Interrupt Line 255 means "not connected"
match  ca2e7e7c8fc5  a58f14f2943d  net/setsockopt: switch high order allocations to kvmalloc() in do_ip_setsockopt()
match  69bd0f767a77  2484ffb4c43a  mm: introduce kvmalloc_check() for safe calls to kvmalloc()
match  aa1a2a99b273  06107618bcf5  net/sock: teach sock_kmalloc() to call kvmalloc() when possible
match  679a9285bce2  67c5d8d5944c  ve/kthread: pass ve to __call_usermodehelper_exec
match  f436b6d4e4a4  c2dbf371215a  ve/kthread: fix race when work can be added to stopped kthread worker
match  6a3169bcbf6d  91bfc1336fd5  x86/cpu: compilation fix for CONFIG_PAGE_TABLE_ISOLATION disabled case
match  1217f585005b  5793095a4b6b  ve: fix reading container state from cgroup
match  f624dcc0628a  810b6640bd6d  cnic: use kvzalloc to allocate memory for csk_tbl
match  418084b70aee  687db604a958  bnx2x: suppress warnings on DMA memory allocation
match  bb0e7d660e71  b12853e347b0  bnx2: use kvzalloc() to allocate certain internal data
match  3f5fba7647ff  f31209848b5c  net/drivers/i40e: suppress high order allocation warning
match  af5e760c78bb  5302d860300b  drivers/igb: increase link detection timeout up to 5 sec
match  6ed22d843473  d27b1ddf8a98  bonding: show full hw address in sysfs for slave entries
match  eee9202cc586  a572461ee943  net/drivers/i40e: suppress warning on skb linearization
match  acacc048516c  9d0595c7dc43  drivers/igb: increase link detection timeout up to 10 sec
match  012891bbf319  3b3937a3e0be  ms/ipv6: fix backtracking for throw routes
match  917060792506  b602d54641db  net/sctp: Replace in/out stream arrays with flex_array
match  822dd7ebce34  3d72d00165a3  ms/dccp: defer ccid_hc_tx_delete() at dismantle time
match  948f867c3f45  f14ca25564ff  ms/dccp: Unlock sock before calling sk_free()
match  f3960be83210  1f1dcce2edd4  net/dccp: fix use after free in tw_timer_handler()
match  e6be1a15beec  45fda927043c  ms/dccp: purge write queue in dccp_destroy_sock()
match  cc2ede301825  997f7f8e6f68  fasync: Fix deadlock between task-context and interrupt-context kill_fasync()
match  133bbe94b30d  b44367d57465  ms/objtool: Fix memory leak in decode_instructions()
match  0d5dcc3a67ef  ca00be9c4ce9  ms/x86/xen: fix upper bound of pmd loop in xen_cleanhighmap()
match  df9e7ce02877  76d4f4104f61  ms/arch/x86/kernel/ptrace.c: Remove unused arg_offs_table
match  69775897c0c8  11a4245299d2  ms/Disable the __builtin_return_address() warning globally after all
match  bb014121e955  afd2d7c33b34  ms/ACPI / video: remove unused device_decode array
match  55db8b57fc4d  621e80553764  ve/kernfs: implement ve-based permissions
match  75533570fe19  2fd7b8d75139  ve/kernfs: fix lookup for kernfs superblock
match  f57d3b6b68c1  ec10a05cbb85  ve/kernfs: hide forbidden entries in container
match  16b63645730c  d6a19311979c  ve/kernfs: add new interface to control per-VE nodes visibility
match  f27b8c50dacc  fadc4ed6820b  ve/sysfs: add dentries visibility filter
match  fbf98f8ec393  7e2fdf054532  ve/kernfs: export kernfs_perms_set() helper
match  4f0dfceee96d  4879f6921555  ve/sysfs: relax sanity check for ns equality in kernfs_find_ns()
match  54776c8c5448  e0d59321aaac  ve/sysfs: generic sysfs_set_def_perms() helper introduced
match  683f2b99eb11  135606a78c97  ve/module: export sysfs dentries in containers
match  7d4f67dca0b2  956fb504f84f  ve/fs: allow mount fs in init userns if it's mounted in another userns
match  4ac305a0989c  bb57a34a036a  ve/fs/namespace: allow submounts in non-init userns
match  92c8024f6d3e  407051ec6fbf  ve/sunrpc: enable rpc_pipefs mounts inside non-init user namespaces
match  e4eebb7c0dc5  2e22ef7b889b  ve/mount: allow pseudosuper to temporary exceed the container limit
match  141ac4d7f041  0f80091cb28f  ve/devmnt: initialize s_mode before deactivate_locked_super to suppress warning
match  32d2eb66551d  ffe5dbfd4769  ve/net/neighbour: per-ct limit for neighbour entries
match  280d29d4ac07  d2d0f3900fbc  ve/sunrpc: prohibit mounting rpc_pipefs in CT without nfsd feature
match  aa550567d424  797ecf967be0  ve/meminfo: show "MemAvailable: ..." line in CT's meminfo
match  b6227d7fe828  7462431ac995  ve: prohibit opening proc/self/exe from VE for VD_VE_ENTER_TASK
match  625f96b820b1  0d677634c74b  ve/net: warn in case a Container hits ve::netif_max_nr
match  5cb88c5f772f  b745c336e5b6  ve/net: allow to change max number of net devices for running CT
match  e88b95637016  1f715647c5fa  ve/netfilter/ipset: allow nfnetlink_queue module autoload
match  db5043b92df5  55c0e641de1a  ve: don't hide cgroup mount root from pseudosuper
match  5f75e6ffdc0c  b2201c838a53  ve/capability: introduce capable() wrapper which honors CT features
match  7d4db328b2a5  5189dc2d7739  ve/time: introduce CT feature to allow setting date/time
match  e90529543dba  49ff949f0ae3  ve/time/ntp: allow CT ntp adjustment time tuning under VE_FEATURE_TIME feature
match  26d3fb528607  52238bd0ab48  venetdev: drop src_lh/dst_lh lists from veip_struct
match  506e5ba71f42  28247d67ab38  venetdev: fix race between veip shutdown and add veip entry
match  3255490a2c2b  7b50feb05611  cifs: drop unused mapping_table_ERRHRD
match  5b76ce0e6d10  77b0740eb108  ms/ACPI / dock: Drop dock_device_ids[] table
match  aea01f610994  0f5acb1dc506  ms/rtnetlink: remove unused ifla_stats_policy
match  28bd9dd8e5d7  367b2b14a068  ms/net/rtnetlink: remove dead code
match  b70cfd747068  472d6f496689  ms/net-sysfs: remove unused fmt_long_hex
match  1988694f7626  9a02bc07dc61  ms/memstick: mspro_block: add missing curly braces
match  1439deaae3e1  9351d2c95967  ms/tty: nozomi: avoid a harmless gcc warning
match  798435affea1  d3102b85fda4  ms/staging: rtl8712: fix some confusing indenting
match  3824647d9217  67bc81e6b950  ms/x86/mm: Disable various instrumentations of mm/mem_encrypt.c and mm/tlb.c
match  537defee632f  9449c3e8cb1e  ms/mm: fix mapping_set_error call in me_pagecache_dirty
match  63c26da8d5bc  d8afd73cf789  ms/fs: check for writeback errors after syncing out buffers in generic_file_fsync
match  ab7a6bd3a36b  e7cac05d4404  ms/jbd2: don't clear and reset errors after waiting on writeback
match  744fea9fbeb8  6e72cd6da21c  ms/mm: clear AS_EIO/AS_ENOSPC when writeback initiation fails
match  8c3418939da9  101e31bc3cac  ms/mm: don't TestClearPageError in __filemap_fdatawait_range
match  0f3cf0d7555c  2cab65341c39  ms/lib: add errseq_t type and infrastructure for handling it
match  ef7d6ef6b3ac  f687d15f8492  ms/fs: new infrastructure for writeback error handling and reporting
match  a481850105fa  aa83659be551  ms/mm: set both AS_EIO/AS_ENOSPC and errseq_t in mapping_set_error
match  08faf36732b0  edaac068069d  ms/Documentation: flesh out the section in vfs.txt on storing and reporting writeback errors
match  685a5363416d  9d8ed5fe4151  ms/dax: set errors in mapping when writeback fails
match  66363aa0a7df  3a7ae1987b39  ms/block: convert to errseq_t based writeback error tracking
match  240d4333cf2a  d3207b416056  ms/ext4: use errseq_t based error handling for reporting data writeback errors
match  db8ebb602471  9cb3f5e03cbd  ms/xfs: minimal conversion to errseq_t writeback error reporting
match  574431fac7a2  d8cf0a7e37ea  ms/btrfs: minimal conversion to errseq_t writeback error reporting on fsync
match  fa5a209676ee  19720ec82807  config.OpenVZ.minimal: enable conntrack netlink interface module
match  39c4c0e9c2fc  5a8aba3984cf  net: Change number of netlink repair
match  dc99b382c37f  1d58cbc32186  kernel/lockdep: allow lockdep_set_no_validate_class()
match  0e40ce82eeb0  be5ce65089b5  fuse/kio_pcs: support FUSE_FSYNC
match  9a9b3595c946  cd5c1764066c  fuse: support FS_IOC_FIEMAP in i386 compat mode
match  87488cc4bef3  068c39660f14  fuse/kio_pcs: adapt prometheus statistics to current vstorage state
match  e040f842a88d  1677e1a50a18  fuse/kio_pcs: fallocate support at low pcs protocol level
match  92ee0b3899ef  6f39d8e8e709  fuse/kio_pcs: full fallocate() support
match  3d754b03e899  0a60276b1af7  fuse/kio_pcs: FIEMAP support
match  1a909d76ebcf  1cd8be942138  fuse/kio_pcs/pcs_map: fix process_flush_req lock leakage
match  d61890aa0132  2338e762a662  ms/Revert "mm: page_alloc: skip over regions of invalid pfns where possible"
match  8437cb6b3bec  c8173b9fce7e  ms/fs: Don't leak MNT_INTERNAL away from internal mounts
match  cd3a22aaedc2  d33175996f8c  sched/rt: Stop for_each_process_thread() iterations in tg_has_rt_tasks()
match  9aec577e719e  6905c860b3c5  ms/sched/autogroup: Fix failure to set cpu.rt_runtime_us
match  685a7d13cd9e  b7370dd06648  mm/vmscan: shrink slabs from offlined cgroups
match  bc22f59b22cf  3a143dd7c506  mm/memcontrol: try to free all memcg during offline
match  ae5ec62ee026  d8de077d4108  fuse/kio_pcs: read is broken by FIEMAP patch
match  f6e3c1021355  b5e3427dd6ce  fuse: pcs_kio cancel requests after fused crash
match  597c3f35cc7e  cbe9e1902328  blkcg: implement bio_associate_blkcg()
match  34808e15f28e  7a41059cf1d3  cpuid_fault: Log table updates
match  419c7e987b9c  caa333c532d1  ms/relay: Use per CPU constructs for the relay channel buffer pointers
match  cbcdd6fa6239  dce0ba177ba4  ms/tty: limit terminal size to 4M chars
match  e66e8acac523  ffe3f0743f61  tty: use kvmalloc for screenbuffer allocation
match  923a418cd70e  3cfd31e71db4  fuse/kio_pcs: use kvmalloc for pcs_fuse_cluster allocation
match  9eef10e03795  b8d6d18da149  ms/nfsd: more robust allocation failure handling in nfsd_reply_cache_init
match  9baae32c291a  f98da8d0b5cb  nfsd: use kvzalloc() to allocate memory for drc_hashtbl
match  a55191add9b0  c9fb4555ca04  fuse: Try automatically load kio module
match  29bc6f69754d  4eb5078ba883  kio: Stop always breaking connection in pcs_sockio_send() in case of EAGAIN.
match  5815fbb56d0b  22343224eade  fs/fuse: move FUSE_SUPER_MAGIC to magic.h
match  d6852120a672  a7a5491b64ce  fs/fuse kio_pcs: check fuse_conn args
match  72031aa3cd71  6250aed3f6d3  fuse kio_pcs: ports from new user-space
match  8f4b15f03125  3d1dddb79564  mm/tcache: fix rcu_read_lock()/rcu_read_unlock() imbalance
match  1744540edb79  d7a58365ed39  fuse kio: Do not requeue requests when connection is dead
match  6a66845e74fc  bd9bbcc4c8e8  fuse kio: Declare pcs_sockio::parent type
match  c045ffd304d4  bfd09d6a7421  fuse kio: Cleanup in struct pcs_rpc
match  b0428f22410a  915769fad17c  fs/fuse kio_pcs: remove s_subtype check
match  2566392fe963  d63ba5dbdd09  fs/locks: add more info for unexpected lock
match  b9a05a245421  e0d8281c08a8  fuse kio: Introduce fast path protocol version,
match  740d48ed7899  b19610f7cb62  fuse kio: cleanup in token enqueue
match  d4dcc4cceca7  6959178f9c98  fuse kio: invalid assertion
match  b0e495c34e04  7e5f8af26f37  fuse kio: Remove useless code in pcs_cs_destroy()
match  f94ca6e5ec1b  3c4eb6f9157c  kernel/panic.c: don't dump_stack() in add_taint()
match  78217c703ab8  638f17c58a4f  fuse kio: Introduce pcs_cs_list_of_cs_link()
match  2a3289832669  27ad0a203210  fuse kio: Fix potential use after free
match  96661b0a3dbe  15e41f737602  fuse kio: Fix possible use after free in cslist_destroy()
match  df026c31d8d6  18c39379da7b  fuse kio: Introduce pcs_cs::use_count instead of ::is_probing
match  5d03f60e9abd  c164d62cbec3  fuse kio: Wait till cs is unused in pcs_csset_fini()
match  c0a0070c3c4f  84a1608faab6  fuse kio: Change order around pcs_map_notify_addr_change()
match  68d2269f2a60  c66ec32ed7e7  fuse kio: Fix fix deadlock during change CS address
match  1c6fced56e48  47e0fb481ded  fuse kio: Fix dereferencing of NULL cs in map_replicating()
match  de3e9aeb217d  1898f2b1ee46  fs/fuse kio_pcs: some cleanup ireq_on_error_()
match  07688ea71028  21c82f4ab8fb  fuse kio: Handle fuse_map_resolve() failure in pcs_map_queue_resolve()
match  ace005c2c48c  f7fe1b6f0719  fuse kio: Arrange rcu modifiers around accesses to pcs_cs_link::cs
match  324d324da47a  0ab3950758d3  fs/fuse: disable optimization fuse and kio_pcs in debug kernel
match  87b790f950fe  11e7dca55bbc  fuse kio: Use dereferenced cs in cslist_destroy()
match  8c79ac5e6a22  023a0aa9fe60  fuse kio: infinite loop in processing congestion queue
match  fd07c4bb1141  e05f133ded4b  fs/fuse kio_pcs: move pcs_ireq_queue_fail()
match  b46a6ad5d952  15b57ca84b94  fs/fuse kio_pcs: handle error of submit_size_grow()
match  a192c3538c09  c5742f2d0f40  fs/fuse: export fuse_release_ff() and fuse_write_file()
match  b04ee24b2e37  855cb8506294  fs/fuse kio_pcs: pass the file handle for FUSE_SETATTR request
match  1b610af0fbdb  e06c18dd4aa4  fs/fuse kio_pcs: fix double unlock of m->lock in pcs_map_get_locked()
match  9194ca604ed9  5d2b8fd48949  fs/fuse kio_pcs: fix out of bounds roles_str[] array access
match  74d792072ab5  40c557d3fb23  fuse kio: Delete excess unlist in pcs_csset_fini()
match  545823c3281e  084e5c65408a  fuse kio: Do not NULL used pcs_cs_link::cs during connection destruction
match  ec8337ca60f1  4becbaadff13  fs/fuse kio_pcs: fix NULL pointer dereference in cs_keep_waiting()
match  e7b1ae40d298  f126a49bf06a  fs/fuse: remove extra check for empty active_list
match  091a544c42a3  2bf2588ee18e  ms/errseq: rename __errseq_set to errseq_set
match  ce949fe0755a  1320419ebb64  ms/Documentation: add some docs for errseq_t
match  d3433acfcfbe  d6e723822eca  ms/mm: consolidate dax / non-dax checks for writeback
match  ae87b671e2cd  38ae6fc1ccc8  ms/mm: add file_fdatawait_range and file_write_and_wait
match  da0845378358  1342eed367be  ms/fs: convert sync_file_range to use errseq_t based error-tracking
match  4d1434e29364  941f86d64a9f  ms/mm: remove optimizations based on i_size in mapping writeback waits
match  45a4eb38bcdd  5f77d8abc415  ms/errseq: Always report a writeback error once
match  a4a75c20dbcb  d9b61b58a758  ms/fs: use mapping_set_error instead of opencoded set_bit
match  c93e242cf929  8927fe67fe65  ms/mm: have filemap_check_and_advance_wb_err clear AS_EIO/AS_ENOSPC
match  d22873ba0369  623b01581e95  fuse kio: Wait pending requests on final fput()
match  1b58ca8b2792  473b24ffdc00  fuse kio: Place more pcs_cs_link::cs under rcu dereference
match  eb5d894a9cd1  8aedc5456c25  fuse kio: Add comment to fuse_release()
match  251e58e73989  70d639d46ab3  fuse kio: Add missed spin_lock into sync_timer_work()
match  95438b46f214  fec70904906e  fuse kio: Fix unbalanced queueing and dequeueing pcs_map_entry::sync_work
match  bd470ab0980e  6bfd00a03c9e  fs/fuse kio_pcs: add more traces for cs requests
match  d14c8dddc3ee  eb674f2d838f  fuse kio: Get msg size in second argument of pcs_sockio::get_msg()
match  f6b4e34f6272  41fb62ac80a4  fuse kio: Skip processing of messages above PAGE_SIZE size
match  03f6b97e5a11  b4deb4aa21d2  fs/fuse kio_pcs: mapped requests have map version preinitialized
match  37da5104bbd3  0c237bb866b0  fuse kio: support unix socket for local CSes
match  efbcdc57655f  415b866e9d2f  fs/fuse kio_pcs: handle old map in pcs_cs_submit()
match  0f5ac62b2708  332ad702cadc  fs/fuse kio_pcs: fix missing hbuf.uid update for ireq split case
match  76fdddb5bdd1  d19edc366c47  uprobes: Fix the memcg accounting
match  61f62fd448a3  b288716ede1a  mm/memory: Don't charged cowed private pages as cache
match  4978347511d9  22200c41e981  fs/fuse: set inode entry for FUSE_FLUSH request
match  b22e31eae5e5  96e87edff1eb  fs/fuse kio_pcs: add handling FUSE_FLUSH in kio_pcs
match  c9ca297d7c14  342014ae72fd  fs/fuse kio_pcs: increment PCS_FAST_PATH_VERSION to 1.1
match  c9ea9dc9db5f  b90d20a13497  fuse kio: Check returned FUSE_SETATTR size
match  ffe89237a3e3  24ef9743bd41  fs/fuse kio_pcs: enable traces for cs sync
match  00daf747f68f  a050350e5216  fs/fuse kio_pcs: replace pr_info() with ktrace for ireq fatal error
match  9989b6a7a45a  c9aa73785fe2  fuse: Teach fuse_blocked_for_wb() handle no files case
match  3aa7c13d5ede  4f333af49aae  ms/x86/efi-bgrt: Replace early_memremap() with memremap()
match  f1d64e67fe05  80ddda84b6b5  fuse kio: error PCS_ERR_CSD_LACKING is non-fatal
match  fa820cc47e65  6a362e2694cb  mm/tswap: fix lockup in tswap_evict_page()
match  6c9af04dc431  4e98e6af6f63  fs/fuse kio_pcs: fix grow work execution with zero
match  fce6fd885366  65f29190837f  ms/lockd: fix "list_add double add" caused by legacy signal interface
match  c28c816e57da  3581a972d68a  ms/proc: do not access cmdline nor environ from file-backed areas
match  c77ae3b437a8  83927a687ef3  fuse kio: Make KIO to require writeback_cache
match  70f58785abfd  536ef7bd9758  fuse: Refactor fuse_open_common()
match  69990232a3d6  691ff0f13921  fuse kio: Read file attributes every first open
match  bbd8651be256  b435dc27b11d  IPoIB: use kvzalloc to allocate an array of bucket pointers
match  b4ffbdb20b6c  2ac217d0fa45  fuse kio: missing local client ID initialization
match  e1920e2fbfd0  0f76d9b848d4  fs/fuse kio_pcs: bugs in integrity protocol for fallocate
match  4c8d55b6aa83  02160ffe54fb  fuse: Relax BUG_ON() in fuse_direct_IO_bvec()
match  becea0a7742b  0a12990ca31d  fuse kio: Fix NULL pointer dereference in pcs_map_get_locked()
match  ab4d020c5211  c775f6cf33f0  fs/fuse kio_pcs: fix NULL pointer dereference inside a dead map
match  10d27190ced6  a70f06856d84  rcuupdate.h: Switch to READ_ONCE and fix NULL-deref in __task_pid_nr_ns() again
match  0780c22d7595  6039139163fe  fuse kio: Make struct fuse_inode::num_openers int
match  2795e8489e16  e6f7f44ead82  mm/memcg: Bypass charges to offlined cgroup
match  bf98483ffb8e  766443c779f0  mnt_ns: introduce global list of mount namespaces for debug
match  0ac98b8d4e3c  787911f5c06e  fuse kio: logging improvements
match  ab23eb7aea2e  0f54eaf745db  fuse kio: avoid spurious uncork setsockopt on unix socket
match  fa6d4812f7d7  e90a98833f46  fuse kio: control internal tracing with module parameter pcs_loglevel
match  fd7e1c430783  d33beb028d2e  cgroup: fix css_tryget() to not succeed on offlined css
match  a8d9c8dd3a27  229c79e9e9ea  sched: Make calc_global_load() return true when it's need to update ve statistic
match  68178c46025c  89824556fe35  sched: Export calc_load_ve()
match  d6ee5862bc1d  cdf53073700c  sched: Call calc_load_ve() out of jiffies_lock
match  3cc505d7004d  f50873f40777  sched: fix cfs_rq::nr_iowait accounting
match  a80f48887ef3  6472a49855dd  kernel/sched: Use kvzalloc to allocate the array of ctl_tables
match  76b84815a011  168b717dc40c  ve/cgroup: do not link a CT cpu cgroup twice into ve_root_list
match  80598f5fda9c  9b7903af7728  proc/cpu/cgroup: make boottime in CT reveal the real start time
match  b4d656ba091c  913e95542940  x86/microcode/intel: hide warning on high order allocation for microcode area
match  796d1d23a163  67697a2d1ec1  fs/fuse: add non-blocking request flag
match  2739a82fd49f  c375c8d89b08  fs/fuse kio_pcs: throttle async KIO requests
match  01f9fc547482  dd78087dbea1  fuse kio: kio must not fail when not being able to claim a file
match  7cbbe23aeb9b  1a37a91486ab  fs/fuse kio_pcs: style fix in pcs_fuse_submit()
match  294d0faad909  cb1d8fc3b41f  fs/fuse kio_pcs: fix NULL pointer dereference in pcs_flushreq_complete()
match  0d78b7b922c2  578363f98740  mm/memcg: don't swap cgroup's pages during offline
match  393af328b16d  8c1a9be72450  fuse kio: Move map_chunk_start() and map_chunk_end() checks
match  bdaf8c87dfaf  d7456505a6ee  fuse kio: Allocate pcs_map from kmem_cache with SLAB_RECLAIM_ACCOUNT flag
match  3ae19b4199d0  fd350253e9e8  fuse/kio: Add socket io fault injection
match  f1b0aa515edf  90ec59a2afcb  bc: implement ubc "numproc" limit based on pids cgroup
match  b59c9fc3da5f  8aa7ef89ea87  ms/rpc_pipefs: fix double-dput()
match  f5605dc273df  83c4bde8d15e  rh/fs/dcache.c: Revert "fs/dcache.c: add cond_resched() in shrink_dentry_list()"
match  a904bd0c0680  b934e609554c  fs/fuse kio_pcs: missed *msg_size setting in rpc_get_hdr()
match  9da47edeaaa8  2ae5e1b0a405  config.OpenVZ.minimal: add some hardware drivers support
match  16e6dc5bdc37  2c36309ea801  ploop: store exec_ub in ploop request and use it while processing requests
match  9e3c20bd9f96  61ee8cc6d8e2  block: store exec_ub on struct request and use it
match  f7dbe5cf4ac5  c3b318992292  fs/fuse kio_pcs: disable TRACE/DTRACE for release kernel
match  8c660f866852  0f88e292482c  ms/sget(): handle failures of register_shrinker()
match  73c78e1b8cfe  c8da18ea9dd0  ploop: avoid crash if ploop request has uninitialized preq_ub
match  9b494805eabb  3be155cf941e  vz_latency: don't account allocations in interrupts to random tasks
match  90ed269244ef  80efb8676d75  /proc/vz/latency: distinguish atomic allocations in irq from in task atomics.
match  1f7a4ea92d2b  b81f77d6f93a  /proc/<pid>/vz_latency: Show maximal allocation latency in the last second.
match  65edb709d3d9  e10e973d54d4  /proc/<pid>/vz_latency: Add scheduling stats
match  43c4d1e8f2de  89a543e3048f  ms/mm: assign id to every memcg-aware shrinker
match  30124a10017c  fe496dfaa931  ms/mm/memcontrol.c: move up for_each_mem_cgroup{, _tree} defines
match  c2f0dfeb2835  81ecb39da654  ms/mm, memcg: assign memcg-aware shrinkers bitmap to memcg
match  a3690b342722  527f5c8e75a0  ms/fs: propagate shrinker::id to list_lru
match  854c86f37992  0d175bf0e41f  ms/mm/list_lru.c: add memcg argument to list_lru_from_kmem()
match  b66859836d17  e6a482c12d8a  ms/mm/list_lru: pass dst_memcg argument to memcg_drain_list_lru_node()
match  cd5878383631  e6de1568c0da  ms/mm/list_lru.c: pass lru argument to memcg_drain_list_lru_node()
match  3907562a424b  260d8c9ff991  ms/mm/list_lru.c: set bit in memcg shrinker bitmap on first list_lru item appearance
match  f9aaa0380d8e  1bc940d8ddf2  ms/mm/memcontrol.c: export mem_cgroup_is_root()
match  e48ed6402eff  5997c36d77d0  ms/mm/vmscan.c: iterate only over charged shrinkers during memcg shrink_slab()
match  0ca3b1068351  78317747e147  ms/mm/vmscan.c: generalize shrink_slab() calls in shrink_node()
match  1f3872c46503  e82ac704720b  ms/mm: add SHRINK_EMPTY shrinker methods return value
match  e9625472af07  1442bb29a46a  ms/mm/vmscan.c: clear shrinker bit if there are no objects related to memcg
match  ce01490747ec  dfb909b8716a  fuse kio: Cleanup in pcs_fuse_submit()
match  3808d46be824  8896652ebaab  fuse kio: Extract fiemap iteration from fiemap_worker() to separate function
match  c29b96eb93ca  fe40f929770e  fuse kio: Move it variable from stack to struct fiemap_iterator
match  e404ea9f0f16  ebb792c8b895  fuse kio: Kill fiemap_worker() thread
match  c8cf224b8cd7  84d01416f645  fuse kio: Move position advance in fiemap_process_one()
match  5163717172cd  67e095571ebc  fuse kio: Move fiter ireq iocount assignment
match  a5c002a1313d  0b8e1d41d7ca  fuse kio: Introduce fiemap_work
match  5752f11d686f  2bb3b89205a0  fuse kio: Async queueing of fiemap from work
match  203256fa8889  235751f04f68  /proc/vz/latency: Show max latency in 2 min instead of 5sec.
match  cf421bda4147  d049663e0466  ms/mm: kvmalloc does not fallback to vmalloc for incompatible gfp flags
match  570ba4a1095f  c4ed2879f2f9  mm/mempool: Use kvmalloc to allocate array of element pointers
match  5d4f6adfd614  cd9c823bed59  x86/kvm/vmx: suppress warning on high-order allocation
match  67209ec93176  5052a7bb51ef  ploop: kthread_create() errors processing
match  75bc371b8dbf  0857855b37e8  fuse kio: Do not zero already zeroed fields in pcs_find_get_map()
match  805806d8cbcb  b1c97a7c152d  ms/unix: add ioctl to open a unix socket file with O_PATH
match  ed4b0ce1d16a  c1818f01cb28  mm/vmstat, io_acct: fix PGPGIN/PGPGOUT in container's /proc/vmstat.
match  bcb41e04dacd  9be53d33ec94  mm/vmstat: Add more vmstats in containers /proc/vmstat
match  c189f409842a  f49800745095  fuse kio: Do not zero already zeroed fields in pcs_sockio_init
match  8974753cd5a0  ab4877fcd4b3  pfcache: don't inherit vm_private_data on split and copy
match  88ac1c1d0ee9  b75b99c37a41  fs/fuse kio_pcs: improve rpc to cpu binding
match  8039d9bac4ce  0dee9b0738e5  fs/fuse kio_pcs: time slice for rpc rebinding
match  d2262e6d910f  0a706b1071ce  IB/core: use kvzalloc to allocate ib_device
match  38cc77c1cf1f  cad4c26c80df  ms/slub: Fix possible format string bug.
match  2e14ccf5e105  5529fe2de166  ms/slub: fix leak of 'name' in sysfs_slab_add
match  08da24728786  d9373b6d98bb  ms/mm/slub: fix slab double-free in case of duplicate sysfs filename
match  94838f6506a8  d250a8a4da12  ms: Add braces to avoid "ambiguous ‘else’" compiler warnings
match  5b61a8906fcd  d0841966f1af  mm/slab: use monotonic serial number for naming per memcg caches
match  d8355f729a9e  3c71b63c6194  ms/slab, slub: skip unnecessary kasan_cache_shutdown()
match  0fd0c6c244a0  b0363bacea5a  ms/kasan: depend on CONFIG_SLUB_DEBUG
match  a643eff80c02  53a233b8b674  net: reorganize skb_gso_size_check() description to make htmldocs happy
match  d12dd38f829e  754531d5775f  mm/init: hide most of start_kernel() from KAsan
match  32a1ff4938a5  aa223556b927  md/bcache: add queue parameter to part_round_stats() call
match  a16b28e5f71c  8f685100efe1  mm: Fix int overflow in callers of do_shrink_slab()
match  8432baf26d7e  da024814dcd5  fs/fuse kio_pcs: fix race between req->end() and request_wait_answer()
match  d91cfec03569  71f4c75940b8  fs/fuse kio_pcs: remove fuse destroy request
match  bfc9a0956f00  065891a1f0d2  fs/fuse kio_pcs: drop rpc connection close in pcs_rpc_engine_fini()
match  24b3ed1b9aca  3cfd90c1cc5a  x86/mm/kaiser: Fix build with CONFIG_XEN=n
match  c664a4753447  187b199c9541  fuse kio: initialize batch in pcs_map shrinker
match  37e7384f0a32  6ca8d0c6cbd4  fuse kio: Add schedule_timeout() into pcs_rpc_fini_verify()
match  adbe14e92039  0b31ce762c74  fuse kio: Do not get useless fuse.ko module reference
match  8ae3e7b4da77  3f0ae5237cde  fuse kio: Revert fuse_request_free() changes
match  6a43a077aacd  ab2b04558081  fuse kio: Refactoring in fuse_show_options()
match  2e35bc8585ed  4b8a7c1bc65b  fuse kio: Introduce cached_op
match  709f35c9e239  1cb00200bede  fuse kio: Reorder process_pcs_init_reply() and free memory on failure
match  8b57ade144f3  536f6f90c156  fuse kio: Fallback to plain fuse in case of version mismatch
match  1b355e246c60  8479b776d006  fuse kio: Protect struct pcs_rpc_engine::{unhashed, ht, nrpcs}
match  94ad2bf908bb  1752de3ee879  fuse kio: Add debug printk into process_pcs_init_reply()
match  579607085166  a74c75ad52d9  fs/fuse: fix mutually exclusive flags in fuse_send_unmap()
match  6d828486a188  dcee8dfae003  fs/fuse: initialize req->io_inode in fuse_send_unmap()
match  79b11f2001bf  9aba14823095  fs/fuse kio_pcs: split kpcs_req_send()
match  ee647498fec6  6ba7d4929643  fs/fuse kio_pcs: prevention of falling kio reqs to usermode
match  caa5497175bd  dee1c429e57c  fs/fuse kio_pcs: fix double free of synchronous requests
match  66366cae204a  3dee1feec0e4  fuse kio: Fix deadlock in kpcs_req_send()
match  06a5ca55861a  bb60a2239241  fuse kio: Return possibility to handle files served in userspace
match  123f25df9531  fa6ca0188edf  fuse kio: Fix spelling in process_pcs_init_reply()
match  2406c93f3484  ce2277e20e6d  ms/x86_64, traps: Rework bad_iret
match  f226fde0dc51  be3723681b42  ms/x86/asm/traps: Disable tracing and kprobes in fixup_bad_iret and sync_regs
match  84a3dd8b8e61  bf96ef855cd9  ms/x86/asm/64: Clear AC on NMI entries
match  83569e0c511b  ef8a2cdf3ae8  fuse kio: Do not try to populate fuse_inode::private on second open
match  066f51fe58f4  0cd039511ea6  fuse kio: Differ fuse_pcs_kdirect_claim_op() return values
match  03b62e201b86  7a70c850dde9  fuse kio: Refactoring in struct pcs_rpc
match  efea4f48e752  c2aa378d8f39  fuse kio: Port "ignore uninitialized CS addresses" commit
match  ca6a7f0af8f8  02c2171ce9d5  fuse kio: Use __maybe_unused
match  dfceef494f93  bc7fbfdfa14f  fuse kio: Use sio eof instead of parent to determ abort
match  152b0841abea  92a5943ed884  fuse kio: Reorder callback assignment
match  99f7ff524391  32f52e994f60  fuse kio: Add pcs_cleanup_wq
match  29850689a6a3  f8b09d4467b7  fuse kio: Destroy rpc in work func
match  a39dfe6eea70  b5fc1a84c910  fuse kio: Introduce pcs_sk_kick_queue()
match  0ca3dcd1afd5  8a01a7ac4a1a  fuse kio: Dereference sk_user_data under rcu
match  c824a5a76a80  213b91046d1f  fuse kio: Fix rpc socket leak on rpc_abort()
match  66499711964e  da145be2c6d8  fuse kio: Hold pcs_rpc counter till sio may be freed
match  8bcfcb6048fa  d4e10938c8df  ms/mm, mempolicy: migrate_to_node should only migrate to node
match  edd0aead4b4d  58c5beb95aac  fs/fuse kio_pcs: drop old mapping after size growth
match  e4a9b6f4f74e  6fc5e9484a64  x86,ia32: Restore 32bit personality
match  55054728f232  b231d247702e  fuse kio: Stop self-abuse of rpc counter in rpc_queue_work()
match  55904e7676ce  39e69ff2545c  fuse kio: Check for null ep in pcs_rpc_deaccount_msg()
match  a39ac2cfb0ac  faaba34b8bf3  fuse kio: Move abort & destroy block up in pcs_rpc_send()
match  cd56175d2084  e61f6625cddd  fs/fuse kio_pcs: flush rpc work inside pcs_rpc_destroy()
match  2e4fb2bd4b4a  3fbad6f95761  fuse kio: Fix deadlock at pcs_fuse_submit() error path
match  772763835a7d  2b94d198f3a1  mm/tcache: don't insert empty reclaim node
match  297aa49187fe  f3d65250cfd7  mm/tcache: rebalance tree if isolation failed
match  91b9f177715e  25dd5616141a  mm/vmscan: shrink tcache, tswap upfront everything else
match  f421d9b0309a  10cd29b2afc5  ms/ipc/shm: fix use-after-free of shm file via remap_file_pages()
match  05f0027a8e88  dd99b9611997  fs/fuse kio_pcs: fix NULL pointer dereference in pcs_mapping_truncate()
match  031db527dea5  09158b625355  fuse kio: Unexport pcs_ioconn_close() and pcs_ioconn_unregister()
match  b4eb41e4d2c7  1704c065fedf  ploop: fix int overflow when calculating used_pos
match  0c9a0272c2c5  cd5c11ae19d9  memcg/debug: warn early when releasing memcg css with non-zero kmem
match  a6a61fa35104  1c2b13d39097  kexec, kasan: increase KEXEC_AUTO_RESERVED_SIZE under CONFIG_KASAN=y up to 1G
match  22dc3fc1e50c  173281f41a8d  ms/ksm: React on changing "sleep_millisecs" parameter faster
match  bcf32c25c6f4  5ce7d60a5a12  lib/kmapset: fix undefined behavior in kmapset_cmp()
match  df0e1818766d  89a7aec2b357  ms/kprobes: Avoid false KASAN reports during stack copy
match  229d6fcefa79  c72c64726646  ms/kasan: add functions to clear stack poison
match  25e16af1f474  34bc15306fee  ms/kprobes: Unpoison stack in jprobe_return() for KASAN
match  c95000069566  0bbb14103aa3  ms/sched/x86: Add 'struct inactive_task_frame' to better document the sleeping task stack frame
match  257f00ae74a8  a30b6dc6d9c4  ms/x86/unwind: Disable KASAN checks for non-current tasks
match  2f4fd59740ea  4c1eae0a1a4e  fuse: Fix parse_fuse_opt() return values wrong interpretation
match  aeee934056dc  d28416bd1f23  fuse: Prohibit kio engine from containers
match  ce1f49e00cf5  58d272f80b8d  fuse: Switch unused engines off in Kconfig
match  22c3c574142f  179138869c5a  fs/fuse kio_pcs: make map_truncate_tail() working as the original from libpcs_client
match  1071293a44f7  10cc41c82277  fs/fuse kio_pcs: forgotten setting of the next phase
match  a87d0816ef24  d8c8debd5556  fs/fuse kio_pcs: fix condition for map resolving in pcs_mapping_truncate()
match  a5dc12727980  1415cd4de809  fs/fuse kio_pcs: protect valid_for_truncate() by m->lock's
match  f558ede4415c  1244b073f214  fs/fuse kio_pcs: fix map leak in pcs_mapping_truncate()
match  29cd54835e1b  494d455bd678  fs/fuse kio_pcs: simplify pcs_mapping_truncate()
match  ed8ff8fafbef  1faef4dbb6fb  fs/fuse kio_pcs: fix map leaks in process_ireq_truncate()
match  23a4bac3aa66  d69453d88ecb  fs/fuse kio_pcs: NULL pointer dereference on access m->mapping->chunk_size_bits
match  a983f66c88e2  cd414d7f047e  fs/fuse kio_pcs: NULL pointer dereference in map_submit()->MAP_ARGS()
match  ec8895e4971a  5458bfe4ab1b  fs/fuse kio_pcs: cleanup in truncate (backport)
match  f5f01241200a  359f6135e28a  ms/vmscan: memcg: always use swappiness of the reclaimed memcg
match  e82ca0e78fe5  f7f2b2a08dc1  ploop: create helper to access ploop_device->entry_tree
match  45c54b7a82c3  f1bf49a77402  ploop: add separate tree for existing discard requests
match  a82496a48c8a  1b390fda44fc  ploop: change default of discard granularity and alignment attrs to PAGE_SIZE
match  2b932b607a08  7916178808b6  ploop: fix negative discard size in preprocess_discard_req()
match  4806d5c2abfd  2d6cfffe9858  ploop kaio: successfull alloc should adjust alloc_head
match  27fc3cbd89e0  3a2722bbf718  fs/fuse: add assert on i_mutex in fuse_send_unmap()
match  50c63f93a6e8  03dd075f40a5  fs/fuse kio_pcs: add assert on i_mutex for PUNCH_HOLE and ZERO_RANGE
match  602130263af1  eff00cc8f8c7  fs/fuse: add assert on i_mutex in fuse_send_write()
match  db0bae01418b  c317ec012a0d  mm: cleancache: fix corruption on missed inode invalidation
match  d36c343fe0ef  9763179f7da2  fs/fuse kio_pcs: make pcs_map_truncate() easier
match  5a0e4b18623d  893d1d9aee05  fs/fuse kio_pcs: cleanup kpcs_setattr_end()
match  a134fbbdca70  002f22d5d95b  fs/fuse kio_pcs: invalidation maps in setattr kio
match  5e1e6e426e01  42d535c0c82f  ploop: convert prealloced_size to absolute offset
match  49e3f5a37dfc  58642ed92873  fs/fuse kio_pcs: fix update cs state after receiving new map
match  b553391744ba  2e49a3091339  vzstat: account "page_in" and "swap_in" in nanoseconds
match  d76b16d8a459  2b0d4a7666de  ms/dlm: fix possible call to kfree() for non-initialized pointer
match  a46ce8ab93bc  4e123b8d00de  fbcon: use kvmalloc() for scrollback buffer
match  e7f793d3dd19  ac40a2c5a7a3  fs/fuse kio_pcs: replenish netaddr_cmp() with rdma type
match  3540b3952981  d754f1b2c3ba  ploop: move standby mode setting to separate function
match  16d9ba0018b1  59f17e9250f2  ploop: move to standby mode after fsync() error too
match  c38b52836a67  e868f1e0b1a3  ploop: move to standby after -ENOTCONN too
match  eb06066469c3  83282928f80a  fuse kio: Round down extent start in fiemap_process_one()
match  8f77fb619ede  f17dce4d1a07  fuse kio: fix timer setup so it actually delays ireq
match  3518446554c5  174367bc2ace  fuse kio: never ignore fuse_req error during PCS_IOC_GETMAP
match  d335a6d755b0  53fbf952fa5f  ms/lib: Add xxhash module
match  d89c0cc3580e  1eb11e192f70  ms/xxHash: create arch dependent 32/64-bit xxhash()
match  2e973cca77f6  c883bb4f8c06  ms/ksm: replace jhash2 with xxhash
match  f2b46151c73d  1d7e6db335b6  nfsd: disable UMH client tracking in nested net namespaces
match  6f19d1cd1529  28e27c9efcf6  sunrpc: cache_head leak due queued request
match  113d9e5fb75a  0df7015bfd4c  ms/sock_diag: fix autoloading of the raw_diag module
match  5854abeb60d3  72c0d5fc4eec  fs/fuse kio: fix loss of FUSE_FSYNC/FUSE_FLUSH reqs
match  6d7fb49991f8  21efa955c947  fs/fuse kio: fix sreq and msg leak in prepare_map_flush_ireq()
match  158752a3f8e5  473986899bfd  fs/fuse kio: retry allocation PCS_IREQ_FLUSH request
match  ae9dcbfdcd91  ba1267298738  mm/memcg: Fix NULL-ptr dereference when memcg diabled at boot.
match  8b72a6a9e033  a390c3ad6ce1  tcache/tswap: don't shrink tcache/tswap until they are initialized
match  90def4f60834  8792b46f6e26  fs/fuse kio: missed clean di->size.op in failed shrink request
match  1f796370fe7c  cf938de1179e  mm/page_alloc: add latency to the page_alloc tracepoint
match  4b2c313c1c89  9573662efa90  fs/fuse kio: missed cleanup for interrupted shrink request
match  c70758c864b3  8dc643bea5bc  fuse: do not wait for completion of inessential writes in fuse fsync
match  0f9720a00124  5158d4ccfc02  ms/drivers/gpu/vga: allocate vga_arb_write() buffer on stack
match  262701c17394  8ae99fc6cfc4  fs/fuse kio: fix mapping dereference in a dead map
match  c676dc572eef  f088fe14038f  fs/fuse kio: satisfy pure FALLOC_FL_KEEP_SIZE immediately
match  af65b46f4c49  553fb2793680  fs/fuse kio: backport immediate-write attribute handle
match  f7b0f6f515eb  a1d4c55e4501  fs/fuse kio: add support PCS_CS_IO_SYNC flag
match  47a22bf7d915  d5041bcff997  fs/fuse kio: deny unavailable ioctl's in kio
match  37dda65ae523  adf502a95cd2  fs/fuse kio: bring fuse ktraces to a common view
match  4fad72981a2f  12fb7d15fc10  fs/fuse kio: disable duplication FUSE_K* messages to debugfs by default
match  6711dd7f2865  3ada08a904a9  fs/fuse kio: make it possible to enable TRACE/DTRACE in the release kernel
match  8abf9dc3427c  e7bc505e58d3  ms/huge pagecache: extend mremap pmd rmap lockout to files
match  210b5804225c  c58d0e5f126f  ms/mm: speed up mremap by 20x on large regions
match  b41363bf4dca  03916a06ae10  ms/mm: select HAVE_MOVE_PMD on x86 for faster mremap
match  0aa0bd34404e  1211d90ad9c6  ms/mm: workingset: size shadow nodes lru basing on file cache size
match  67f3e6f2449c  4af2db05d6a8  ms/mm: workingset: update shadow limit to reflect bigger active list
match  5ae87898b5e7  bb2aef146a40  ms/slub: Make cpu partial slab support configurable
match  1186d4357521  cc5674e562c1  ms/mm/slub: set slub_max_order = 0 by default.
match  7a1829d84fd8  59896aae9d0b  net/gre: Consider VE_FEATURE_IPGRE on new net creation
match  56574778dfab  08916fe6639e  net/ip6ip: Consider VE_FEATURE_IPIP on new net creation
match  14f34fbcb7ce  ee9658c8d09d  seccomp: Add PT_SUSPEND_SECCOMP in __secure_computing
match  78966fac287f  9129a708e868  ms/sunrpc: use SVC_NET() in svcauth_gss_* functions
match  6537f57fdd62  9b16810002f2  pfcache: silently drop "trusted.pfcache" xattr when set on inappropriate fs
match  2bd805905c11  56c78334672b  ms/ipvs: remove an annoying printk in netns init
match  ac6d0d044089  f8d73ef77e78  fs: Export symbols replace_fd() and create_pipe_files()
match  bfba8b2bc67f  9fad2a107a34  fs/fuse kio: invalidate files for kio
match  9f10664be78d  3a78af979420  ploop: Fix discard BIOs mis accounting
match  1013f63029b8  d3c883fe8609  fs/fuse kio: add FUSE_S_FAIL_IMMEDIATELY check in pcs_fuse_submit()
match  892b21fbf9ee  740804ff440b  fs/fuse: fix unsafe killing fiq->pending requests
match  aa609f845d3c  8fec9809084f  net: export net/core/somaxconn sysctl for unprivileged users
match  498ffc3c46df  7ba0b727afce  ploop compact: remove alloc_head BUG_ON before truncate call
match  95b5d4a4cfb7  087d9b1ba615  ms/virtio_balloon: fix another race between migration and ballooning
match  f9816c3da227  d924f9196196  x86/pci-dma: don't warn about high order in dma_alloc
match  47c04f79df84  113406b134c8  ploop: Remove unused argument get_block
match  f27b74a65d41  7d1374b6e535  ploop: Remove dead "pcss"-related code
match  f1a545970706  dae40087b3bc  ploop: Kill unneeded PLOOP_S_WAIT_PROCESS bit
match  fc67318c3705  f859ec672537  pfcache: don't get inodes which are beeing freed
match  9bfd0198569b  8a0e4e38a117  mm/vmscan: Don't shrink active lrus on the first try.
match  35f5bc0da9a8  3c36e81912de  mm/page_alloc: use sched_clock() instead of jiffies to measure latency
match  338b7a1f901b  0f7b50b37e8f  ploop: Remove unused argument of __map_extent()
match  3079f28093bc  99b03aff0ae7  x86: Add __GFP_ORDER_NOWARN to dma allocations
match  68e80b2c2829  2af3c0ddef43  i40iw: use kvzalloc to allocate array of control qp requests
match  895da323c729  4cf489db2663  i40iw: Use kvzalloc to allocate i40iw_handler
match  c9c3721d5dd7  29a10d85ea2b  i40iw: Use kvzalloc in i40iw_allocate_virt_mem()
match  01538c405f27  91248bdfac76  ms/mm: vmscan: pass memcg to get_scan_count()
match  824f54af05b0  911c8fbedf3d  ms/mm: workingset: #define radix entry eviction mask
match  3ff44972d797  f85ec3c55a36  ms/mm: workingset: separate shadow unpacking and refault calculation
match  852369ee2cce  12303a28071f  ms/mm: workingset: eviction buckets for bigmem/lowbit machines
match  da81319d219b  81b36b5d240c  mm/memcg: initialize mem_cgroup_per_zone_info earlier.
match  0c8fe31e55c9  6fdbc60de319  ms/mm: workingset: per-cgroup cache thrash detection
match  8f049c5033e4  0823107729be  ms/mm: workingset: make shadow node shrinker memcg aware
match  6711a953dc38  7acb9b84f1e8  mm/vmscan: active lru protection fixups.
match  be359feead63  4beb911dd39c  mm/swap: activate swapped in pages on fault
match  12b5034e1364  fe2a66aec2ec  mm/slub: Don't compact memory for high-order optimistic allocation.
match  f6d77c4c20dd  66e2a8fda636  tty/vt: avoid high order pages allocation on GIO_UNIMAP ioctl
match  810266256b76  83fd7aafff16  net: silence high-order allocation warning from UDP with big headers.
match  d436d5f2f4d2  1298ddf6a849  mm/page_alloc: fix allocation failure of zone-restricted allocation
match  01f4cc1ae0eb  18452f5ccbe5  mm/vmscan: scan active file and anon lists if inactive file list is too short
match  0fe4a998ac20  579daa769704  mm/vmscan: don't shrink active list once more in case we reached nr_to_reclaim
match  29d17f81828a  e58d9e8dd44d  RDMA/ocrdma: Remove unused STAG array.
match  5933872f5bca  2c8c7eafc5d6  net/skbuff: Don't waste memory reserves
match  e06a494adf61  52d3a4c1f244  net/skuff: WARN if kmalloc_reserve() fails to allocate memory.
match  457a910f63f9  8aaa5f9bf592  ms/tcp: fix potential huge kmalloc() calls in TCP_REPAIR
match  9ba56f85297d  09fe0e4b73b3  ms/net: use skb_clone to avoid alloc_pages failure.
match  92470555e727  4b8a8e35b186  prctl: Fix false positive in validate_prctl_map
match  570f6ba44121  98abef11a743  net: Allow autoloading conntrack nft-helper-* modules
match  8a5e5e53a1eb  7517c8792391  kernfs: keep kernfs node alive for __kernfs_remove()
match  8bf0303847b8  9e915b6b3f8f  ms/mm/slub.c: run free_partial() outside of the kmem_cache_node->list_lock
match  8a09c052f62e  af036c35d489  mm, memcg, oom_gurantee: change memcg oom overdraft formula
match  ac06fbdb44f2  c4c5adadba86  mm/workingset: fix possible race with memcg deletion.
match  52544fe46593  a3d6663cc6eb  mm/workingset: fix workingset_activation() with memcgroups enabled
match  18bafa06c29e  b8f10975a02d  mm/workingset: Fix memcg_inc_ws_activate() with disabled mem cgroups.
match  24de574e3a5e  74d40547b499  mm/workingset: Fix workingset_activation() with disabled mem cgroups.
match  1fed04515456  975f099af8f4  ms/mm: scale kswapd watermarks in proportion to memory
match  62b6e9c2a818  4d108744c730  mm: extend generic iov iterator API
match  e32797d46964  de636ed641da  ms/Documentation: add watermark_scale_factor to the list of vm systcl file
match  d85d067b44d6  3081c4039055  memcg: mm_update_next_owner() should skip kthreads
match  8388eb5e38bb  22415b527f68  memcg: optimize the "Search everything else" loop in mm_update_next_owner()
match  94cbd072bd23  5fb2cb0f2f55  DMA-API: exceeded 7 overlapping mappings of cacheline share
match  9d0f849b831c  8e452497117c  ploop: introduce dio_may_fallocate() helper
match  ae41d32a3a0c  4e86738373c8  ploop: Export whole_block()
match  62588c4c8f4c  5986444a213e  ploop: Add cluster_size_in_bytes() helper
match  ac6d0e716725  ee9b1d9732b6  ploop: Add cluster_size_in_sec() helper
match  fb086dfa581f  9b6ced81e3bb  ploop: Add local variable into dio_submit()
match  c6619bf1958e  55a165f8d306  ploop: Add cluster_log local variable
match  70f095d7af22  8a204196152a  ploop: Add trim_extent_mappings_tail() helper
match  520b0891f4c5  8afd75c46691  ploop: Introduce local variable in ploop_start()
match  ee1430cd9818  803ad7a61605  ploop: Never merge discard requests
match  ef4bacfc2364  f678d1053702  ploop: Set up discard limits
match  e126806df730  d5e6cc756959  ploop: Introduce ploop_can_issue_discard() helper
match  3e9e8aa7964d  356f2baf188b  ploop: Online discard support for dio engine
match  a80d465aee45  1b0ad5276fa1  ploop: Enable discard support for ploop1 format backed by io_direct
match  4e6b18aef678  d4364a306ae7  ploop: Skip repeated discard
match  0c9adc15d1dd  e91a25c839f1  ploop: Prohibit custom discard alignment and granuality
match  7856031490f2  b0af9691fcb2  ploop: Prohibit discard in case of multi-delta case
match  c25edd5cb8de  ba5a8f2aa438  ploop: Do not forget to put io context
match  f19d858067d1  247cc693efb9  ploop: Merge repeating prepare_merge patterns in single function
match  12c7003b5a3f  5c3db31c7f9c  ploop: Fix race between .prepare_merge and .submit_alloc
match  35be9d0f11ec  7d293ff37c05  ploop: Export map defines to separate header file
match  1d9694ef1ad1  8b002eed8654  ploop: Make submit_alloc() return int value
match  36a84d6f2365  7d6e05930c73  ploop: Introduce ploop_submit_alloc() helper
match  868b4acd0d49  cfde8d6075ea  ploop: Prohibit discard ioctls
match  85a53e9d4298  020c10ad8bfe  ploop: Prohibit PLOOP_IOC_UPDATE_INDEX on singular list
match  c96bf9045f66  243c376bbb64  ploop: Introduce data_off_in_clusters() helper
match  b369c31a0be4  0f3dd33e0ada  ploop: Add .complete_merge method
match  75a4b4a0655f  9ac742a00a6f  ploop: Zero indexes on discard
match  c4a309cf5e35  8601c6772637  ploop: Fallocate cluster in cached_submit() during hole reuse
match  2bb45b6577af  27926275de69  ploop: Populate and maintain holes bitmap
match  81de0147fd7e  44c5e00b5b16  ploop: Fix huge grow with head clusters relocation
match  94e31993ce6a  d4abebb29d79  ploop: Add native discard support parameter
match  c6746c5750c6  316c0a23dc74  ploop: Make PLOOP_IOC_FREEBLKS always return 0
match  d80fcb87d704  39f580e59678  ploop: Repopulate holes_bitmap on changing delta
match  8b859241afac  430921be5008  ploop: Clear abort bit on replace delta
match  9f4ef7077d32  4b1eb3f667eb  ploop: kaio: Enter standby mode on EIO as well
match  3543f78d5301  0f8cfbdc4ae7  fs/fuse kio: fix double free of pfc in process_pcs_init_reply()
match  06f0a7ed7d61  daa48d960fa6  fs/fuse kio: fix getting a non-existent pcs inode in kpcs_kill_requests()
match  356d1d200981  5ad82c220eb5  fs/fuse kio: export fastpath protocol version
match  11c5a13ac761  e1a6f786351d  fs/fuse kio: fix a typo in worth_to_grow()
match  8f0d6e1818bd  5b7e13649d9a  fs/fuse kio: relax congestion avoidance limits (backport from usermode)
match  40e6aa38707d  21c32e29b4ed  fs/fuse kio: add missed sock write in pcs_sock_sendmsg()
match  ae003b2a3e0c  0d979355c1de  fs/fuse kio: export io_locality
match  f9e88a43629f  424177389d73  fs/fuse kio: sync pcs_mds_sys_info struct
match  7fe26dfdd8ab  2081d24e03f5  fs/fuse kio: add warning about jumbo chunks
match  d37f506fcbba  9479257dfae0  ploop: Enable native discard support for kaio engine
match  8383364f934d  a0d87bfd955f  fuse: do not take fc->lock in fuse_request_send_background() - fixup
match  4441acd30e9e  eb962b1abe49  fuse: Check for req->ff in fuse_request_queue_background()
match  c3af37a00eaa  595bf7e016f7  ploop: Check for top_delta in ploop_congested()
match  7c3640ef5630  72548355bf27  ploop: Return maintaince mode ioctls again
match  13d2f9dbae22  95d897b56d06  ploop: Show whether device supports native discard
match  02bb10f0c846  8fcbfcf3dae4  fs/fuse kio: forward fuse_file pointer to kpcs_req_send()
match  c3dcf9ee5164  6f93c98c8e3a  fs/fuse kio: add pending kio requests to kqueue
match  bf0e82b03b26  0afaac49290d  fs/fuse kio: style fix in pcs_fuse_submit()
match  e6f6ea6603b5  f19a59ce40bb  fs/fuse kio: keep fuse_file for requests waiting for shrink
match  d5e6721138a3  576d5776109e  ploop: Fix maintaince_type obtaining design problem
match  a18d0bdea5f7  aaac627e74f6  ploop: Add lockout on discard requests
match  56236034a006  19a8588a6e2e  fs/fuse kio: fix latency time count
match  a0686e95b74c  9f82da0a4f9c  fs/fuse kio: make req_classify callback
match  b1dc54f051a7  c397e275269c  fs/fuse kio: simplify processing and sending kio requests
match  bba7d9c90858  d1f883e68b9c  fs/fuse: fix locked kio request send
match  a8c2e46f46ad  5e8aa5bc746b  fs/fuse: add conn_ctl to fuse_conn struct
match  7e3ef8a8e043  a6fda35181ad  fs/fuse kio: create sysfs stat directory
match  6fa389b3895c  1f05020c5b19  fs/fuse kio: implement iostat statistics info
match  28b181be36b5  57f9bde3460f  fs/fuse kio: make interface pcs_kio_file_list() for listing kio files
match  87c4c16cb0fc  1b9872eb2dae  fs/fuse kio: make interface pcs_kio_req_list() for listing kio reqs
match  9b9dc0ad71ab  99b9fa151ac5  fs/fuse kio: add retry counter for kio requests
match  40e90048ac73  ad61f5a82ee5  fs/fuse kio: implement pcs_strerror()
match  4688ddf1ae81  4dc00b0e8ac6  fs/fuse kio: implement requests statistics info
match  c8bb52f9e83f  1e95a1e11acc  fs/fuse kio: implement fstat statistics info
match  06fcd701b48d  563d97bd14a5  fs/fuse kio: implement fstat_lat statistics info
match  4ccb00560dd0  a9687010b182  fs/fuse kio: remove useless pcs_cs initialization
match  e3b6051d9ea3  f56bea62fceb  fs/fuse kio: implement cs statistics accounting
match  0766e8478c04  eed83d7fc114  fs/fuse kio: convert rpc state id to string
match  b507d6042099  d1f8b71fb8de  fs/fuse kio: implement cs_stats statistics info
match  7a509b0b652a  2af15c735d2b  fs/fuse kio: cosmetic changes in pcs_fuse_prep_rw()
match  d40fa70fdd9c  ce0b915ad9df  fs/fuse kio: fix inode leak in pcs_fuse_submit()
match  a96446c6b113  45f0787eab6f  fs/fuse kio: fix stack overrun in request_end()
match  ebc7b533e927  dcddd9887b45  fs/fuse kio: skip iostat count for unknown req types
match  af1e5c8b2c48  9440345ca98a  ploop: Do not warn when BAT is wider than disk size
match  d5bf55adc2b2  240261434254  ploop: Introduce set- and clear- holes_bitmap wrappers
match  2d4af6b91240  98f9c661c3a1  ploop: Ignore clusters above holes_bitmap
match  728337eeb24f  ba6eb2c76af8  ploop: Add sanity check on stop
match  fa969f59f859  960e1627c1c9  arch/x86/kernel/cpuid_fault.c: copyright update
match  38d609face8e  bd1ef2f6f696  block/blk-cbt.c: copyright update
match  b9ca3e256c87  62e6c9c4dfed  drivers/block/ploop/Makefile: copyright update
match  8ab454e3b5e2  da53f1acbb48  drivers/block/ploop/dev.c: copyright update
match  da39cf79632b  5d3a464f4f3d  drivers/block/ploop/discard.c: copyright update
match  d33e431c2175  d2f1b1ca8e5e  drivers/block/ploop/discard.h: copyright update
match  fd2ced4f4eed  6e6028bfd70f  drivers/block/ploop/events.h: copyright update
match  31812fed55ae  978bcfe25ee1  drivers/block/ploop/fmt_ploop1.c: copyright update
match  51d6ec925d3a  3229e84391dc  drivers/block/ploop/fmt_raw.c: copyright update
match  f76cc95ef64a  240723b0dad3  drivers/block/ploop/freeblks.c: copyright update
match  e91fd31de2f8  c31781e55272  drivers/block/ploop/freeblks.h: copyright update
match  7205a1a8d1d9  c03861b447f7  drivers/block/ploop/io.c: copyright update
match  4ae0b9a9c5ee  481b99de6e7e  drivers/block/ploop/io_direct.c: copyright update
match  e6d2209af7d7  d6fabfcd946e  drivers/block/ploop/io_direct_events.h: copyright update
match  c5d69c403c1f  7676129a21a2  drivers/block/ploop/io_direct_map.c: copyright update
match  17e486a55e9a  4cf4e7ab253b  drivers/block/ploop/io_direct_map.h: copyright update
match  631c9a5c052a  de4e3e5fbfdf  drivers/block/ploop/io_kaio.c: copyright update
match  790ad0da8c2a  8fcdf5bdd075  drivers/block/ploop/io_kaio_map.c: copyright update
match  93bd76478f5a  6e5497a7c5a1  drivers/block/ploop/map.c: copyright update
match  41728b81dd5c  da9e77f80471  drivers/block/ploop/ploop1_image.h: copyright update
match  84022541a3b7  7ec75d08d633  drivers/block/ploop/ploop_events.c: copyright update
match  ca6fd19c9e94  32800fc9d3f0  drivers/block/ploop/ploop_events.h: copyright update
match  b480487e3749  4bf918e268e9  drivers/block/ploop/push_backup.c: copyright update
match  8bff4f4d8522  cb5a509aa35a  drivers/block/ploop/push_backup.h: copyright update
match  b2975808fbdd  6ecdd6180e69  drivers/block/ploop/sysfs.c: copyright update
match  20f098a2c81a  2a7ad4b01713  drivers/block/ploop/tracker.c: copyright update
match  91226d5c2386  19d8902f5788  drivers/net/veip_mgmt.c: copyright update
match  4a2ca1538e97  10a970e5df17  drivers/net/venetdev.c: copyright update
match  0b62729632c6  50a74056f5ff  drivers/scsi/scsi_dbg.h: copyright update
match  26207650ee20  750810de1ca3  fs/ext4/pfcache.c: copyright update
match  9a7777d5d831  d67038ad0770  include/bc/beancounter.h: copyright update
match  b13c6b42dc14  09ba42f7bcc4  include/bc/decl.h: copyright update
match  34ade1b94d5e  a54050f9c00f  include/bc/io_acct.h: copyright update
match  755d2b69b664  1df6fa95ca16  include/bc/misc.h: copyright update
match  8c3277f46315  b1d3552685b7  include/bc/proc.h: copyright update
match  54270ea8e851  fdf427644cb1  include/bc/task.h: copyright update
match  82c10896c832  46df62974498  include/bc/vmpages.h: copyright update
match  692606a00eff  5a4e498991a7  include/linux/fence-watchdog.h: copyright update
match  b46ab1e5c9fc  9eb59236f023  include/linux/kmapset.h: copyright update
match  1d1125966f9f  0d6c1cea1c8e  include/linux/pfcache.h: copyright update
match  98deca29499e  682a2b7e9aee  include/linux/ploop/compat.h: copyright update
match  9cc97bee3f8c  2bdde7eaa515  include/linux/ploop/ploop.h: copyright update
match  78d6b452f312  223a0a296899  include/linux/ploop/ploop_if.h: copyright update
match  819aa385a988  fecf9adbb6f8  include/linux/ploop/ploop_stat.h: copyright update
match  e992e02aea9f  c5531ee1af03  include/linux/ve.h: copyright update
match  71888dafee2d  b21e2596b636  include/linux/ve_proto.h: copyright update
match  d8311f009af6  7ea9e0153bf7  include/linux/veip.h: copyright update
match  aec572bde7cf  de454142cf9b  include/linux/venet.h: copyright update
match  296b139b620e  3e98e0eb627d  include/linux/virtinfo.h: copyright update
match  201190f954a2  44b93a56a254  include/linux/vzctl.h: copyright update
match  5c6add2c375c  188a229bb5b1  include/linux/vzevent.h: copyright update
match  6a4e2c560597  8015daf51e7e  include/linux/vziolimit.h: copyright update
match  58c01029f587  50c0ab22dff5  include/linux/vziptable_defs.h: copyright update
match  ea8058b63cb9  c6c88715e457  include/linux/vznetstat.h: copyright update
match  cd710b2984d8  8de08efc3fee  include/linux/vzprivnet.h: copyright update
match  34c01a9dd293  2fd7d807501b  include/linux/vzstat.h: copyright update
match  1573999d4faa  3a036a33034a  include/net/udp_memcontrol.h: copyright update
match  684cef380436  e8ddd75d54d4  include/uapi/linux/bc/statd.h: copyright update
match  abf6958ab886  973f63f6ca14  include/uapi/linux/beancounter.h: copyright update
match  3519eaf92c9f  5b5a93125ec6  include/uapi/linux/venet-netlink.h: copyright update
match  ab471c447673  685bbe41a4a4  include/uapi/linux/vzcalluser.h: copyright update
match  3c9814f046bb  b1646cc43f9c  include/uapi/linux/vzctl_netstat.h: copyright update
match  aea2c2a45178  fb451f08ac76  include/uapi/linux/vzctl_venet.h: copyright update
match  38e44a5278ac  b8ae3a9ae68b  include/uapi/linux/vzctl_veth.h: copyright update
match  f8f39febb086  d95ce7381183  include/uapi/linux/vziptable_defs.h: copyright update
match  5ccba0f4626c  4084bf17393b  include/uapi/linux/vzlist.h: copyright update
match  98e1083e2678  45e1ff2b8059  kernel/Kconfig.openvz: copyright update
match  05f3d95225c2  525f49cde4c7  kernel/bc/Kconfig: copyright update
match  60f8723cb1ab  238404ae481b  kernel/bc/Makefile: copyright update
match  320c4382b29b  141d47559ac6  kernel/bc/beancounter.c: copyright update
match  7d7f086afbb8  85d50b7bb59c  kernel/bc/io_acct.c: copyright update
match  0d8a0569e088  cacdacb99f82  kernel/bc/io_prio.c: copyright update
match  735645f589b2  ee664391c7ec  kernel/bc/misc.c: copyright update
match  9da8f7ac16d4  e7ad03e3defa  kernel/bc/proc.c: copyright update
match  bbab036f862f  cbdb9d1e314e  kernel/bc/statd.c: copyright update
match  44a3e91fa018  e0e980a0958f  kernel/bc/sys.c: copyright update
match  369e40ef4ab7  3415a489d3ab  kernel/bc/vm_pages.c: copyright update
match  814bc768a87d  b20bf28e781a  kernel/fence-watchdog.c: copyright update
match  fa44de17fbe9  c18e4be5a442  kernel/ve/Makefile: copyright update
match  ef8cc4eb5cef  29f1285c2e6c  kernel/ve/dummy/Makefile: copyright update
match  47bd80df0aba  6788b7433fb9  kernel/ve/dummy/ip6_vzprivnet.c: copyright update
match  b654eaa1636f  27c42b4df858  kernel/ve/dummy/ip_vzprivnet.c: copyright update
match  228ea1dfe7a7  0790d9e5a938  kernel/ve/dummy/pio_nfs.c: copyright update
match  08acf8c7fea5  1075dcdc0f5e  kernel/ve/hooks.c: copyright update
match  dbbe9453e6b2  c9869b7dd8aa  kernel/ve/ve.c: copyright update
match  b4cc1a1131dd  e662c0fec646  kernel/ve/vecalls.c: copyright update
match  141ed98281c6  7ea5bce8ce32  kernel/ve/veowner.c: copyright update
match  c4e612ad729b  019b29f3f46a  kernel/ve/vzdev.c: copyright update
match  e8269fea81d4  90a4e4fa0655  kernel/ve/vzevent.c: copyright update
match  5c586e392b37  e8ae79c75833  kernel/ve/vziolimit.c: copyright update
match  87e7a4aa7710  d45213d3033d  kernel/ve/vzlist.c: copyright update
match  d0f0fe3d4012  85ad12c292ad  kernel/ve/vznetstat/Makefile: copyright update
match  d1b2d3c85a14  cf1978fd0b6a  kernel/ve/vznetstat/ip6_vznetstat.c: copyright update
match  a8023ccf776c  4dddf25eb20f  kernel/ve/vznetstat/ip_vznetstat.c: copyright update
match  7aa2310e1fd3  98b6c447701b  kernel/ve/vznetstat/vznetstat.c: copyright update
match  19a34b53f6be  447fd8f0ff2d  kernel/ve/vzstat.c: copyright update
match  447041e6dc0f  1d6eb58fd548  kernel/ve/vzstat_core.c: copyright update
match  6fb4a6d3b7b0  7818b81ae6b5  kernel/ve/vzwdog.c: copyright update
match  c29656a4a063  8ce7d2d9f1c2  lib/kmapset.c: copyright update
match  bb86b8975893  d4e21cad5e17  mm/iov-iter.c: copyright update
match  7c42ff2392a9  9c7986d7757d  mm/oom_group.c: copyright update
match  d3464dcca2d5  607b90aad2d0  mm/page_idle.c: copyright update
match  455894ff40fd  70b1fb049b4c  mm/tcache.c: copyright update
match  3d84911296cd  94418922c135  mm/tswap.c: copyright update
match  7e9efd6f6085  972dac14a75c  net/ipv4/netfilter/ip_vzprivnet.c: copyright update
match  76958d8ee952  3fbf231f176a  net/ipv4/udp_memcontrol.c: copyright update
match  f1174cb7ff65  6bf16a8d9e50  net/ipv6/netfilter/ip6_vzprivnet.c: copyright update
match  dceccc8c11a0  3900579726fd  net/netfilter/xt_wdog_tmo.c: copyright update
match  56c9d9774a0e  5858cf702f55  tools/testing/selftests/memfd/Makefile: copyright update
match  dace8700cd5c  54d030090cbc  tools/testing/selftests/memfd/fuse_mnt.c: copyright update
match  fb3bb63dde1e  f3b571085cf6  tools/testing/selftests/memfd/fuse_test.c: copyright update
match  562d2156990d  0449b9352ec0  tools/testing/selftests/memfd/memfd_test.c: copyright update
match  fb912e5e8ca3  8c3e63201d60  net/ipv4/udp_diag.c: author email updated
match  8391dd788eb6  271d98b93974  net/netfilter/xt_wdog_tmo.c: author email updated
match  4c23c76941f0  a48444d6b288  config.OpenVZ.minimal: update up to 3.10.0-957.el7
match  1519f65c8aa5  c728f3429ec8  configs.OpenVZ: add minimal debug kernel config
match  1e8b53e66822  79872dd4413d  config.OpenVZ.debug.minimal: update up to 3.10.0-957.el7
match  d1359b6a9c5c  7b825ab42d02  configs: disable cpu partial slab support
match  dc9c8a311a0e  e0cc78fa46ef  config.OpenVZ.minimal: enable R8169, PATA_ATIIXP, X86_AMD_PLATFORM_DEVICE, NET_DEVLINK
match  cb75645c479d  abbc79bc561c  config.OpenVZ.debug: disable CONFIG_AMD_MEM_ENCRYPT
match  283a4c73655b  d336ce621ed2  config.OpenVZ.minimal: add support for e1000[e] and r8169 network cards
match  82cfe04c536e  4dabb1042492  configs: disable FUSE_KIO_NOOP and _NULLIO in debug.minimal config
match  694e48b62626  c0003282e704  config.OpenVZ.minimal: update up to 3.10.0-1062.el7
match  5450c4288b56  7e169ba3674a  config.OpenVZ: RHEL77 rebase: disable new options which depend on EXPERT
match  0a704062796c  7d22abffc1ce  kvm/x86: add log printing on emulation failure
match  f324980c0a1c  a1268a3959f6  ploop: Decrement active_reqs before bio_endio()
match  003ce60867b9  811b042c1c99  ploop: Also decrement active_reqs before bio_endio() in ploop_complete_request()
match  0ff31f230f7b  be0a75c7c8b5  fs/fuse kio: drop maps on file close
match  8b8c3b69ca20  bd7f3e53d0b1  fs/fuse kio: reset write_iter for canceled msg
match  6e01a25dd11c  a1174a5ba49b  scsi: aacraid: resurrect correct arc ctrl checks for Series-6
match  ea706afef820  526d83530e00  i40iw: use kvzalloc for large allocation of iwdev->mem_resources
match  7ac930c43265  9a67103e3ef7  vziolimit: fix race by putting throttle.speed check under ub_lock
match  e584c28b8aee  9ba187476912  ploop: Do not split discard bio in kaio
match  513dbc301045  ebd55a88268d  ms/root dentries need RCU-delayed freeing
match  8414cf2b0ccd  f11ffb40e88d  ms/lock_parent() needs to recheck if dentry got __dentry_kill'ed under it
match  c95f706b184e  c79b1e5ed203  ms/fs/dcache.c: fix spin lockup issue on nlru->lock
match  6fb2c0b66665  e1f8c7bedfe4  ms/fs/dcache: Fix incorrect nr_dentry_unused accounting in shrink_dcache_sb()
match  a957e1372fa1  0781d26fac92  fs/fuse kio: fix fuse_mutex leak in pcs_fuse_stat_fini()
match  0d3702b607de  db7d43106bad  fs/fuse kio: set NULL to stat->kio_stat in failure case
match  715b158fd5b1  9d62a5c3cf51  ploop: Use BIO_EMPTY_LIST for cleanup
match  cb1c1a3accc0  551c6e92eb32  ploop: Kill unused sync vec functions
match  3af3d80aaae9  216bd941369f  ploop: Extrack extent-related logic from dio_sync_io()
match  0ea894c1018c  b759265b5787  ploop: Extract extent-related logic from dio_io_page()
match  41788982a0f1  3e6239f4f72f  ploop: Kill __dio_io_page()
match  5a644fc9b1d3  be91820395b6  ploop: Add comment about S_SWAPFILE
match  11b07a29ed52  23b18197ec0e  ploop: Remove useless variable
match  1cb0d3147f52  4b0ad4af8359  fallocate: Unexport FALLOC_FL_CONVERT_UNWRITTEN
match  1fb5144e27e1  98bfccdffb22  mm/memcontrol: fix memory.high
match  d5532072d0d4  67aa1c7933b6  mm/memcg: reclaim memory.cache.limit_in_bytes from background
match  7ea06e67b856  e2a9281a2e2b  ms/mm: vmscan: check if mem cgroup is disabled or not before calling memcg slab shrinker
match  a61223373c69  f976032160e9  ms/x86: Extend #DF debugging aid to 64-bit
match  c2cb6a922536  7f96a9bf08c8  ms/x86/build/64: Force the linker to use 2MB page size
match  fd09b7cdc5f6  7925cd73eb10  fs/super: don't destroy super_block in case of leaked inodes
match  541629806491  b49814040234  fs/nfs: more leaks for busy inodes case.
match  0b9c2e5a2403  54ae517c8079  ploop: Check that nobody writes to ZERO_PAGE()
match  61ab48e54ac7  d7b5f35dde4a  configs: Enable doublefault exception handler
match  62d63b6654f6  6035151fc544  mm/memcontrol: warn if memcg reparenting failed to succeed in 20 min
match  db163e3c67b5  f13862253002  mm/memcg: fix race with WARN_ON() check and kmem uncharging.
match  8a49c38e3254  c938e091c8af  mm/memcg: close potential race of kmem unharge and reparent.
match  3ef58df42c72  022939868af9  ploop: Add comment about ploop_pvd_header::m_FirstBlockOffset
match  979b8cc6c172  32be059cf258  fs/fuse kio: add a sanity check on statistic inc
match  6aaab14a500c  6a97897ac323  ms/jbd2: discard dirty data when forgetting an un-journalled buffer
match  9ee3235abb7d  f23c63371982  ms/ext4: cleanup clean_bdev_aliases() calls
match  0100e0748675  78d35591e3b9  fuse: fix ->end() vs ->waitq ordering
match  6f2a0a1a524a  f1bfdc5b86e2  fuse: remove WARN_ON from fuse_write_file_get()
match  a5743a6be6ea  7000fbeaf42b  fuse: optimize writepages search
match  abcc99636f3c  096b28772c24  fuse: locking fixup in fuse_open_common()
match  1f061b27af09  50837979e822  kvm: use kvzalloc for struct kvm allocation
match  868e124fae9c  37f1f707e16a  vhost: suppress high-order-allocation warning for vhost_log
match  f58892f33910  d2fa3a72c5b0  ploop: Fallback to maintaince_mode in ploop v1 format
match  3cb09abebcd6  e9472f3c4ea4  fuse: Wait inflight requests only in case of close_wait
match  970da8c6b444  ad24e8a0dde0  ploop: remove module param ploop_major as it can break everything
match  d022660f6274  585c5195cd96  ms/prctl: introduce the walk_process_tree() helper
match  f0e928396cb8  12fb98e3a39f  ms/prctl: propagate has_child_subreaper flag to every descendant
match  69e0ee01c034  ec97a52ae30d  sunrpc: fix crash when cache_head become valid before update
match  f080269f0a96  8bef85f404b4  ms/libata: Implement ATA_DEV_ZAC
match  b9d9f0d4816a  d5af21124cf0  ms/libata-scsi: Update SATL for ZAC drives
match  90915cf7ff10  3b3e38272931  ms/libata: Implement NCQ autosense
match  3fb2d34d6f1f  5fc466bc4978  ms/libata: Implement support for sense data reporting
match  581ab05b1ed8  58916a0f9ef0  ms/libata: fixup ZAC device disabling
match  54f3f626796f  98f6608b9f2b  ms/libata: Fix ATA request sense
match  e355b880aec6  48b1e0b7d11d  ve/modules: Add ts_kmp to allowed modules
match  b9b7dff22fed  7630d9818d01  ms/fs/writeback: fix lazyatime dirty inode writeback
match  9f0a3e6ef75a  db45bb55cfb3  nbd: remove bogus BUG_ON in NBD_CLEAR_QUE
match  9a478980f7c8  66ae65a01b60  switch nbd to sockfd_lookup/sockfd_put
match  c80cb3dbedca  81bdaebc1665  nbd: zero from and len fields in NBD_CMD_DISCONNECT.
match  66d9959c8650  7f3450788fb1  nbd: fix possible memory leak
match  b0d49985de32  e52d1b7fa39c  nbd: Remove kernel internal header
match  3aaa9b07faa3  1fea00bcafb7  nbd: Replace kthread_create with kthread_run
match  5f45cf60c100  36245f549157  nbd: Fix device bytesize type
match  1c0d0a3f3dc3  9cf53431f062  nbd: Restructure debugging prints
match  ee99aefbecd5  e1318027a5df  nbd: Remove fixme that was already fixed
match  f5aaee75ba6e  5c41ad008fd5  nbd: Return error code directly
match  f96b16dd21a4  982e4f118c4f  nbd: Return error pointer directly
match  72345de883a7  3a21d65223df  nbd: stop using req->cmd
match  f87cb47d9752  73c643629fb1  block: have drivers use blk_queue_max_discard_sectors()
match  d090656e04cf  14ddcfe1e9d7  nbd: Fix timeout detection
match  e376d37f001c  607ca70144e8  nbd: sock_shutdown, remove conditional lock
match  5ef9578bfccd  960530e3c0f0  nbd: restructure sock_shutdown
match  25ff85755e0f  314bb4dd6686  nbd: Remove 'harderror' and propagate error properly
match  b5a2f42056b7  380a88c8ceb2  nbd: Move clear queue debug message
match  eeb0647cb29b  ca7083019ce6  nbd: Remove variable 'pid'
match  b732ea3228a3  974c45ad863a  nbd: Add debugfs entries
match  6059743a1a08  7a77387d3bec  nbd: Change 'disconnect' to be boolean
match  21f45009f564  ae9a6a603403  nbd: Rename functions for clearness of recv/send path
match  22211d15be87  bb19bc536818  nbd: flags is a u32 variable
match  c2526c354dc8  ec61cce1dffc  nbd: Add locking for tasks
match  ddeaf25861a9  e7174ecd9cc1  signal: turn dequeue_signal_lock() into kernel_dequeue_signal()
match  3683a64588cc  36f3a291cc0e  nbd: use ->compat_ioctl()
match  bbf5bd279db0  b1586e56f9d6  nbd: Fix debugfs error handling
match  8a483f06d15c  f25039870bb0  nbd: Remove signal usage
match  1932df7fe463  6d779ed9eee5  nbd: Timeouts are not user requested disconnects
match  425253c7039a  bd31b031fed8  nbd: Cleanup reset of nbd and bdev after a disconnect
match  12f1fd49cf16  65b24e929d63  nbd: Move flag parsing to a function
match  650655897770  2c7c1dff04d0  nbd: ratelimit error msgs after socket close
match  33fa3bd7b71b  9745d2853d82  nbd: Create size change events for userspace
match  6d7312da6330  29d5df6a98cf  nbd: use correct div_s64 helper
match  5fa279fc5799  4ab4992d2da6  drivers: use req op accessor
match  ccc1fb2f1d94  e1d0ef797817  nbd: pass the nbd pointer for flags debugfs
match  b44bc496ce21  73d46ec4216a  nbd: fix race in ioctl
match  f859199515de  5d31bfe6d2ef  nbd: convert to blkmq
match  40fd78719bf2  d48fa6ea245c  nbd: don't shutdown sock with irq's disabled
match  70026e3fcc9f  fce2dc1320b5  nbd: use flags instead of bool
match  fb5b28c1d3e9  eb1d89898ae8  nbd: allow block mq to deal with timeouts
match  8f043b4629d3  42f166af7d62  nbd: use BLK_MQ_F_BLOCKING
match  9f2ea3c03cfe  6f27f2023857  nbd: fix use-after-free of rq/bio in the xmit path
match  65024a649995  eef5fda3a28f  nbd: add multi-connection support
match  e43a1a4afefa  e4f2732a6f33  nbd: fix setting of 'error' in NBD_DO_IT ioctl
match  bba98736e01f  c7fb696480f3  nbd: use loff_t for blocksize and nbd_set_size args
match  b0522f4aae1f  57ddd03ec1bb  nbd: fix 64-bit division
match  b58e67663611  49f7c0367fde  nbd: reset the setup task for NBD_CLEAR_SOCK
match  411f8121f947  4aade68cd2e2  nbd: use dev_err_ratelimited in io path
match  733eef44aea3  04b5e527aac4  nbd: s/<asm/uaccess.h>/<linux/uaccess.h>
match  fde81dededfb  36d21d09a888  nbd: blk_mq_init_queue returns an error code on failure, not NULL
match  58183d99a1db  d1ed662bc74c  nbd: only set MSG_MORE when we have more to send
match  4601e58ef1a5  607606ee8d61  nbd: remove REQ_TYPE_DRV_PRIV leftovers
match  c6ff7862aec7  cccf0b9522dc  nbd: move request validity checking into nbd_send_cmd
match  351eaccaa22a  5011d6836769  nbd: use our own workqueue for recv threads
match  96754e28ca7f  2fa447e7428f  nbd: use an idr to keep track of nbd devices
match  a720609a9dc8  3bc43005ee1b  nbd: cleanup ioctl handling
match  a76ea0c3d5d0  c41f61dda5fa  nbd: set the logical and physical blocksize properly
match  dc4af0f0fb35  d3b7c90f8218  nbd: cleanup workqueue on error properly
match  abe78d45861b  6ac56652dc1d  nbd: stop leaking sockets
match  987296b16704  5a4c1624e756  nbd: don't allow invalid blocksize settings
match  df7477910fd5  374157e4bb76  ms/pagemap: Port diff-ms-pagemap-do-not-leak-physical-addresses-to-non-privileged-userspace
match  8be49c5216a4  2e244b1885b7  ve/cpu: handle sysfs attributes for CTs
match  882891a164c2  2740decdf06f  ms/KVM: x86: inject exceptions produced by x86_decode_insn
match  b0cc7943d7fa  cac9d8a6763b  ms/KVM: x86: always stop emulation on page fault
match  3d04f3f8fee6  c7b70fa325df  ms/KVM: x86: set ctxt->have_exception in x86_decode_insn()
match  46a64a9d95b5  e6f17641293a  ms/x86/cpu: Keep model defines sorted by model number
match  9c172c49be0f  b2af50791679  ms/x86/cpu: Sanitize FAM6_ATOM naming
match  a3a451da4e86  3b38f181e4e9  ms/perf/x86/intel: make reusable LBR initialization code
match  0316a8638427  4db4551932bd  ploop: Assign holes_bitmap before merge on merge-no-return point
match  50f95a1c4065  adcc7c5273c6  ploop: Kill noop complete_merge method
match  84ecd93a6baf  1673e744fe29  ve/kmod, nf_tables: allow nf_tables.ko autoloading on request from ve.
match  2b210ea4dbff  55daa7880533  mm/slab: Fix deadlock on attempt to shrink slab.
match  06ed5d5f0f2d  bd83b7b1715e  ve/fs/exec: don't allow a privileged user to execute untrusted files
match  198dd2131ac6  552f1d45efdb  sysfs/ploop: add new device option trusted
match  a815218ae741  4ba6e5b04b48  ve/fs/exec: send SIGSEGV to a process trying to execute untrusted files
match  e7625aeaf981  5f1c7345f793  ve/exec: allow trusted exec change both on boot and on running system
match  5ba792be48d9  bf7677d992c5  rdma/i40iw: hide high-order-allocation warning in i40iw_save_msix_info()
match  a9d1e39d5374  b6fcf680ac36  ms/netfilter: nf_tables: avoid global info storage
match  601116ea0261  15c52a54dba1  ve: use host ipt_mask for pseudosuper in setsockopt and request module
match  9b785a72e479  d3185b7703e0  fs/fuse kio: don't wait read requests in case of fsync/flush
match  23cc98bff7e1  c0c01d903e1f  ve/net/core: allow to call setsockopt(SO_SNDBUFFORCE) from Containers
match  044a366d0f8d  2d6c7140b859  x86/asm: remove the unused get_limit() method
match  dcf4b9ad5b99  7fe7ab604f92  ms/block: add REQ_BACKGROUND
match  93d13e390daa  dff79b867363  ms/writeback: add wbc_to_write_flags()
match  fab1c628f184  7e69169bc16c  ms/writeback: mark background writeback as such
match  0fd50e4b3e05  cd1c7ee03d1f  ms/writeback: track if we're sleeping on progress in balance_dirty_pages()
match  aa60f39770a9  3eb8b374bbcd  ms/block: get rid of struct blk_issue_stat
match  2d5a83ddb31c  f9f9d5bff461  ms/blk-wbt: add general throttling mechanism
match  fabdabd075bc  5afb2edc5717  ms/block: hook up writeback throttling
match  cffc1a889096  5863788b4c90  block: enable CONFIG_BLK_WBT*
match  53fa2f01062e  62c9279afbd3  blk-wbt: increase maximum queue depth to increase performance of writes
match  dc000df8bcdd  e0b8c61bafe0  ve: add a comment about possible pseudosuper race
match  7a30ae2c6985  122447a7518d  fs-writeback: add cond_resched() in wb_do_writeback()
match  d12b0d5508c6  4843b06287c5  ms/jbd2: add support for avoiding data writes during transaction commits
match  f3f6cd5ce672  5e3f58eaf4b8  ms/ext4: do not ask jbd2 to write data for delalloc buffers
match  0b4418156126  cc252b5f35ad  ms/mm: add filemap_fdatawait_range_keep_errors()
match  670258f6af9b  098bdd541b51  ms/jbd2: introduce jbd2_inode dirty range scoping
match  6629e22b21ea  806767ee3912  ms/ext4: use jbd2_inode dirty range scoping
match  8f1367cb1e27  e58d7f4643bf  ms/cfq-iosched: don't call wbt_disable_default() with IRQs disabled
match  74064d2ae869  5baac5ccebb8  ms/block: fix leak of q->rq_wb
match  9abb83236ead  5f8f7c2016f8  ms/block: Fix list corruption of blk stats callback list
match  d6af43220a21  cf0e0c939fc3  ms/ext4: use __GFP_NOFAIL in ext4_free_blocks()
match  0d2f530266a7  a6cf479aa044  ms/ext4: handle the rest of ext4_mb_load_buddy() ENOMEM errors
match  692b7d97a142  84702aab75fa  nbd: handle ERESTARTSYS properly
match  df56156cf899  4fccaa7dfdbb  nbd: put socket in error cases
match  c04b1f48ed9d  e6b35609dae9  nbd: set rq->errors to actual error code
match  6b57d4646740  0e8ecc1bf7b4  nbd: set queue timeout properly
match  7c87df8a1aac  703042433286  nbd: replace kill_bdev() with __invalidate_device()
match  80e2d43963d4  ba5dbd2cffe6  nbd: handle single path failures gracefully
match  13c5d99842d1  a6f72c27265b  nbd: separate out the config information
match  84e87b5d1aa4  03acf01d513a  nbd: don't leak nbd_config
match  56b5e86215b5  568529e639ba  nbd: take tx_lock before disconnecting
match  6f746d99e06a  cf1ef9a09f00  nbd: ignore non-nbd ioctl's
match  bff50ebd44ef  adad7018bcca  block/ndb: add WQ_UNBOUND to the knbd-recv workqueue
match  1bdfaca01d35  9d81aebf5f81  sctp: suppress warnings on high order memory allocation on sctp chunk creation
match  8b832c75fadb  d005596c5c50  rdma/i40iw: use proper GFP flag for hiding high-order-allocation warning
match  d4a345a56868  4903d50b6c04  ms/treewide: Add __GFP_NOWARN to k.alloc calls with v.alloc fallbacks
match  c8b64fff3af0  5d7149993ccc  ms/nbd: fix how we set bd_invalidated
match  e84de31f7362  a9de080e064b  ve/kmod: allow "nft_compat" module autoload from inside a Container
match  1ae99f309b96  bb8c74e2cb93  sctp: suppress warnings on high order memory allocation on packet transmit
match  83205e977b79  7061b14d49d9  ms/nbd: stop using the bdev everywhere
match  498b1bde5c24  5cdca92dde8f  ms/nbd: add device refcounting
match  a8a022cc8699  423ef7e611bf  ms/nbd: fix use after free on module unload
match  46cfe31bc6e9  c4c882f769a0  ms/nbd: don't set the device size until we're connected
match  482ec2254638  d6f25daf00cc  ms/nbd: fix nbd device deletion
match  3d3e7d3045ba  91eb4de51d84  ms/nbd: update size when connected
match  6b5094e0e5b4  eee4fecdf759  ms/nbd: use bd_set_size when updating disk size
match  77061d15db67  9fc9326f5879  nbd: invalidate bdev after size update
match  9c0b4e62d185  624eed2f86cd  fuse: don't perform getattr on each write
match  711de50dd581  6e3e40be010c  configs.minimal: enable CPU_IDLE_GOV_HALTPOLL/HALTPOLL_CPUIDLE
match  257c7c3f1b0b  a5c32ba1348d  nbd: move nbd_size_update() of of the loop.
match  38428998fead  5255d8c5c103  nbd: move setting the bd_invalidated out of the loop
match  e70bed680e75  0555c11e7dc0  ms/nbd: only clear the queue on device teardown
match  7ffe832e29c9  11ed51379b2d  ms/nbd: quiesce request queues to make sure no submissions are inflight
match  f2b2ce1e802e  f89d1cb2ab03  fs/fuse kio: share bandwith/IOPS for prometheus stats
match  f984d4e702b3  696aebec1992  rh/dcache: work around buggy iso images
match  0448185ef163  c0a37093d428  ve/kmod: enable autoload for iptables security tables from inside CT
match  fbf65266c823  46e1554f909d  ve/kmod: enable autoload for nf_tables_inet module from inside a CT
match  de125f9f8142  58e94df9dd31  config.OpenVZ.[debug.]minimal: update up to 3.10.0-1062.4.2.el7
match  375074001b4e  8c7a0c87d630  ve/kmod: make all nf_* and nft_* autoloadable upon request from a CT
match  03f2bb4eae9f  aa347e702874  mm/ksm: Don't WARN if page is still mapped in remove_stable_node()
match  e7997b0cbdd9  234a7b5ccac8  ms/netfilter: nft_compat: fix crash when related match/target module is removed
match  32d93673c71a  f3abd314ca1e  net: export "net.netfilter.nf_conntrack_helper" sysctl for Container
match  3470613376ce  e8152ebca3d3  ms/netfilter: x_tables: set module owner for icmp(6) matches
match  0b708bf7c2f4  a40c72fdecc0  ms/SUNRPC: The TCP back channel mustn't disappear while requests are outstanding
match  f60368144399  4624b71b9dd5  kvm/x86: extend info on emualation failure
match  8e9b9713831b  396be28eedc0  mm: fix hanging shrinker management on long do_shrink_slab
match  137bcf6820d7  4af953dea2df  fuse: don't declare FUSE FIEMAP support for any FUSE fs
match  04bbebac0150  fc6c78d85a1b  ploop: Reread bat offsets and length before merge
match  e4b353e9a27a  be76609b3e65  ms/ext4: kill ext4_kvfree()
match  525418d6644d  2ef9860f00d9  ext4: replace ext4_kvmalloc() with kvmalloc()
match  92d229b4b1a6  ad6759652e00  ext4: kill ext4_kv[mz]alloc()
match  1c433b715e25  0e40ac7680de  ms/ext4: remove extent status procfs files if journal load fails
match  db2f322c2956  8176c1f492ec  ms/net: Allow to show socket-specific information in /proc/[pid]/fdinfo/[fd]
match  7354fca9aa8e  a5ac5b9ef1fd  ms/unix: Show number of pending scm files of receive queue in fdinfo
match  02ccd123fa85  3800c9422430  ploop: Do not try to update index after REQ_DISCARD in raw format
match  d6ff4e85f2c0  ac92c0915c05  ms/ixgbe: fix possible deadlock in ixgbe_service_task()
match  c285d1453213  030299ec903b  ixgbe: don't check firmware errors
match  9383509e17e6  c8f9789b539d  memcg: access beyond end of shrinker_map
match  add2c32740d4  ccc453c26646  ploop: Fix huge grow of empty image
match  1ed21961524b  066a770bae11  ve/proc: Added separate start time field to task_struct to show in container
match  7577b44f4e3f  900ad050618a  ms/quota: Do not dirty bad dquots
match  48b7a3fb2b85  de5b1bd3abc2  ms/quota: Move locking into clear_dquot_dirty()
match  a6f68fb98da7  4454119abe73  ms/quota: fix potential infinite loop
match  ce6b75cc6969  2459b4668cfc  mm: fix out-of-bounds memory accesses in process_vm_readv()
match  ab43b2e1fba4  ece161222927  ploop: Disable holes on io_direct raw images
match  40f643103e02  bde30068758a  ploop: Teach dio_sync_io() work with many pages
match  9426ab0aa9b5  2414a738b71a  ploop: Teach kaio_sync_io() work with many pages
match  6775cc16c6e3  922562533038  ploop: Introduce .sync_read_many method
match  a488307dc6df  156b65af1c39  ploop: Read 10 BAT clusters on holes_bitmap population
match  9c3431068ad4  82b29bafeeee  fuse: Add more debug info into fuse_direct_IO_bvec()
match  dcd2363a8cfa  ba5c42b587a4  ploop: Add debug check on truncation to kaio_fsync_thread
match  b813cb74fec0  7075fb364597  ploop: Sanity check that raw delta is not zero-length
match  db8a17a495b4  60fec635af54  ploop: Flush data bios on merge before index update
match  20c32fc42f7a  bc9ad938a518  ploop: Move duplicated code to a helper
match  d55c735d6aa1  1ef4acb9a7c3  ploop: kaio: Close race between truncate thread and grow
match  761c5b19bd3a  c31f7d848170  mm/memcontrol.c: lost css_put in memcg_expand_shrinker_maps()
match  0a0de55d0018  fdca438f6c1d  lost css_put in hwpoison_filter_task()
match  30f7b8678cf8  19e921ab91d5  ms/netfilter: nft_rbtree: introduce nft_rbtree_interval_end() helper
match  1d162e4e8e03  385294c0dca5  ms/netfilter: nft_rbtree: ignore inactive matching element with no descendants
match  8b7a1ee3c2f7  6f055d818b81  ms/netfilter: nf_tables: fix register ordering
match  1c1d628d6be2  9387af122ee9  ms/mm: Allocate shrinker_map on appropriate NUMA node
match  00d93a201f02  92da02769414  fs/fuse kio: missing ireq's completion_data initialization
match  711051e14907  915b600d7001  ploop: Delay reusing cluster on discard till previous index flushed
match  3c64668f753c  28dd0dc1542c  ploop: Move duplicated initialization into helper
match  ce81512ee435  402fc625ee15  ploop: Add congest argument in ploop_alloc_request()
match  fd6d719a08a3  1f56d84b434f  ploop: Use ploop_alloc_request() in ploop_bio_queue()
match  51e33268cec2  aac99fd06508  ms/mm: introduce vm_ops->map_pages()
match  2c4da3a7abac  a51c44a8ed45  ms/mm: implement ->map_pages for page cache
match  6573eecca667  851e21a88f38  ms/mm: cleanup size checks in filemap_fault() and filemap_map_pages()
match  104ab8373907  e09c6e3f8df7  ms/mm: add debugfs tunable for fault_around_order
match  6f954c15a4f5  1b749601a624  mm/filemap: add pfcache support to filemap_map_pages
match  8d19545f7be0  a9e9cdd54614  pfcache: do not drop pfcache checksum during mmap(SHARED) of ro-files
match  76a55f4b9bc6  d35f790fb87a  configs: provide kernel config via proc
match  b301c26c74fa  ee96c4c176fd  ve/procfs: make /proc/config.gz visible inside Containers
match  215e1c5d1ae8  a01733ed497d  openvswitch: allow to create ovs bridges inside Containers
match  5fecfe361ad1  62047d91d7fc  net: export "net/*/neigh/*/*" sysctls for Container
match  85a9a1087c21  1357bc7d2410  ve/bridge: handle netlink messages AF_BRIDGE / RTM_[GSD]ETLINK sent from inside a Container
match  55ee05baaa01  1b5febcb7bdb  ve/proc/block: show /proc/diskstats inside a Container
match  9c656b1d5f95  1a17684d3348  ve/net/bridge: make net.bridge.* sysctl visible in Containers (r/o)
match  1cefe2a482ec  2d27ee424cc3  ploop: Set discard limits after blk_queue_stack_limits()
match  7bbcc78f32db  cd78548b5b08  ms/VFS: use synchronize_rcu_expedited() in namespace_unlock()
match  f4f0db855233  1a485a292c2a  ploop: Debug check that we never send discards to header
match  251915a9f76c  007a532e52c7  mm/memcontrol: memcg_move_account() get rid of lock_page dependency.
match  01d50d51afac  4c84640efc91  ploop: Replace delta under quiesce state
match  10fb1e128446  9e44ecf64377  ploop: Stop fast path reqs living their own lives
match  83efebb69d30  f0ad73231b6a  ploop: Disable fast path on in case of pending discard
match  6a6a16d0bdfe  8c06d8a78f5e  ploop: Simplify check in ploop_fast_end_io()
match  49371acfeff2  c9329bf66a8c  ploop: Rename fast_path_waitq into pending_waitq
match  046c9af27827  ceb37d7093cc  ploop: Rename bio_discard_inflight_reqs into discard_inflight_reqs
match  82b0a9fb890d  9b65b63f6a42  ploop: Be overprotective on discard
match  e23f21e37071  db2206772763  ms/ext4: fix potential race between online resizing and write operations
match  219a5aeca141  36bbb71da62f  ms/ext4: fix potential race between s_flex_groups online resizing and access
match  f37974af8342  eb12e63f1128  mm/memcontrol: offload offline reclaim to background work.
match  fef03c2b19ae  d59acda0eb1f  mm/memcg: save css_get/put stacks
match  48f3affbd5ee  521adf389f48  fs/fuse kio: implement internal cs connection
match  d51f4f2ddd4f  3f5d88ffff3b  fs/fuse kio: drop external cs connection
match  0f728014778b  82392a404713  fs/fuse kio: make pcs rpc socket independent
match  ccded44164b1  822b62ed2a17  fs/fuse kio: make pcs auth socket independent
match  fa2417df934c  34e11288a882  fs/fuse kio: implement support RDMA transport
match  91320672d9fb  4c85f6f6648b  config.OpenVZ.minimal: enable infiniband for fast-path for vStorage
match  c55dee032bdf  fe0bf5a8d50c  ploop: Add interface to dump cached BAT
match  6f031d7bd8a6  609cc2735279  ms/ext4: fix potential race between s_group_info online resizing and access
match  f6da3a25a2bd  d172cab6eb21  ms/ext4: potential crash on allocation error in ext4_alloc_flex_bg_array()
match  dd27a1a48215  39faa251a20a  memcg, bc/vm_pages.c: account some swapped memory as used in CT in /proc/meminfo
match  885f33c6ff82  feeed136b095  ub: show up to date data counters in beancounter cgroup
match  63579757e365  693a716f4fa3  ploop: redefine of BIO_BDEV_REUSED
match  bcb9d98fa9cb  45c0c566944c  ms/net: adjust skb->truesize in pskb_expand_head()
match  9becdecf2e92  cb75379b9d67  ms/nfsd: memory corruption in nfsd4_lock()
match  fb97557f32b4  40542de4d15c  configs.minimal: update minimal configs up to RHEL7.8 kernel base
match  1ac532bb5300  f2222004dba9  ms/drm/qxl: qxl_release leak in qxl_draw_dirty_fb()
match  7e076c363ee3  d9c7d6675833  ms/drm/qxl: qxl_release leak in qxl_hw_surface_alloc()
match  4946a6ef84a1  703aa25a328b  fs/locks: Remove legacy UB_NUMFLOCKS
match  b56e7c67f711  1e6844363510  drm/qxl: qxl_release use after free
match  81ae715207df  0d9e9f4cfe66  ms/i40iw: remove bogus call to netdev_master_upper_dev_get
match  74046c9ea917  b430c0f88525  mm: Move memcg_uncharge_kmem() to bottom of __memcg_uncharge_slab()
match  3a44678cb978  f3454a753edb  mm: Add RCU read brackets into memcg_uncharge_kmem()
match  fb0e6b5c060f  35805a6020bb  net/netfilter: add a mark to distinguish nft ops
match  3529445db73f  db70ccb53b53  net/netfilter: make nft NAT working in different netns simultaneously
match  be7a47b26446  bc0da6fe0397  mm/memcg: Fix race on mem cgroup offline/kmem deactivation.
match  e1c2aff14945  1a1c01bb0289  packet: Never charge 0 kmem in packet_sk_charge()
match  80dc1cce3757  2ed2b54a25f1  mm: Warn on zero uncharge in memcg_uncharge_kmem()
match  4e59d7f97511  2187ffa5d97f  ms/cgroup: make sure a parent css isn't offlined before its children
match  11d06b25dbe4  51a28e1a52c9  ms/netlink: do not enter direct reclaim from netlink_dump()
match  54c87a315028  f18b392a4d2b  ms/netlink: do not enter direct reclaim from netlink_trim()
match  7c85b1160e9a  3005e3c4ab9f  mnt: allow to add a mount into an existing group
match  3c0ea42509d4  f46b825422d6  beancounter, memcg: inline some functions for easier debuging
match  30bcdfe34af0  766a9d5fba56  ms/netfilter: add missing IS_ENABLED(CONFIG_NF_TABLES) check to header-file.
match  674a5bbfb8e0  ef6e9237004e  ms/netfilter: conntrack: don't attempt to iterate over empty table
match  1f2aa4fe5d38  b79dee964a51  ms/netfilter: conntrack: use nf_ct_key_equal() in more places
match  df79215be270  2e17b67890f2  ms/netfilter: conntrack: small refactoring of conntrack seq_printf
match  18666e14976b  6f973ba95019  ms/netfilter: conntrack: check netns when comparing conntrack objects
match  bf04f086cef0  07dd86de128d  ms/netfilter: conntrack: make netns address part of hash
match  3bdcfa58fd5e  5f5028074072  revert RH patch 9837-net-netfilter-nf_conntrack-don-t-resize-NULL-or-free.patch
match  3916eccad776  b80259735cf6  ms/netfilter: conntrack: use a single hashtable for all namespaces
match  8c2a7bc539d0  e19678d7a88c  ms/netfilter: conntrack: consider ct netns in early_drop logic
match  922081010e87  e4290385fd2f  ms/netfilter: conntrack: do not dump other netns's conntrack entries via proc
match  d688afdf51b6  08aabb80ba9e  ms/netfilter: nf_conntrack: Fix possible possible crash on module loading.
match  76f3c54a4428  8ee942724b2c  ms/netfilter: conntrack: fix calculation of next bucket number in early_drop
match  94428fa18ce5  2e551315612d  ms/netfilter: conntrack: check netns when walking expect hash
match  e03ffcd18ce0  6a0555d7ad8a  ms/netfilter: conntrack: use get_random_once for nat and expectations
match  9868f5114bc8  1ffc1a32f610  ms/netfilter: conntrack: make netns address part of expect hash
match  8106f6686258  a58d190ae160  ms/netfilter: conntrack: use a single expectation table for all namespaces
match  033529843abd  0ab7156675b5  ms/netfilter: conntrack: make netns address part of nat bysrc hash
match  f6685d90e273  d0a08880e44b  ms/netfilter: conntrack: use a single nat bysource table for all namespaces
match  f273988da86d  b1d031695931  ms/netfilter: conntrack: use single slab cache
match  e00fb62c37dc  67d8a79b8541  netfilter: xt_MARK: Add ARP support
match  e9245781bce4  aec6f1b25261  netfilter: conntrack: fix false-positive compiler warning in early_drop()
match  c8f8b4e00870  6846fe9b8faf  FMODE_MOUNT redefine
match  2b7d9babf53d  88977199cecd  fs/fuse kio: add storage_version attribute to control filesystem
match  0262f372c0d0  5978d9397c3a  fs/fuse kio: align CS messages to 512 bytes
match  3cb26cf477e5  8bfe43d26a15  fs/file.c: don't open-code kvfree()
match  eac6d1c8ab8c  51edfb0fb2eb  fs: generic_file_direct_write() switch to iov_iter
match  7558ac573f94  ed85bcc85c83  __btrfs_direct_write(): switch to iov_iter
match  b0a5277ade3d  08985cf5c949  kill generic_segment_checks()
match  7ec008d67437  8b7aa866bac6  mm: Kill unused ->direct_IO_page
match  4e40f331c22e  ef08855f7736  mm: Use iov_iter in __swap_writepage()
match  2881c15db1df  dbc4784106ee  fs: Pass iov_iter to ->direct_IO
match  0f9abb124e46  14f84fdf4d21  fs: Kill ->direct_IO_bvec
match  dc9eb5b74fe3  27a2071c6957  mm: Kill useless mapping_direct_IO()
match  54a4eb0c6ce5  5703b48a9590  ext4: Use iov_iter argument in direct_IO functions
match  f0f169952c67  c7ddd871f337  fs: Replace iov_length() with its iov_iter synonym iov_iter_count()
match  837a9f714835  f16700b4cb63  fs: blockdev_direct_IO: switch to iov_iter
match  4bba9c5c9dca  d96855612977  give ->direct_IO() a copy of iov_iter
match  f5f29d9aacdc  76dbe3524945  iot_iter: Add iov_iter_alignment()
match  897baed35194  b03d8bac732a  new primitive: iov_iter_alignment()
match  e043a75af38f  b0d6e982a451  dio: take updating ->result into do_direct_IO()
match  1c348b4974f7  b4bb5653a9a1  new helper: iov_iter_get_pages()
match  d388c4a40fd7  8107d5568e19  direct-io: fix uninitialized warning in do_direct_IO()
match  9b6140491a9d  6dfe95dfb3f3  direct-io: fix AIO regression
match  caa82730d6a8  301783242bd0  new helper: iov_iter_npages()
match  7137ba3cb9a9  85e0c31fb747  bio_vec-backed iov_iter
match  6c2849dc9231  a2aca64a0d8a  ext4: ext4_file_dio_write(): switch to iov_iter
match  8c61d7075187  49b48a4b410c  dax: dax_iomap_rw(): switch to iov_iter
match  d1e434aac1c9  ff2a9e7664b8  ext4: ext4_write_checks(): switch to iov_iter
match  ccd27ef2d30f  9f7f3f5c5d57  fs: More use iov_iter in ext4_file_write()
match  aecc75b16734  13b153b6cf8c  ext4: ext4_file_dax_write() switch to iov_iter
match  53da6f7fe13b  d739b3a7fa25  ext4: Introduce ext4_file_write_iter()
match  83bcd7e5193a  89b7b4459831  ext4: Attach write_iter and read_iter
match  d8d31ff28961  402255f6ea87  fs: direct-io: don't dirtying pages for ITER_BVEC/ITER_KVEC direct read
match  df01dffbdda3  a049c1ef248e  ploop: Introduce possibility to use kaio engine for ext4
match  4e960f5e201b  2c9ba98f5d83  x86/asm: Use register variable to get stack pointer value
match  a2250a4d7350  06486ce24d0a  locking/rwsem-xadd: Add killable versions of rwsem_down_read_failed()
match  19e195b2427a  5157b83ee8a7  locking/x86: Use named operands in rwsem.h
match  7f826ac89f3a  19f2f277a580  locking/arch, x86: Add __down_read_killable()
match  1f54f93384b1  a6d83466df79  locking: Add LOCK_CONTENDED_RETURN
match  7699bbb82bdf  d18e89800dda  locking/rwsem: Add down_read_killable()
match  34d26205c328  311aa8f7cde6  net: Bring clearness to ve_netns deassignment
match  991de27ceb97  62a077ce39ca  ms/net: skip genenerating uevents for network namespaces that are exiting
match  8f485d290af5  15b1ffa534b2  ms/net: use net->count to check whether a netns is alive or not
match  c21ace5d9fe7  38b934478467  ms/net: Make account struct net to memcg
match  0b3b621cde3a  427d3b71a6de  net: Fix possible race in peernet2id_alloc()
match  56dfab42f0ac  5b164e01e94b  net: Move net:netns_ids destruction out of rtnl_lock() and document locking scheme
match  73ae8a57082d  de5f864b2a29  net: Assign net to net_namespace_list in setup_net()
match  abe21d511865  948575ac2e7d  net: Cleanup in copy_net_ns()
match  6aa3f3974901  1b3a4209822d  net: Introduce net_sem for protection of pernet_list
match  3db661ed6d0c  7625648c36cb  net: Move mutex_unlock() in cleanup_net() up
match  c2371c1a931e  1ad50f807798  mac80211_hwsim: Make hwsim_netgroup IDA
match  9ff989db2ca0  4174d5121533  ve: Synchronize vznetstat pernet_operations
match  ea64179454c0  12ab3214a7a0  net: Kill net_mutex
match  3729dbbd1746  8f14c8e101b4  net: Rename net_sem to pernet_ops_rwsem
match  d62b19176117  61aeb6ef6ff6  ms/memcg: remove tasks/children test from mem_cgroup_force_empty()
match  d235e7d7f3b9  08a3b0908f9c  ploop: Use kmem_cache for iocb allocation
match  70569e6f84f0  2c20ff82f2ef  ploop: Kill unused PLOOP_S_SYNC
match  e47408d47758  7bcb86848d64  ploop: Disable discard on ioctl(PLOOP_IOC_FREEZE)
match  8b49ed93bdb9  cab8a7c20a0e  overlayfs: add dynamic path resolving in mount options
match  cc766169a472  88db0bb63005  overlayfs: add mnt_id paths options
match  d0bafcc6c5ab  9f04e6bc8349  configs: add/enable options for overlayfs paths absolute resolution
match  6210e532fa5c  42e8f1fe9f57  userns: move EXPORT_SYMBOL closer to current_in_userns
match  b16fa464200b  f7162dfc7eb8  ms: common object embedded into various struct ....ns
match  c124e2a7d19a  ec8f817643da  make mntns ->get()/->put()/->install()/->inum() work with &mnt_ns->ns
match  08878fc990e2  98e12d3a0bbb  netns: switch ->get()/->put()/->install()/->inum() to working with &net->ns
match  741f83b13c16  6700144a3146  switch the rest of proc_ns_operations to working with &...->ns
match  cad10fa82717  1c50766fcabe  make proc_ns_operations work with struct ns_common * instead of void *
match  79e5be12fc74  40b097ba4816  new helpers: ns_alloc_inum/ns_free_inum
match  18882756fa89  ba731208d2d7  copy address of proc_ns_ops into ns_common
match  14fce7ad5501  53b37991e0d0  bury struct proc_ns in fs/proc
match  40d9686de182  48e081e4fc30  dcache.c: call ->d_prune() regardless of d_unhashed()
match  5e20bf8bde39  57dfa169c497  take the targets of /proc/*/ns/* symlinks to separate fs
match  5b79ce2162c7  1855812d0a3c  kernel: add a helper to get an owning user namespace for a namespace
match  23a06d38a0b1  95b66981b17e  nsfs: add ioctl to get an owning user namespace for ns file descriptor
match  54478b1fff97  7485972e76f3  nsfs: add ioctl to get a parent namespace
match  456707945b45  4cc4f81d34ce  net: add an ioctl to get a socket network namespace
match  362c02b34e4d  eb786b2dd29d  ns: allow ns_entries to have custom symlink content
match  21213fca96cb  2b226a8e5dbb  pidns: expose task pid_ns_for_children to userspace
match  a0b22f717176  f7ce4ca45b67  nsfs: Add a show_path method to fix mountinfo
match  e15ab21a9b78  eeeff6b09a6c  net: Export open_related_ns()
match  b3cbf6f1bbf9  c026400bdfde  net: Make extern and export get_net_ns()
match  d626ced926cc  b63d31c46925  tun: Add ioctl() SIOCGSKNS cmd to allow obtaining net ns of tun device
match  c9acbdc591c8  5010092fb190  tun: Add ioctl() TUNGETDEVNETNS cmd to allow obtaining real net ns of tun device
match  6340fb597bf0  d9cc65ff04af  nsfs: mark dentry with DCACHE_RCUACCESS
match  4a1f2ae9d3b4  d6cc3528f1f8  ms/ovl: Fix dereferencing possible ERR_PTR()
match  4cdbf7fa00a0  5385cde307e1  ms/dynamic debug: line queries failing due to uninitialized local variable
match  e47663c4af1f  cab3f29a1019  ms/mm, page_alloc: drop should_suppress_show_mem
match  53029ad31a56  4e20e05df099  ploop: Add more debug info into PLOOP_REQ_TRACE_ERROR
match  66a92df2b9b3  08988e7b88ba  ext4: Extract logic from ext4_overwrite_io() to underlining function
match  8968543b9528  57c821049ed3  ext4: Introduce ext4_fastmap()
match  e18b005d7537  d20691f5baa9  ploop: Introduce fastpath for io_kaio
match  7d03c756d2a0  442608bde3f8  fs/fuse kio: set the connection params for RDMA properly
match  13921127bae5  998a10e63a21  ploop: Inherit stacking limits for ext4 over io_kaio
match  9af74b6a19a7  d47ff776d0ac  ploop: Fix divide by null in purge_lru_warn()
match  8914b6504f36  1dd8e7af7c91  ms: af_packet: set defaule value for tmo
match  e664579d7a63  8a2512a7e17f  ms: fs/namespace.c: fix mountpoint reference counter race
match  e3e404dba697  7af1c9e1ed1d  sched/cpupri: Replace NR_CPUS arrays
match  beb0c398e4d1  176da10688be  ve/cgroup: fixup for " ve/cgroup: do not link a CT cpu
match  bae308bdc67f  0400073b2155  mempolicy: Prohibit VE processes numa binding syscalls
match  9726656920ef  f81c745f52e5  kernfs/sysfs: add ioctl to get fd network namespace tag
match  8d79755ee99c  66d25d3b51d0  ext4: Introduce __ext4_es_lookup_extent()
match  4799a8f9e6c4  bdf8c2c3d379  ext4: Do read_trylock on fastmap
match  9feafdadb54b  22e6c22ee04c  ext4: Avoid sleepable debug check in
match  dc33ab1c202f  4f687fc8cb0a  mm: only drain per-cpu pagevecs once per pagevec usage
match  17ebc7d9090e  cc87a0353e8c  asm-generic/tlb: Track freeing of page-table directories in struct mmu_gather
match  801d14baf0c5  ffc6053f0789  asm-generic/tlb: Track which levels of the page tables have been cleared
match  749b37543a25  757497018229  asm-generic/tlb: avoid potential double flush
ok     d7b24517e467  25ecc656e1da  ms/mm: per-thread vma caching
match  263889004e7c  bcbbcbf52d26  mm: Add and use batched version of __tlb_remove_table()
match  b3f486abb29b  4fde7e98acbb  mm/memcg: Use per-cpu stock charges for ->kmem and ->cache counters
match  57c3463c8905  b2badfc063f5  ext4: make sure enough credits are reserved for
match  10f8b3eab849  625904a01ab6  ext4: recalculate journal credits as inode depth changes
match  5b6e8b7f58db  7980066115d4  memcg/kmem: don't show fake charge in usage and limits
match  3d17ae4d0631  cb5874c068c8  net/mlx5: suppress high order allocation
match  936aca6bf74c  11f6c8cf086b  configs: set overlayfs nfs_export option to true
match  400bde14fb27  9ec16b5337f6  chardev: Avoid potential use-after-free in 'chrdev_open()'
match  6b589779a207  73cc6cccb888  ms/netfilter: nf_conntrack: flush net_gre->keymap_list only from gre helper
match  dc1625394e66  ffbebf809e34  ms/KVM: x86/pmu: do not mask the value that is written to fixed PMUs
match  4f6e2aaa8767  86162843e72f  ms/KVM: x86: Fix perfctr WRMSR for running counters
match  a4c0845ae909  17fbd5b37506  cgroup: add export_operations to cgroup super block
match  b97d93cf5810  35fb5684b3f1  mm/memcg: fix cache growth above cache.limit_in_bytes
match  6baf00b861fb  aa815c5390cd  fs/fuse kio: show latency in cs_stats properly
match  26a5949621cc  51de0a1b5ac1  fs/fuse kio: calculate network latency properly
match  6563817ab18d  2273d2c8a219  fs/fuse kio: allocate memory for each RDMA RX buffer separately
match  a368097d31b6  88ee2a4dfc0e  fs/fuse kio: concurently work shrink and IO operations
match  6ae3ba3dc833  e6f586e712ec  fs/fuse kio: NULL pointer dereference in case of dead map
match  4abc22599ac4  c26fa0d00712  ploop: Fix discard iocb leak
match  f8abde1ce660  f8f60bdd5ed9  ve/cgroup: implemented per-ve workqueue.
match  6462808fdfc5  2425e43c0c1f  cgroup: added rcu node string wrapper for in-cgroup usage.
match  6fe7b2de0c4c  b4006fecc006  cgroup: exported __put_css_set and wrappers to cgroup.h
match  8c79221b51fa  049f4366fdfd  ve/cgroup: saving root_css to ve
match  bf7393a9b16a  a5beea3fae4f  ve/cgroup: Added ve_owner field to cgroup
match  c570c27a23a5  1f7574d3452b  ve/cgroup: moved release_agent from system_wq to per-ve workqueues
match  9c5b2b1ef831  7bf30dc30c09  ve/cgroup: Implemented logic that uses 'cgroup->ve_owner' to run release_agent notifications.
match  3d5f1680ce4a  e07a9657b40e  ve/cgroup: private per-cgroup-root data container
match  9d8cebec84fe  dc1fc7ea9d29  ve/cgroup: set release_agent_path for root cgroups separately for each ve.
match  74df774eb30b  ad26987b0b42  ve/cgroup: added release_agent to each container root cgroup.
match  e9b1bc57f61e  8dd4d450c0aa  ve/cgroup: cleanup per_cgroot_data at cgroup mount destruction
match  2d32c2eb3706  2beb780a44ae  ve/cgroup: At cgroup_mark(unmark)_ve_roots skip non-virtualized roots
match  5b8b0a317c6d  68960d57a738  ploop: Introduce ->fastmap_end_io
match  2444098449d1  d0fe904c9197  ploop: Add @write argument to ->fastmap
match  c617d35e25bc  ac9e46c5a7b2  fs: Export mapping_needs_writeback()
match  4419e25bb719  acee363d459e  ploop: io_kaio: Protect ->fastmap against EXT4_IOC_MOVE_EXT and punch hole
match  b7e4b94fa32b  41b59169d4b1  ms/KVM: X86: Implement "send IPI" hypercall
match  df96c4a2ad36  3424129f0b70  net: openvswitch: add capability to specify ifindex of new links
match  2ee688ff79ed  bf26623d2c5d  ploop: Pass correct argument in kaio_sync_read_many()
match  51f4b62c1a55  fab0b597dc12  ploop: Fix kaio_sync_io() for multy-pages case
match  18aa0e76f87d  c643ca3f41c5  ms/ext4: add a new ioctl EXT4_IOC_CLEAR_ES_CACHE
match  7cbfa889a6ea  e12164e055b0  ext4: Fix fiemap() with FIEMAP_FLAG_CACHE flag
match  7e22243f4d2f  50e8f72306c7  ploop: io_kaio: Introduce 4K discard_granuality with 1M clearing indexes when possible
match  8026d7bb4868  aba4ec3a26dc  ploop: Enable 1M holes with zeroing indexes for io_kaio
match  0fd63b2b6522  096fca663d94  mm: Reduce access frequency to shrinker_rwsem during shrink_slab
match  2a372886a2bb  3b5c65c96c92  ms/netfilter: nfnetlink: correctly validate length of batch messages (take 2)
match  92771c9ab99b  82ac14fb8979  ms/kernel/kmod: fix use-after-free of the sub_info structure
match  cd7958312949  f4c0513df4cf  ploop: Add @id argument to ->autodetect()
match  8b7f19849df7  6e95dde240b4  ploop: Formulate "kaio_backed_ext4" module parameter purpose
match  b0b2c82e6e06  42a854cba672  fs/fuse kio: int overflow while calculation of pos in map_truncate_tail()
match  7f23012fb9ad  e8e7a9d68a96  ext4: Disable ploop's fastmap for DAX
match  5c637d4329a5  a483cdbda0f1  ext4: Convert ext4_file_dax_read() into ext4_file_dax_read_iter()
match  9d84b0056f24  ecc4f47c7b31  ext4: Handle DAX case in .read_iter
match  71dafbdb3b81  8bdd380ee2ca  ms/saner handling of temporary namespaces
match  c90c52201bca  8c99541c7ec9  ms/vfs: syscall: Add open_tree(2) to reference or clone a mount
match  97c6c58ab9c9  7150cdf95cdc  ms/vfs: syscall: Add move_mount(2) to move mounts around
match  1c0c801ef30e  2b8f3afe44a4  ms/teach move_mount(2) to work with OPEN_TREE_CLONE
match  1788f695c792  48071e6d403b  ploop: Clear PLOOP_S_NO_FALLOC_DISCARD on restart
match  ea4044cece0b  7a0bc1c65484  ploop: Refactoring in ploop1_open()
match  6b1bbc40f1ac  9dd61814e618  ploop: Move v1 PLOOP_S_NO_FALLOC_DISCARD to ploop1_open()
match  936cff7a73b1  422cad353a33  ploop: Zero discard limits on stop
match  6e59f94fcf35  51c2aea1ec1c  ploop: Allow to set discard_granuality for io_kaio
match  ab6c7b0f9d37  5d92d1c1d158  ms/ipv4: Namespaceify tcp_fastopen knob
match  4e531fd7fae4  d9e7bceae216  ve/perf: forbid perf events syscall in containers
match  3a23f4df3607  226d59f76a76  ploop: Move blk_queue_make_request() into __ploop_dev_alloc()
match  5f81d52c5b54  18f95ce34284  ploop: Move queue autoconfiguration into add delta stage
match  397b19c848d6  53b6232a5599  ploop: Allow to configure FUSE discard_granuality
match  a200322a663e  379eee99453f  ploop: Introduce may_allow_falloc_discard()
match  40d12d6947ba  e1526af0d9d3  ploop: Allow FUSE to avoid maintaince mode based discard
match  25975cc720e9  3f55abbaf974  ploop: Disable discard on ploop1 v1 after snapshot
match  f623df11b51f  36563213792d  cgroup: Fixed null pointer dereference at cgroup_mount #PSBM-107596
match  2b80f526a0d6  fc846b4df51e  rh/fs/dcache: Track & report number of negative dentries
match  aa25289e340e  4e9832d8586f  ipc: add export_operations to mqueue sb
match  2c624a886928  f05adb44527e  vznetstat: Clear skb->mark on entering to VE's IP stack
match  8df93a789917  045d9b1d5c7b  bcache: Fix crashes of bcache used with raid1 #PSBM-106785
match  1b6c00d39a80  c35f5919fae0  ms/bcache: Data corruption fix #PSBM-106785
match  3480212f12bd  10ec126d84a1  ms/bcache: unregister reboot notifier if bcache fails to unregister device #PSBM-106785
match  4cf7927f56e4  2e9785e22685  ms/bcache: fix cache_set_flush() NULL pointer dereference on OOM #PSBM-106785
match  0563c10311ae  48433ac7e5f0  keys, user: Fix high order allocation in user_instantiate() #PSBM-107794
match  e7e8a5daa992  66ef255fa025  ploop: Provide interface to pass freezing fs during snapshot
match  ced318c00984  9a6d123940b8  ploop: Kill unused truncate ioctl()
match  4633139aeebe  d32692fc4abb  ploop: Transform never-true check
match  ee90de80fc4d  404531f9b88d  modules: use kvmalloc when creating sysfs attributes for ELF sections
match  f9ca003477ca  4f309cff1279  ploop: call check_lockout() under ploop->lock
match  250744bd4ad9  8b259307025b  ploop: Kaio simplify truncate() in kaio_fsync_thread()
match  9b725f15bf4e  31f834d339e0  ploop: Do not do useless preallocation in kaio_submit_alloc()
match  f61690fab38a  02b0d0378e27  ploop: Add comments about fsync_thread
match  191ae354ca6a  9ebf4d973f2c  ploop: Fix race between truncate and i_size_read()
match  5246403f4eab  fd3dea1b684e  x86_64: fix crashes due to bogus iret traps handling #PSBM-107794
match  b0070943ba7c  8d8a028dd0ee  cgroup: fixed NULL-pointer dereference in cgroup_release_agent
match  7df220749599  0d9c528e43b9  ms/KVM: LAPIC: Fix pv ipis out-of-bounds access
match  e33b171797f1  e51cad709016  ms/KVM: LAPIC: Fix pv ipis use-before-initialization
match  244c63eb799d  65248a4c7602  ipset: enable memory accounting for ipset memory allocations
match  562f2c23d469  00457d58fa57  mm, memcg: add oom counter to memory.stat memcgroup file #PSBM-107731
match  5d02caf3ac97  840cdb7825fa  ploop: zero-out block device statistics at ploop_stop
match  bf2f9a4f5243  1b4f6b5867d8  ploop: Rename label in kaio_fsync_thread()
match  6be078b32aee  2c94d60d56b1  ploop: Wait till fsync_thread goes to sleep on ploop_quiesce()
match  ba193ca4afce  e2bd10ba0ff6  ovl: introduce new "index=nouuid" option for inodes index feature
match  8bd5de195218  50277ffc7e72  ovl: enable kmem accounting for overlayfs inodes
match  c3f07a0e0368  0e6a726ab60e  ploop: Change type of freezing argument on snapshot
match  2f715e2d6382  5c4a74b775ca  memcg: fixes accounting for allocations called in "disabled BH" context
match  986f1f4c1f49  7597c0dcc035  tun: Silence allocation failer if user asked for too big header
match  c09e8ad7cb1b  515c85dd9155  vmscan: don't report reclaim progress if there was no progress.
match  fc3ad430cb67  54245dedae11  vznetstat: Kill unused venet_acct_classify_sub_outgoing()
match  4b51121fb349  6dd7bbe34722  vznetstat: Simplify venet_acct_out_hook()
match  688015edcf95  e68061dc1c61  vznetstat: Skip local skb going from !IFF_LOOPBACK interface
match  5a8bfb89cfc6  42c415dfb6b2  vznetstat: Move the code to drop redundant skb marks to *_xmit() functions #PSBM-122082
match  d275831e75dc  07360dcb9c4d  mm/filemap: fix potential memcg->cache charge leak
match  3f35dd2e5362  59ba198815ae  ploop: kaio: Clear swapfile flag
match  9581e771ae07  667403e227f9  ms/bcache: fix NULL pointer deref in blk_add_request_payload
match  63697a1a6b9b  745975ec0e79  mm/memcg: optimize mem_cgroup_enough_memory()
match  6a63006a7364  33bec0f0baef  ploop: Wake up on last discard bio from ploop_complete_request()
match  c9fbea34fc21  b533c8e3b64a  ms/vt: selection, push console lock down
match  4db4be24e9f2  82aed48d3a3f  ms/vt: selection, push sel_lock up
match  c749a53327b4  ea938fbc595d  ms/aio: Kill aio_rw_vect_retry()
match  dcf53a95af67  f36db43034da  vmalloc: cancel allocation for oom-killed tasks
match  f9efd42c7d22  07b61702798c  ve/kmod: make nfnetlink_log autoloadable upon request from a CT
match  6757310032dd  2c82ab84352e  ploop: Reduce batch size in populate_holes_bitmap()
match  b612c47f0c80  d6088faf4bb8  ms/NFSD: Fix a null reference case in find_or_create_lock_stateid()
match  e7c701ad498d  ac4904eaa5ec  netlink: protect NETLINK_REPAIR2
match  53517ef0226f  5a62b027ee49  netlink: add an option to set sk->err from userspace
match  787e53c20104  e9da5aad293c  ploop: Preallocate clusters before nullifying on grow
match  2eed1c6394d9  9995fdd6ce46  ploop: Add more debug on error
match  2d897cca01a3  c4b5855da693  ve: Reorder ve->ve_ns assignment in ve_grab_context()
match  3f8f01ebfed0  cbe274b8404e  ploop: Add statistics of fastmap requests, which fails because of cache
match  b2ff3499df45  c1a6abd49974  ploop: Invalidate pagecache on service operations
match  c4dd8593081b  45607aafc3a9  fs/fuse kio: post rdma work requests only after connection is established
match  10ea55528510  319371666a0d  fs/fuse kio: fix processing order of RDMA works during throttle/unthrottle
match  ff9f8ec75c51  a28268ca6b40  ploop: Fix crash in purge_lru_warn()
match  0b27db291b85  0f5ba06b7680  commoncap: relax setxattr and removxattr checks
match  4fd471a8899c  e2a8d14287d7  mm/memcg: cleanup vmpressure from mem_cgroup_css_free()
match  407a7772244e  41a180be2c47  mm, page_alloc: move_freepages should not examine struct page of reserved memory
match  10f105270c5e  c27eb034dd27  ms/mm,fs: introduce helpers around the i_mmap_mutex
match  28158b10b4dd  5a94ea5b3337  ms/mm: use new helper functions around the i_mmap_mutex
match  0fe73a36884a  d11fdc2e0c0e  ms/mm: convert i_mmap_mutex to rwsem
match  08ee1f184086  2169efbe4222  ms/mm/rmap: share the i_mmap_rwsem
match  205d84e8ab64  45d835aa79fb  ms/nfsd: Make init_open_stateid() a bit more whole
match  0706028fc0fa  4561d61df56d  ms/fs, nfsd: convert nfs4_stid.sc_count from atomic_t to refcount_t
match  606b9f1d80a5  f46a08febc14  ms/fs, nfsd: convert nfs4_cntl_odstate.co_odcount from atomic_t to refcount_t
match  9fe451fa95cb  239c0958b6c0  ms/fs, nfsd: convert nfs4_file.fi_ref from atomic_t to refcount_t
match  e06ac5081da2  574b62e09ef7  ms/nfsd: Fix stateid races between OPEN and CLOSE
match  5cba9b86ec10  d09dfa7e7309  ms/nfsd: Ensure we don't recognise lock stateids after freeing them
match  d6b47b9ee84c  292e98837bbe  ms/nfsd4: move find_lock_stateid
match  837a4a1a6060  e18c38e0dddf  ms/nfsd: Fix race in lock stateid creation
match  f4a38e3a4031  d44001296662  ms/nfsd: Detect unhashed stids in nfsd4_verify_open_stid()
match  65827e8e6e9f  db868b851852  ms/nfsd: Don't add locks to closed or closing open stateids
match  b8d7a25b90b8  798265953328  ms/netfilter: ipset: Convert timers to use timer_setup()
match  b22555771d41  3ac2bcdfb6ff  ms/netfilter: Replace spin_is_locked() with lockdep
match  cc6f0b44969d  55270a4ed771  ms/netfilter: ipset: Fix "INFO: rcu detected stall in hash_xxx" reports
match  97dbf30fa04c  8ff0dda5661d  ms/netfilter: xt_checksum: ignore gso skbs
match  0144c3cff671  a01f8177d2b4  ms/net: Fix usage of pskb_trim_rcsum
match  2f3c11583e85  652eb0e90bee  ms/net: make skb_partial_csum_set() more robust against overflows
match  1b33bcf62598  706c5ed79da4  ms/net: drop bogus skb with CHECKSUM_PARTIAL and offset beyond end of trimmed packet
match  3c0980866d63  a69261f807df  ms/net: rtnetlink: validate IFLA_MTU attribute in rtnl_create_link()
match  a8ec643b2e9f  daaf9a253a5e  ve/net/core: allow to call setsockopt(SO_RCVBUFFORCE) from Containers
match  928f2fa5d353  26f129b67d13  ve/device_cgroup: show all devices allowed in ct to fool docker
match  bef64d02b6db  f381c11dd821  configs.minimal: update minimal configs up to RHEL7.9 kernel base
match  ac3623f3509e  b5b6e41ac4f5  ms/xfrm: fix a warning in xfrm_policy_insert_list
match  91bf0c238844  e01e1ca59005  ms/xfrm: policy: match with both mark and mask on user interfaces
match  8b2393f43a68  e487148399ce  ms/netfilter: nft_rbtree: allow adjacent intervals with dynamic updates
match  c1a542fe06b6  70677f112396  ms/netfilter: nft_set_rbtree: handle element re-addition after deletion
match  4bb7f8faf8c5  03ad53665acf  ms/netfilter: nft_set_rbtree: check for inactive element after flag mismatch
match  e071d87c5c8c  483e7ba75fcf  ms/netfilter: nft_set_rbtree: bogus lookup/get on consecutive elements in named sets
match  033103356c5a  e31f69f09b5c  netfilter: nf_tables: allow to filter out rules by table and chain
match  c33c9454d8ee  6a3d30ec12a0  ms/ipv6: repair fib6 tree in failure case
match  5e7829fda280  bc9be5a402a2  ms/ipv6: remove null_entry before adding default route
match  3d4655695a15  d9aaefdf577c  netlink: silence high-order memory allocation warning in netlink_ack
match  a57e189f08dd  3470ff10d981  ve/cgroup: At container start check ve's css_set for host-level cgroups.
match  bf4e632fc39e  b9156ce5ac58  ms/uprobes: share the i_mmap_rwsem
match  1146d21af73f  8260598aed43  ms/mm/memory-failure: share the i_mmap_rwsem
match  1022323f3b5d  737c91c2f485  ms/mm/nommu: share the i_mmap_rwsem
match  7c23606639e8  1551e744845a  ms/mm/memory.c: share the i_mmap_rwsem
match  e501f85d1916  cfeea469ef3f  ms/ext4: fix argument checking in EXT4_IOC_MOVE_EXT
match  2f7484a303b9  c6615ab805d4  ms/ip6mr: fix stale iterator
match  f14059c9a6d7  965fa034101c  ms/net_sched: gen_estimator: fix lockdep splat
match  b7628f5a3906  4eda45615309  ms/xfrm: check id proto in validate_tmpl()
match  84c1bcb282a8  d138eb33ff4b  ms/netfilter: ipset: Fix forceadd evaluation path
match  1df425fac93c  6ec2c783c0e9  ms/netfilter: ipset: Correct rcu_dereference() call in ip_set_put_comment()
match  c0bd7807cb56  ebd7c1fad0b4  ms/netfilter: ipset: avoid null deref when IPSET_ATTR_LINENO is present
match  c802fa017a5b  e8fb255ae368  ms/netfilter: ipset: fix a missing check of nla_parse
match  a784bebb8f1b  df3a24ec30f4  ms/netfilter: ipset: Fix the last missing check of nla_parse_deprecated()
match  b764831bb09f  482d13011ffb  ms/netlink: add a start callback for starting a netlink dump
match  2414fdf5fb8e  1cb5ef5ab80e  ms/netfilter: ipset: fix suspicious RCU usage in find_set_and_id
match  24bdb345db52  54ad9f75c757  ms/netfilter: ipset: Fix calling ip_set() macro at dumping
match  95f4ea27d520  0f1fe62974c5  ms/net: handle error more gracefully in socketpair()
match  15617057ee42  ed7c5d178217  ms/socketpair(): allocate descriptors first
match  7785e7a1e4da  9ef1145c5aeb  ms/make sock_alloc_file() do sock_release() on failures
match  a53db045ee68  4d214da3fd0a  ms/packet: fix bitfield update race
match  9c78031c37e7  9c35a088a34c  ms/mm: list_lru: set shrinker map bit when child nr_items is not zero
match  e4e6d5001b23  d29991f71e15  ipv6: silence high-order allocation warinig in rawv6_sendmsg()
match  b43754eed5f3  7875f55128d8  net: silence high-order-allocation warning in sctp_pack_cookie()
match  dcc0503266c9  56a75a366dc9  ms/extable: Enable RCU if it is not watching in kernel_text_address()
match  195cb1d5d2a0  b25bed7368a9  ms/extable: Consolidate *kernel_text_address() functions
match  6b93f3a178c3  8af8a5c2c3dd  ms/tracing: Fix race in trace_open and buffer resize call
match  865df39cd899  ac46b420620c  ms/tracing: remove WARN_ON in start_thread()
match  fee59074e0d7  7f059e90f939  fs/fuse kio: always use memory registrations for iWarp RDMA reads
match  22e8060c0990  882631ac85f2  fs/fuse kio: fix problem with simultaneous map resolving
match  70f4f6b36613  d3a05a0552d7  nat: allow nft NAT and iptables NAT work on the same node
match  27861d02f487  a272adc441a4  ms/fork: Have new threads join on-going signal group stops
match  1f1e4b4fa194  1923388367cd  ms/signal: avoid double atomic counter increments for user accounting
match  7253647ddf13  8890e457877f  ms/ptrace: fix task_join_group_stop() for the case when current is traced
match  f2e4f44b8896  8c0e238e32c4  fs: Resurrect generic_segment_checks()
match  a79eea26a8d8  ebe8c0c4df3a  ms/fuse: fix bad inode
match  7a1bcdf5fc52  82c195e3ff04  tty: fix infinite loop in n_tty_receive_char()
match  13428023ef40  3bb84cbddb51  cbt: Update CBT size from check_disk_size_change()
match  47ec4427f102  6f53f65da837  ploop: Forced clear discard alignment
match  6c674c9a29b6  bc7efc164b2d  Improve vps_dumpable check in __ptrace_may_access()
match  b59c005cd2bd  d4cf182fef4f  overlayfs: relax capable check for trusted prefix xattrs
match  2ce836109ee5  53f78c0ff88e  per-memcg negative dentries accounting
match  b35c71b3016b  1a3615ee8083  ms: mm: mmu_gather: remove __tlb_reset_range() for force flush
match  463871f0d38e  2c2fe4560561  ms/nfsd4: readdirplus shouldn't return parent of export
match  7d7cbbb77b42  c052945e10f5  ploop: Add comment in cached_submit()
match  2023f6db23a1  157748b67009  ploop: Print mounted sb information on busy stop fail
match  7d3b8acf9bc2  8a973d6085ca  iomap: report collisions between directio and buffered writes to userspace
match  d854b8b1d7cd  d0c99d150b6e  fs/direct-io.c: keep dio_warn_stale_pagecache() when CONFIG_BLOCK=n
match  db534dddcacc  2257ad9b471a  mm: memcg: fix memcg reclaim soft lockup
match  60a1737163c0  4df25cba45df  mm/vmscan: add cond_resched() to loop in shrink_slab_memcg()
match  406fca4aa612  36f042ab5591  fcntl: make F_GETOWN(EX) return 0 on dead owner task
match  45ad3ef39e18  32d658dbf77d  ms/netfilter: nf_tables: add generic macros to check for generation mask
match  c086b7b75a2c  168db4b3a59d  ms/netfilter: nf_tables: add generation mask to tables
match  fee40afd4257  fe106aa7b438  ms/netfilter: nf_tables: add generation mask to chains
match  b2c97d7ce45e  9baff694fafb  ms/netfilter: nf_tables: add generation mask to sets
match  62c61915fc33  0b8b087c15a2  ms/netfilter: nf_tables: fix update chain error
match  9e17aaa10c7c  c2782e1316c8  ms/netfilter: nf_tables: check msg_type before nft_trans_set(trans)
match  7d622976fee9  812eb7c1dca3  ms/ext4: allow ext4_truncate() to return an error
match  b6aa0da302ff  621ea20b1808  ms/ext4: allow ext4_ext_truncate() to return an error
match  2150df641d98  eac1f876ca63  ms/ext4: propagate error values from ext4_inline_data_truncate()
match  11d9ea0d5659  1f32d47d1066  ms/ext4: handle ext4_mark_inode_dirty errors
match  f01696666f13  bd981d302ec3  ms/writeback: Export inode_io_list_del()
match  38ccbfc7a347  07c352e5a191  ms/ext4: Avoid freeing inodes on dirty list
match  ce0944cd3931  29fb10ea5e5b  netfilter: nf_tables: add fib expression
match  2939262ad2fd  fb6956ad720b  netfilter: nft_fib: convert htonl to ntohl properly
match  96197d904919  3e30e6e9be56  netfilter: nft_fib_ipv4: initialize *dest to zero
match  0c0a24705584  310d37c4a744  netfilter: rpfilter: bypass ipv4 lbcast packets with zeronet source
match  7ef4dab5eebd  970d9ef177c2  netfilter: rpfilter: fix incorrect loopback packet judgment
match  77e5e88a1a75  a05cc1336f6f  netfilter: nft_fib: Support existence check
match  07833bd85e94  d741e9e420bd  netfilter: nf_tables: fib: use skb_header_pointer
match  9a67ffae7bf5  b1e9b9121869  netfilter: don't set F_IFACE on ipv6 fib lookups
match  4547a2b6c872  8bff94bfa7d8  configs: enable modules for nft fib rules
match  ea3d7110860b  412137d83675  ve/kmod: make fib modules autoloadable from CT
match  48ab0b81e906  c5968b49f551  ms/lock_parent: don't step on stale ->d_parent of all-but-freed one
match  32bd3e03af87  82833a8b23ff  ploop: Use bio_kmalloc()
match  02b8f1bf6c3c  274f30dcae30  ms/netfilter: nft_compat: check extension hook mask only if set
match  43b3eab5f1a3  a4b9dcf2ccd5  ms/cpufreq: intel_pstate: Add reasons for failure and debug messages
match  374fb1a30383  59466ba88be9  cpufreq: intel_pstate: Make reasons for failure more visible
match  2df5244889de  009fc3a3cdfc  fs/fuse kio: avoid race condition at file expand
match  1742b8a5c652  9d301dd23eca  fs/fuse kio: disable parallel fsyncs and file shrinks
match  7748af0687ce  a4dd0511b5c4  netfilter: gpf inside xt_find_revision()
match  c4dc81084af8  a828846bd1e6  list: introduce list_for_each_continue()
match  6223ade28ec4  14a8658aa74e  mm/mem_cgroup_iter: Make 'iter->last_visited' a bit more stable
match  97a663ec6d1a  ac9344dcab47  mm/mem_cgroup_iter: Always assign iter->last_visited under rcu
match  f79e18f585cb  f52a3e9bebb3  mm/mem_cgroup_iter: Provide _iter_invalidate() the dying memcg as an argument
match  03e9aa3161fa  6bc45ca5fe09  mm/mem_cgroup_iter: NULL-ify 'last_visited' for invalidated iterators
match  43ecf2e94677  73744f0f33d8  mm/mem_cgroup_iter: Don't bother saving/checking 'dead_count' anymore
match  5ac903bba960  c0e54e4c8b9c  mm/mem_cgroup_iter: Cleanup mem_cgroup_iter_load()
match  e98935abb730  c46a1c3c39d0  mm/mem_cgroup_iter: Drop dead_count related infrastructure
match  78cdbe084f59  99dd8d99a546  configs: change the default cpufreq governor to "performance"
match  ea241a5a2b84  81ab513ac8e2  disable high-order allocations warnings in slip driver
match  13bbff9f8125  64a7d1d90542  ms/ext4: don't ignore return values from ext4_ext_dirty()
match  d923b433a3f6  73b824511400  fs/ext4: Make "lazytime" mount option by default
match  b11f82d0d9cd  c9348344948e  cgroup/ve: at container start only check virtualizable cgroups.
match  c2fb43a4967d  bd0372f64158  fs/fuse kio: share stucked requests count for prometheus stats
match  e7811429c200  690ee24eb6fb  ms/netfilter: nft_compat: use call_rcu for nfnl_compat_get
match  986e1a945d2a  3d942be69874  proc/mounts: add cursor
match  2a0d1b2afc32  e65c9995a2a4  ve: Add option allowing ioctl(FITRIM) from inside CT
match  91377804a3ef  b75e7365ed76  proc/mounts: fix skipping mount after cursor
match  4f31ac1ca3ba  0a0cbb0c5f96  kmapset: lost map->size update in kmapset_del_value()
match  3ff56c2b1656  68406aa7f387  ms/fuse: fix live lock in fuse_iget()
match  f5a8c503879b  0bc2f21b0107  ve/net: sit: enable in container
match  058edffb1f8d  5a459cc3bfed  sync: sync_collect_filesystems: fix possible infinite loop
match  9c8c5b77bc44  1609de07f73e  fs/fuse kio: don't use kio with uninitialized statistic
match  bc7b2347b494  c86f82db6129  net: net_assign_generic NULL lead to memory leaks
match  29144d80f5d0  178610dde501  fs/fuse: a typo resulting in corruption of page cache and kernel crash
match  ad3af8f098ea  3e8707559436  fs/fuse: released handle could be used in fiemap
match  5c74c4f4bf94  9035f4ba6d82  netfilter: ipt_CLUSTERIP: fix out-of-bounds accesses in clusterip_tg_check()
match  395f55909a31  faaac5e813c1  ms/vsock/vmci: remove unused VSOCK_DEFAULT_CONNECT_TIMEOUT
match  462f50842b87  4fc5f54b6c23  ms/vsock: remove vm_sockets_get_local_cid()
match  c90df815b7c2  f045424b9224  ms/vsock: remove include/linux/vm_sockets.h file
match  2e0065bfb1c0  60014fefb30f  ms/vsock: add 'transport' member in the struct vsock_sock
match  f8251ba73d4a  1eefad023aa6  ms/vsock/virtio: add transport parameter to the virtio_transport_reset_no_sock()
match  0d6df6730301  fe456ee284b0  ms/vsock: add 'struct vsock_sock *' param to vsock_core_get_transport()
match  5df849598e4a  a06f51aa4c25  ms/vsock: handle buffer_size sockopts in the core
match  57870e706d57  e24c8c0ab714  ms/vsock: add vsock_create_connected() called by transports
match  4ed774042d40  1b6e9e56172c  ms/vsock: move vsock_insert_unbound() in the vsock_create()
match  7612116a38d6  61b5308749d4  ms/hv_sock: set VMADDR_CID_HOST in the hvs_remote_addr_init()
match  aa27736e7eaa  2d5dc9c68817  ms/vsock/virtio: Initialize core virtio vsock before registering the driver
match  51684de65997  43e7be0174a2  ms/vsock: add multi-transports support
match  6d5fe1d26b06  8b2ce3a6d282  ms/vsock/vmci: register vmci_transport only when VMCI guest/host are active
match  b8b219d91349  a64a507b62e0  ms/vsock: prevent transport modules unloading
match  4bcfd46501a5  272d0265b923  ms/vsock: fix bind() behaviour taking care of CID
match  4369dadba37b  3fb15f06858b  ms/vhost/vsock: refuse CID assigned to the guest->host transport
match  3f16c42d7f89  a1007adbc677  ms/vsock: fix the race conditions in multi-transport support
match  3b4379e6331b  ef4f43770a8b  ms/vsock/vmci: make vmci_vsock_cb_host_called static
match  6e8dcdc1b807  f88d6d41f71e  ms/vsock: avoid to assign transport if its initialization fails
match  3c340e4a489e  7f8cca834cec  ms/vsock/virtio: fix null-pointer dereference in virtio_transport_recv_listen()
match  908e3e058a4b  d4f5070d55ea  ms/vsock/vmci: make vmci_vsock_transport_cb() static
match  3ff85037adef  c12b13dc1be0  ms/vsock: fix potential null pointer dereference in vsock_poll()
match  38fa70ff5c93  2a654de9b4b0  fs/fuse: avoid triggering BUG_ON at file close
match  eea1165b5b74  af7969941356  ms/ext4: fix fencepost error in lazytime optimization
match  f7ec0d81f8b6  0c7bd661ae4b  memcg: disable memcg accounting for nf_ct hash tables
match  b00463b98647  52b948789dd5  memcg: enable accounting for netdev_rx_queue objects
match  e78fc30643eb  e4a5067c4f38  memcg: Enable accounting for signals
match  6ff794d255f0  93d1148b05f8  memcg: Enable accounting for pids in nested pid namespaces
match  a679fc45a071  c1db6f9e8da6  memcg: Enable accounting for new namespaces and struct nsproxy
match  76c0c900518c  b2b162c07b3f  net: sched: sch_teql: fix null-pointer dereference
match  7504e20836fc  13b75f4cea75  ploop: Use preallocation for ext4
match  f86b9259449e  d5feed6f3882  ipv6 tunnels: enable netdevice register inside container
match  f24dc488ef36  8f4f8a78aa6a  ms:EDAC/MCE Milan patches
match  11fb4a55b2fe  dcd94d2f9978  RHEL7 Milan Support Patches
match  af7a29791db6  3a5e787f1588  RHEL7 Perf: Large Increment per Cycle Events for AMD Milan
match  c2a7b234900d  24f78046f2ec  ms:x86/amd_nb: Add Family 19h PCI IDs
match  9700b5eede61  16ef25b27a95  pci_ids.h: AMD Milan support
match  0cafd56d0b7f  412e819bd4f2  ms/KVM: AMD Milan Support
match  cf5bc696b4da  99c13aa2ed49  ms/netfilter: nf_tables: introduce nft_setelem_parse_flags() helper
match  47a872c902f1  20d9437d0e72  ms/netfilter: nf_tables: parse element flags from nft_del_setelem()
match  f49bad07a5cd  9ead75303a18  RCU pathwalk breakage when running into a symlink overmounting something
match  cc38e15158fd  491a410deae8  ms/cifs: Limit memory used by lock request calls to a page
match  c0e1a5a1751e  e71d55b1e88b  fs/nfs: break umount cycle if current task does not have enough stack.
match  bc580d084127  fd0515a422ba  mount: fix mounting of detached mounts onto targets that reside on shared mounts
match  8a2a506d3fe5  31594cae5b3b  AMD Milan: update 0001-edac-mce-milan.patch
match  7bb37e7bbb15  6983197b072d  net/veth: Increase veth max_mtu for k8s and weave-net
match  6d62a215f5a1  86189368ab16  ms/xfrm6_tunnel: exit_net cleanup check added
match  ec43562b660d  a78e1a0e62b4  ms/xfrm: Fix warning in xfrm6_tunnel_net_exit.
match  7b60e4e4612c  3eb057f50f96  ms/xfrm: clean up xfrm protocol checks
match  db89ef62cb10  06b4b35f06e5  ub: ub_ratelimit does not initialize ub_ratelimit->lock
match  ad0e18d8aea6  bfde2ed7fd0c  ms/ext4: track writeback errors using the generic tracking infrastructure
match  8d3330c904b3  979a5c978950  ms/ext4: fix punch hole for inline_data file systems
match  b8f7d9f859ad  db00cf3f694a  ms/ext4: fix EXT_MAX_EXTENT/INDEX to check for zeroed eh_max
match  31931095f6f3  31369dabccdf  fuse: illegal access to file in vstorage
match  8cb40faebedd  ed4e04778f79  fuse/pcs: missing initialization of client role
match  cb003ad87539  f30eb2dcc7b0  fs/ceph: access beyond end of iovec array in dio_get_pagev_size()
match  2de5d8952ff1  de7d9b3a67a9  ext4: Fix rebase c55a9acde5aa
match  4fb217d17b05  ce54c0317bc3  ms/ext4: fix bug for rename with RENAME_WHITEOUT
match  a66b14dd4537  d9432f332a49  ms/ext4: handle unwritten or delalloc buffers before enabling data journaling
match  86dcd72b0953  6479896c45a9  ms/ext4: fix xfstest generic/269 double revoked buffer bug with bigalloc
match  3945e1ef8569  760f831dbec7  ext4: Use initial count in ext4_ind_direct_IO()
match  7ae30a89a746  efdce08db57c  mm/memcg: do not save call stacks of css_get/put by default
match  4641aab6d37c  f196848c75c2  ploop: Track if we have delta with disable_merge
match  2bc744a4d94c  97482bbfd780  ploop: Check disable_merge only if there is a delta with such method
match  918374afd2ce  2c96299e0eb1  sock: allow reading and changing sk_userlocks with setsockopt
match  278f71915052  f9e8953cad8a  ve: add get_curr_ve helper
match  2c2fe8cccb08  c47ea5fefe6a  ve: get_curr_ve: first try getting ve with rcu lock
match  db248e14cabb  59bed1c08b4e  cgroup/net_prio: virtualize ifpriomap per-ve
match  4532a1bfcaaa  a7911eda41ca  ms/netfilter: remove unused variable
match  9c93fbd93077  59a3d13644b2  Fix a leak in socket(2) when we fail to allocate a file descriptor.
match  ed5a82e88e42  cc4d45dcbe18  memcg: force accounting to specified memcg
match  c44d66c66b26  41ec4577c539  ms/memcg: drop GFP_KERNEL_ACCOUNT use in tty_free_termios()
match  598d100c61a8  b0ba9fcff269  trace: fix frame skip when saving event stacktrace
match  f1d49e84500b  8f37459aa776  mm: high order allocation detector
match  9ff412708535  37cf6faf0beb  mm: make PR_SET_THP_DISABLE immediately active
match  7f007aeea177  abbf7ac4d996  ms/ipc: remove memcg accounting for sops objects in do_semtimedop()
match  66841b18fd23  429f05cea9cb  ms/ipv6: allocate enough headroom in ip6_finish_output2()
match  515e043357d4  85e4eb2720db  ms/memcg: prohibit unconditional exceeding the limit of dying tasks
match  067ffb4decff  58a52a7925d0  net: export "net/core/xfrm*" sysctls for containers
match  8c3195a7199b  930070cba667  prctl: allow to setup brk for et_dyn executables
match  5cbb9d0e50de  2ad994d8123e  ub: correct _ub_get_css() retvalue for dying/stopped containers
match  7ac68fba051e  08db864b0e20  ploop: Fix partition refcounter leak
match  7cde174ef63b  ccd846d11109  mm: Do not drop __GFP_NOFAIL in __add_to_page_cache_locked
match  7e1074b999b2  a259fb2ce99d  writeback: Write dirty times for WB_SYNC_ALL writeback
match  afc3fa5773e2  40ed871d1461  VE/sysrq-trigger: fix log limiting
match  6b19df039c97  28a66e75d862  ms/ipv6: Implement automatic flow label generation on transmit
match  d4838072d939  8332b7936c91  ms/net: reallocate new socket option number for IPV6_AUTOFLOWLABEL
match  918e35269cf7  ed59aac75a66  ms/ipv6: fix sparse errors in ip6_make_flowlabel()
match  345e52d8eed4  0f1f5186d73e  ms/ipv6: Call skb_get_hash_flowi6 to get skb->hash in ip6_make_flowlabel
match  8c49223ba8c1  0d25d1dbb2f8  binfmt_misc: don't free per-VE object on error path
match  eb06a5f1e479  8c5ffdd62982  ms/mm, oom: pagefault_out_of_memory: don't force global OOM for dying tasks
match  9ec6b8c4ca97  95f5736c446e  ms/kvm: x86: replace kvm_spec_ctrl_test_value with runtime test on the host
match  8e1fe0a8d1a6  452024c1a7ae  ms/nfsd: fix jiffies/time_t mixup in LRU list
match  841aa47bc54f  4b556e93f084  ploop: Sanity in kaio_open()
match  08b6ebc3c5f5  f19f21560453  ms/netlink: Introduce nla_strdup()
match  cbd04d5231f7  3ce8da28486c  ms/netfilter: nf_tables: Allow table names of up to 255 chars
match  8532c54c6f59  dbea67f17fce  ms/netfilter: nf_tables: Allow chain name of up to 255 chars
match  89743d0f8594  e5b17aa8f051  pfcache: Fix unitialized s_csum_partial
match  2e6f2ac63569  dd470f3dfdee  ms/ipv6: Provide ipv6 version of "disable_policy" sysctl
match  7b0943a5036e  ef539a53f050  ms/ipv6: fix 'disable_policy' for fwd packets
match  c6ea0c19e842  6630f6d0e3d9  fs/namei.c: return error if nd->inode check is empty in handle_dotdot_rcu()
match  ef57f777d866  bce28c331c09  ms/nfsd4: add refcount for nfsd4_blocked_lock
match  de4e2090f301  5c199e43e991  ms/fuse: drop obsoleted and incorrect restriction in fuse_setlk
match  9f73034878da  90e9f8c2c7a6  ms/fuse: async processing of F_SETLK with FL_SLEEP flag
match  0eeabc74e7c6  f6c2d50b24d1  /proc/<pid>/aio: add dummy read method
match  354983f27d95  db007e4a24ef  ms/nfs4: skip locks_lock_inode_wait() in nfs4_locku_done if FL_ACCESS is set
match  73b3fb73dd2a  2909d5b99010  ve/posix_timers: adjust CLOCK_BOOTTIME for CT
match  7b7b78bb2bf8  4b6e71d1eb0f  hide high-order-request warning in pskb_expand_head()
match  0e7ba9d78b7e  04cb63074ce1  mm: allow kmem limit bypassing if reclaimable slabs detected
match  2d9c86660dd1  baddffd9cc24  ms/fs/fuse: missing unlock_page() in fuse_writepage
match  5666dad98b7f  f5df7093438e  fs/fuse: fiq->pending list is killed twice in fuse_invalidate_files()
match  073ce54bdf6d  7c6dee230baf  ms/Provide a function to create a NUL-terminated string from unterminated data
match  a66e62b01621  9ceb1d2c4920  ms/NFS: Create a root NFS directory in /sys/fs/nfs
match  d2882a2d6ac3  1a5e1faaf235  ms/NFS: Cleanup - add nfs_clients_exit to mirror nfs_clients_init
match  83b095467f75  00bd48062164  ms/NFS: Add sysfs support for per-container identifier
match  27908714f6c4  d849ef0ec8f2  ms/fs: nfs: sysfs: Remove NULL check before kfree
match  3b8db9559f2c  0134ec7d1834  ms/NFSv4: Clean up initialisation of uniquified client id strings
match  befc1ef3f549  4063eaa1a79f  ms/NFSv4: Use the net namespace uniquifier if it is set
match  866f45b0b646  41df783c5803  ms/NFSv4: Fix up RCU annotations for struct nfs_netns_client
match  573d69170391  8e097c108436  ms/KVM: x86/mmu: Remove the defunct update_pte() paging hook
match  a5ce8a5bb778  ae773d62557f  ms/cgroup: no need for cgroup_mutex for /proc/cgroups
match  495838882ec5  061913e85177  mm/tswap: make tswap_delete_page handle replaced page gracefully
match  91d219506a41  eea15f7f4f21  mm/tswap: Add a sanity check in tswap_frontswap_store() on deleting a page
match  f12a42b85eb3  a8cbd16e2aac  mutex: Disable irqs in spin_[un]lock_mutex()
match  4b849d1173c1  153e3db7ae67  pid_ns: Drop global pid_max declaration leftover
match  6ffa0ba63b18  8d9383d4dac2  cgroup: switch from cgroup_mutex to cgroup_root_mutex in proc_cgroup_show
match  4c6847fbe206  af5c63cb82a9  memcg: Add memory accounting for nft expressions
match  621adda3a8e5  c6d086d26219  ms/KVM: SVM: Clear the CR4 register on reset
match  6ddce59c7a35  2bc07325c561  ms/ext4: check for out-of-order index extents in ext4_valid_extent_entries()
match  0c2e6e482cac  514521c49d0e  ms/ext4: check for inconsistent extents between index and leaf block
match  4566be1356fc  14879be28725  ms/ext4: prevent partial update of the extent blocks
match  b0f562fba324  11669bbb103b  ms/exit: reparent: fix the cross-namespace PR_SET_CHILD_SUBREAPER reparenting
match  0b246dfe9acf  601379e2fea5  ms/exit: reparent: document the ->has_child_subreaper checks
match  5952a5521512  1b1a8a3c030c  ms/exit: fix the setns() && PR_SET_CHILD_SUBREAPER interaction
match  8961a394f8a1  a0588f3c02c1  ms/exit: reparent: fix the dead-parent PR_SET_CHILD_SUBREAPER reparenting
match  db3ce40d4f8f  841c1dcc747f  net/skbuff: hide high-order-request warning in __alloc_skb()
match  ca56aa848dee  f72f4a28c525  cgroup-v1: Allow setting release_agent from root Container user_ns
match  40938a99a941  bc63e51cc307  ms/KVM: nVMX: Properly handle userspace interrupt window request
match  2ca8cf9ad3e7  3e777d3ee552  ms/KVM: nSVM: implement check_nested_events for interrupts
match  cda7af1e08c0  92e3c25dc62f  ms/KVM: SVM: introduce nested_run_pending
match  09521a17ca6e  37e820b8f7d5  ms/KVM: nSVM: Report NMIs as allowed when in L2 and Exit-on-NMI is set
match  4d8f42af3289  695d599180f5  ms/KVM: SVM: Split out architectural interrupt/NMI/SMI blocking checks
match  696514377ca3  a37965d5112a  ms/KVM: x86: Fix nmi injection failure when vcpu got blocked
match  df27ecebbc35  bbd7bfd57aa5  ms/KVM: x86: replace is_smm checks with kvm_x86_ops.smi_allowed
match  a399dcfd0cb3  855994bf86da  ms/KVM: x86: Replace late check_nested_events() hack with more precise fix
match  e8127f09a81d  97dd463b97fd  ms/KVM: nVMX: Require immediate-exit when event reinjected to L2 and L1 event pending
match  4f784eede623  2d7949ae46a5  ms/KVM: x86: track manually whether an event has been injected
match  f6b816f20092  1995b7bd1b62  ms/KVM: x86: enable event window in inject_pending_event
match  139c63d457cd  8b9fbdfd8a21  ms/Fix detectition of kernel git repository in setlocalversion script [take #2]
match  87d6ff156b6c  988f4014fc0c  ms/xfrm: fix crash in XFRM_MSG_GETSA netlink handler
match  ec8cea6d87e7  c8a56570ed95  fs/fuse kio: correct data types in tracing calls
match  ef39c95959d4  b2e0847e0d59  fs/fuse kio: wording correction in commit_cs_record (dirtying)
match  f183a1d37edc  42a5c21461e7  fuse: pcs: protection against sync seq numbers wraparound
match  ba22207453bb  ff212c48b6f0  blk-cbt: disable interrupts before this_cpu_ptr() call
match  26d84bd065b1  77cb7f63ba3c  vtty: fix slave peer lockdep annotation
match  db13cd3466e0  6c7e14d5f072  ms/drop_monitor: add missing call to genlmsg_end
match  9bc0f12b387b  43ac4ba38857  ms/drop_monitor: consider inserted data in genlmsg_end
match  88a4ec6a38a1  65d191d8f183  ms/drop_monitor: use setup_timer
match  2d9c82c72c2f  069a6710313a  ms/drop_monitor: Use correct error code
match  9f1828a2057c  8d4bb881df3c  ms/drop_monitor: Rename and document scope of mutex
match  e6780f8f118c  d69fb2e67bf0  ms/drop_monitor: Use pre_doit / post_doit hooks
match  9acb56807372  1095bc8503bd  ms/drop_monitor: Split tracing enable / disable to different functions
match  c37235d11569  fcee0888a659  ms/drop_monitor: Initialize timer and work item upon tracing enable
match  b48f8e3b8ff2  6b2d3f1b309c  ms/drop_monitor: Reset per-CPU data before starting to trace
match  2ccdb0d1c5e9  89c36cc4a624  ms/drop_monitor: Require CAP_NET_ADMIN for drop monitor configuration
match  88fcf81f58f9  492179fbd741  ms/drop_monitor: Add alert mode operations
match  a51a5c2fe9e3  6f912fdbb466  ms/drop_monitor: Add packet alert mode
match  0428632e0205  26e8abf82560  Makefile: Fix for "make rpm-pkg" working
ok     e10d12f6ecf7  35ef97e98b37  Makefile: Define the default EXTRAVERSION value
match  b060d6d6ebce  c9570533fd97  ms/tty: Make lock subclasses available for other tty locks
match  ab16f88c8583  f6baf727e812  nfs: remove excess dput in nfs_prime_dcache
match  3526fc5856a2  0ac02c3ed889  neigh: fix possible DoS due to net iface start/stop loop
match  650d54319d86  c8d1801c3099  neighbour: make proxy_queue.qlen limit per-device
match  f182624db04c  38323f5c826d  hv_balloon: Create debugfs file with hyper-v balloon usage information
match  96701d27b0ff  5043728518a7  ms/net: neigh: use dev_kfree_skb_irq instead of kfree_skb()
drop   38c1a637768f  2a709cd369f2  OpenVZ kernel rh7-3.10.0-1160.66.1.vz7.188.11
