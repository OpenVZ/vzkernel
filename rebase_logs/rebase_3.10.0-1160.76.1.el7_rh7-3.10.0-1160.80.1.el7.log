<tag>  vz7.189.x     vz7.190.x     SUBJECT
match  2aed0c2820d6  41efb1fec679  Revert RHBZ#1506437
match  2e6a1c2a6a8c  8339f2ad9301  Revert RHBZ#1822405
match  ba5e927d94ee  e91f7be655da  Revert RHBZ#1489573 patches
match  8c577d434f68  f0d77705a053  Revert RH "mm: do not stall register_shrinker()"
match  cb5a005d1029  2860dd5bf7f8  KBUILD: build should fail on modpost errors for external modules
match  dbb8eb71f26d  c25569f5d660  MS/TTY: TIOSAK Secure Attention Key ioctl
match  15e193985a3d  4dd1ea5fbd0e  ms/tty/ppc: define TIOSAK (fix tty_ioctl() compilation)
match  02619d7aeeb0  eb1b9149de53  ms/tty: Fix potential use after free in release_one_tty
match  f47eb2c257d8  3434a6a0dca0  MS/IDLE: add boot param to forcibly enable intel auto demotion
match  3160f82b22b0  188a8e15d828  MS/DEVICE: input_mutex isn't static now
match  8025849a3876  0e1908ebd609  MS/KBD: add file kbd_bind in sysfs, which allow unbind keyboard from tty (v2)
match  e679cee750bc  1fac515a9b1d  ms/idr: print a stack dump after ida_remove warning
match  3ce81c0736e8  433c2feafd4f  ms/module: remove rmmod --wait option.
match  ebc0635f8db6  286d027e0dcf  ms/kcmp: fix standard comparison bug
match  cd3a20419417  e5347f91de6e  x86/SYSCALL: remove sys32 vm86 warning
match  4c2fe23496ce  45b7c1bf907a  Kconfig: introduce kernel/Kconfig.openvz
match  0d4489ad563a  83b7f136df34  Kconfig: Kconfig.openvz includes in arch
match  383706d7d569  62713149c954  Initial patch commit + compilation fixes: commit messages history
match  c4f6184e7a06  d5db4758ca06  headers: inclusion
match  6d65509b4c56  a7771fcb62f1  devcgroup: initial patch
match  15c283a374c2  2eb811e06540  ve/devcgroup/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  9fb348408b31  e20189ec3af5  capabilities: correct descriptions
match  622288abced9  a4984f6dd97e  ve/device_cgroup: fake allowing all devices for docker inside VZCT
match  9d9e1d624186  58d6e746dd4e  ve/device_cgroup: allow to change device mount permission via cgroup
match  f97d0b3722ba  faef3710a9b6  ve/device_cgroup: kill ACC_QUOTA permission
match  b732aea8958d  c91d904ce80f  vzwdog: initial patch
match  bb524e397ff5  4799e9fa5732  vzdev: initial patch
match  cdf512538d45  cca9bc2579bd  Revert: rh/kmod: use system_unbound_wq instead of khelper
match  20306021efdd  5ee9f916ac35  cgroup: initial patch
match  d840946dc116  fa4cbc739730  ms/cgroup: reorder the operations in cgroup_destroy_locked()
match  b17362664d28  bc08cd003bca  ms/cgroup: split cgroup destruction into two steps
match  4ea91418f602  562403033c78  ms/cgroup: use percpu refcnt for cgroup_subsys_states
match  3f30f7baf197  deae15255e18  ms/cgroup: switch to new percpu_ref API
ok     dd1a8ce54da3  f50aa8a0975d  ve: Add VZVERSION suffix to kernel release
match  1431fcd41d3a  9e5bf6108519  ve/sysinfo: don't clean uptime, procs and loads in containers
match  6e17521ba56f  28af804b9a69  ve: Prohibit containers add random entropy
match  d097fe3594cf  fea21df1ee4f  ve: Add ve syscalls numbers
match  295b21d0bd2f  be921ee30283  ve/ppc: wire OpenVZ-specific syscalls
match  b1075d2882a7  67c70eda8e6d  ve: Use ve_printk() for often kernel messages about user actions
match  437d6b068721  85dcde107f6b  ve: Implement per ve randomize_va_space
match  9f139066fa75  1e1aeee7cfa0  ve: Virtualize /proc/swaps to watch from inside CT
match  bfbf2f073f11  0104672b2719  ve: Virtualize /proc/cmdline
match  18406a60856c  8f80dbeba828  ve: Virtualize devpts superblock
match  db7df9509f34  62e6c38c11cf  ve: Add virtinfo subsys
match  d2d727cde067  ed5cc37a8e06  ve: Prohibit module load and usermode_helper from inside CT
match  0ff3272523a5  be774a1f36d6  ve: Use ve_relative_clock in times() syscall and /proc/[pid]/stat
match  e117d2d29dc8  326db90bc3a7  ve: Customize VE uptime
match  f5d6ec9f1348  ece5bcc2496e  ve: Replace 0 ppid with 1 (workaround for bad utils)
match  68d1a1e97af4  3ee1afc47901  ve: Virtualize sysinfo
match  a28cfb74b255  ef890c36fb10  ve: allow user ns in chroot
match  2ae5c5a48e8a  b80ef2e719c6  ve/userns: associate user_struct with the user_namespace
ok     70866697cc80  3853cb7789aa  ve: initial patch
ok     70866697cc80  f24efe2ecafe  ve: initial patch
match  39c3eaf86a7c  ddcfc6701ef4  ve/mm: print OOM info to VE log
match  b5cf2c767ef6  c84f2c02a4db  ve/mm/trace: introduce vps_dumpable flag
match  415cdc84c338  b2adc685f85a  ptrace: prevent tracing "init" from inside a CT
match  c4cc44e2ad3a  d06c0cf91c9b  ve/devmnt: Introduce ve::devmnt list
match  5582fc8028f4  cc860908db6f  ve/fs/devmnt: process mount options
match  292614991eef  c093d6bd8dad  ve/devmnt: Add a ability to show ve.mount_opts
match  53e24808b102  c02906666237  uts: Add virt_utsname and /proc/sys/kernel/virt_osrelease entry
match  1cb64836bdae  207be59bb6b5  ve/uts_ns: Implement cgroup interface to configure ve's os_release
match  3e79a1fe60a5  db9a37fb2894  ve: Port diff-ve-allow-taskstats-netlink-in-netns
match  4d2bc813570d  7ead15b0e679  ve/taskstats: allow delivery of task attributes in CT context
match  7fc9be41567e  4d9a53c12a0c  ve/lockdep: Port diff-lockdep-taint-kernel-on-circular-locking-complains
match  ff6813b189b5  c887eeae924e  ve: Add support of features mask
match  dd5e8be79a95  262548bfbdbc  ve: Add support of iptables mask
match  a1543c248591  441b5a699437  ve/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  4d3a952e477a  e629317d3931  ve/itimer: add ve_name to warning for a NULL new_value
match  fb52b8692d09  3b7cbb8c20da  ve: Implement current_user_ns_initial() helper
match  20eef9f20391  d37b2ef8055a  vecalls: fix VZCTL_GET_CPU_STAT uptime_jif scale
match  ac501ec33a5d  6380b684aecb  ve: introduce ve_init_user_ns() helper
match  8e84328b3143  f016c44eaf64  ve/acct: Allow process accounting in containers
match  a5da6255f5f0  1df8924fd85d  ve/kernel: allow to increase rlimit from inside container
match  494f507eee5b  dc4cd70dac1b  ve/cgroup: Add pseudosuper state for restore sake
match  3d7c0b17abe9  705ee84aed19  ve/security: device_cgroup -- Allow manage devices in @pseudosuper state
match  c4dcf58cca1c  56ac4a82e4a8  VE: convert khelper_wq to kthread_worker
match  70843281eae3  d386c10a556f  ve/cgroups: fake num_cgroups in /proc/cgroups output
match  4556902e9c3d  8bce9a5cce41  cgroup: Mark cgroup CGRP_VE_ROOT
match  da5f5ddf8601  7b36fd1b587f  ve/cgroup: Mangle cgroups root from inside of VE view
match  14702bbc66d6  fa27ad49e26a  ve/cgroup: do not virtualize output of cgroup_path
match  b950f3957fc2  9584209f3cbd  ve/cgroup: Allow to write to several safe cgroup files from CT
match  aa858647e506  7f7f3330964d  ve/cgroups: Introduce subgroups_limit control
match  39226ada3b93  608b2a842543  ms/net/RDS: verify the underlying transport exists before creating a connection
match  6c49ad3216cc  9b89ff400795  ms/netlabel: fix the netlbl_catmap_setlong() dummy function
match  5ba3972e98f9  02ed47a9475b  netns: export net_assign_generic()
match  34d7b23506ab  25d718b38ab1  net: Make sit feature optional
match  1e9065e082c8  72dd63b78193  net: Make ipip feature optional
match  79f247f3f8ee  bafd5b112042  net: Add sysctl_tcp_use_sg to disable NETIF_F_SG sk route capability
match  36718fa69401  87ff6dad8766  net: Add NETIF_F_VENET netdev feature and optimized skb forwarding
match  d7472480fd18  62e818cecf11  net: Add NETIF_F_VIRTUAL feature to mask devices allowed in CT
match  c403c2da1426  3615634dabac  net: Make neigh_alloc() return ENOMEM in kmalloc() failed
match  4a186cc5a584  22e32757e27f  tun: Create tun_flags file on for init_net only
match  680ba8c087be  2c53438b655d  net: move dev_name_hash/dev_index_hash to netdevice.h
match  56764ffe79a4  33c1bd643063  net: introduce ip_rt_src_check
match  e3018eb30584  8e6f4c6a7245  net: honor TW_WSCALE_MASK/TW_WSCALE_SPEC
match  cd3587cca3fe  caaa2204fb81  net/compilation: sysctl_tcp_adv_win_scale
match  3d22e564b2ad  c8914aef64d2  net: don't push data in a socket in repair state
match  53ec001f3cde  3cec8bf14672  net: force tcp maximum segment size (MSS) to 64K
match  23130a2b80ec  f8b9069a3d0b  net: shift rcv_nxt appropriately in case we received only part of data
match  694df13c8e53  5b71ec21c6fc  net/udp: honor SK_FORCE_REUSE
match  9e4676b48d0a  1fc8df48961d  net/ipv6: fix MIP6 compilation
match  f6c79e4af565  899c4ed53fa6  net: fix cbq quantum calculation
match  97211d69f0db  88c94e1d30a2  net/teql: disable "True" (or "trivial") link equalizer inside a CT
match  09efcec9515d  f34b394941a9  veip: initial patch
match  1921efd0202f  67e0d655691d  ve: export ve_subsys symbol
match  37631f925fde  67aaae176ae7  drivers/net/ve: venet network device introduced
match  e83b711b5792  b9dfa57fd332  venet: delay skb_orphan() for venet CT->host path optimization
match  c06ff55de3a6  fdd15764d920  veip: Add commentary about veip_shutdown_hook
match  398f975aa290  5e439deea2d9  venet: ipX_forward headroom check
match  6a0fe25c9d5c  b7c90a0f9883  ve/net,netfilter: Adjust REDIRECT target on venet device
match  7437502e5896  e60b221d31bb  fs/nfs: don't use delayed unmount for nfs.
match  f5ba0b663a39  d6c6f8c62ddd  ve/net/sysfs: Porting diff-ve-net-sysfs-drop-redundant-net_ipv4_route_path and diff-ve-net-route-bring-back-route_src_check
match  284d5f60ee38  b1c5e22266b5  ve/net: allow to rename devices in non-ve namespaces
match  be0c5b7b6bff  fcbd8d7e0208  ve/net: Add ipt_mask checks into ip6table_nat
match  f0b97f288b98  3fac11fe516b  ve/net: Add VE_NF_CONNTRACK check in resolve_normal_ct()
match  5cc4855f0149  175cb25c2ddb  ve/net: sit: fix crash on newlink if VE_FEATURE_SIT is disabled
match  8c6598c86d4c  fbe6b38fb872  VE/NET: don't oops in net_generic() on disabled features
match  394da6d25286  6200f2bb2058  ve/net/packet: show tx-ring warning only for host
match  e722809c61fc  34f4a7e786ea  ve/net: restrict number of net devices for CT
match  3c651737994e  281e62c27464  ve/net/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  4aeff5c0ca6b  633029bfd5b3  ve/net: restrict ethtool to CT root userns and prohibit EEPROM change
match  bf382ac1b466  f39133b1113a  ve/bridge: br_dev_init: check if "bridge" feature is enabled
match  7411c307186f  3d941e043c80  ve/tun: expose "owner", "group" and "tun_flags" attributes in container
match  0b4a84a6513a  9204e5a19c1e  ve/net: Fix vlan NETIF_F_VIRTUAL feature initialization
match  9856cad7a93b  0a0cf05d5369  ve/net/ppp: introduce VE_FEATURE_PPP feature
match  8d8649dae2ab  1605b0dc856a  ve/net/dummy: enable support in a container
match  a11bde349c33  6d7dbcbfd72d  ve/net/ip_gre: containerize per-net devices
match  999450b92c11  7d3fa9729a09  ve/net: ip_vti: skip per net init in ve
match  f2bead9a061e  c39722c0ed9c  ve/net: ipip: enable in container
match  b83ae1a2f0e0  0a6cafdcf666  ve/net/vxlan: enable support in a container
match  bf2a8021eef1  8c3af6b30d5d  ve/net: introduce TAP accounting
match  cf3fa1c81dfc  60cb9aff163d  vzeth: initial patch
match  27996be62b2a  d02c44b08485  ve/veth: don't drop skb->mark if NETIF_F_VENET is set
match  7114e9c23f85  2386fc044da0  vzevent: initial patch
match  8f218c260b6d  9777c3088b8b  ve/uevent: Use own uevent_seqnum for every VE
match  395e595366e9  2e80cff61d16  ve/kobj: Send events per VE instead of all net-namespaces broadcasting
match  a94e477c94e8  16198bc8efdf  ve/net: introduce vz_security_*_check checks
match  7d9552ac2cf7  8503a337d862  cpuset: initial patch
match  4b51a16fea48  47282860339b  cpuset/cpus: don't propagate changes to empty descendant cgroups
match  82dd8a5d0d2b  a2d0a7175733  net/sched: restore "mpu xxx" handling
match  d90978b38495  677278e80e25  ve/printk: printk virtualization
match  105414570c10  4afeeb2cb390  ve/printk: per-CT printk helpers introduced
match  2ff6399bed28  3b68e970d1c8  printk: Add touch_all_softlockup_watchdogs() to console_unlock()
match  2b92fad134ac  eff0c5b9404e  fs/quota: Compatibility with older quotactl interface
match  b30a77e0a1e3  0ff1fc6db47a  ve/quota: allow to manage quota in top CT user ns
match  3f781910c61f  ac9196d60a22  quota: missing lock in dqcache_shrink_scan()
match  01ca4ab3f5a0  1c2b2dedc6d1  proc: Show vcpu in do_task_stat()
match  fc1a02636aff  06d06163e14a  fs/proc: enhance proc_fd_access_allowed() and provide appropriate error code to callers
match  1fc3df745fba  1bf469697c48  fs/proc: print fairshed stat
match  3802a3d5a204  00caf14febfe  ve/proc: restricted proc-entries scope
match  53b5b0bcca43  bff4908bf275  blkcg: Hide not allowed device from /proc/devices
match  635a6b55f928  152a737a2258  ve/proc/block: Show CT allowed partitions in /proc/partitions
match  e00781ac4de9  8089470f982d  ve/proc: use memcg limits for showing oom_score inside CT
match  17be108b5214  67da43fe6219  ve/fs: drop useless d_root_check()
match  f1c1cb7185c0  b3dbe41908bc  ve/proc/time: Port diff-ve-proc-report-real_start_time-in-_proc_PID_stat-if-CONFIG_VE
match  c6c516f49331  c31510745b7e  ve/proc: fix mangling cgroup mount source path in container
match  711a2ee394f2  2779aeba5368  ve/proc/net: proc_net_create() helper introduced
match  275abea35579  bf49077545fb  ve/proc/net: virtualize all the network proc entries
match  3b7a3b696105  a875b0bd8ebd  ve/proc/net/nr_cpus: cut lines in /proc/net/softnet_stat to number of vcpus in CT
match  46ab38de481a  aaab6268ef4a  ve/module: hide module refcounts from container
match  808594accf43  e08d6d88cb69  sysctl: Change sysctl::show_unhandled_signals default
match  6fdedbbeea99  1f6b5e3e7aae  sysctl: make hotplug, printk and mmap_min_addr accessible inside a CT
match  be4e005e183f  cbce3feae43c  ve/sysctl: write permission restriction
match  063dc907ba7d  b98bb807dddc  ve/sysctl: implement virtualized methods
match  80dd580f137e  da59c51a1a4d  ve/sysctl/ipc: mark as virtualized
match  e29f70742b2c  06721ec832bb  sysctl: make may_detach_mounts immutable in CT
match  a18d9e7971a3  367e231df923  ve/sysctl/pidns: allow to change sysctl "ns_last_pid" from containers
match  7533e6ce21d1  44635ed933d6  ve/sysctl: allow to write kernel/hostname and kernel/domainname entries in container
match  a11143b64fa8  55ef89cabf89  ve/sysctl/net: allow "net.unix.max_dgram_qlen" sysctl in CT init userns
match  1d800b9f37d3  b6a6fb788c4b  ve/sysctl/net: allow net.ipv4.vs.* in CT init userns
match  29142e041d4b  1e118cab6021  ve/coredump: virtualize kernel.core_pattern sysctl
match  6a061fbc8803  6444a0b295e8  ms/coredump: fix unfreezable coredumping task
match  30944ec4bf5c  fe60919d9c75  ms/sched/numa: fix unsafe get_task_struct() in task_numa_assign()
match  de989cafb6ca  9ac44ba74013  delayacct: Add stats primitives
match  789c66783e75  6964867b6204  kernel: Account nr_zombie and nr_dead
match  4bcd010c12b9  c47ba9676033  sched: Count rq::nr_sleeping and cfs_rq::nr_unint
match  18398d08a79e  2e7287dc7c9e  sched: Account cfs_rq::nr_iowait
match  b1e80bbd66fc  cda80cec6e9d  sched: Add primitives to calculate nr running, sleeping, stopped and uninterruptible tasks
match  a394f679d719  947e03933bd5  sched: Account task_group::start_time
match  b38c796e5150  4f2c4f33ba32  sched: Change show_state() view
match  e2a35d5089a4  1c4375e135f8  sched: Account ve_task_info::sleep_time
match  53e3da5cf0a3  7d83eaf24f57  sched: Export per task_group statistics_work
match  33110a8359fd  9cd056f26bfd  sched: Add cpulimit base interfaces
match  20ac0c516e2a  f5d56a9956c4  sched: put setting scheduller under CAP_SYS_ADMIN (instead of SYS_NICE)
match  13a0f3381551  94228437ddef  sched: prohibit setting affinity from inside a CT
match  fe0546b1d504  04f7f2d759af  sched: other changes
match  53440fc383d4  bb2a9c25dcdf  sched/stat: initial patch
match  2c8ca79a2923  f14291ca0427  sched/stat: account ctxsw per task group
match  1cb1b981123a  67c9104264a6  sched/stat: account forks per task group
match  4b6af03cd886  98e8f8bc48df  ve/sched: port nr cpus limit
match  b82bcad644cb  133ebf7e2495  ve/sched: port vcpu hotslice
match  a03b9b4c3124  653d93c779ef  sched: Port diff-sched-initialize-runtime-to-non-zero-on-cfs-bw-set
match  1dfe6ea49321  a0f40386f34c  ms/sched: Port diff-sched-increase-SCHED_LOAD_SCALE-resolution
match  f9963feb6a72  fbfafcc63e7f  sched: Port diff-sched-clear-prev-entity-if-curr-is-dequeued
match  e681f1abdcc0  915ce40beeff  sched: Port diff-sched-return-only-virtual-cpus-in-sched_getaffinity
match  eddd72bc2443  21617d249350  sched: Port cpustat related patches
match  55be7c04bda0  721418ca968d  sched: Port diff-sched-make-nr_cpus-limit-support-hierarchies
match  a0b8a70819eb  68c4efe99714  ve/sched: Hide steal time from inside CT
match  ddc6e2a11e7e  01fda0dda484  sched: disable dumping cfs info on sysrq trigger
match  c55fb0e3de60  c3f42acd1005  ms/sched/core: Fix unserialized r-m-w scribbling stuff
match  9f772d1d9090  0ca68f86057f  ve/fairsched: Resurrect proc fairsched files
match  f8ad828be3a7  564dba8be392  sched: use topmost limited ancestor for cpulimit balancing
match  8c9d0515746a  a4e37d22b898  ms/sched/fair: Initialize throttle_count for new task-groups lazily
match  88064f1b7db2  6b4d38423192  sched: debug: show nr_failed_migrations_cpulimit
match  73c5289a0f30  bd905f4651db  ve/sched: make load balancing more agressive
match  a52b0d7962da  a309650c67eb  ms/sched: Fix race on toggling cfs_bandwidth_used
match  053b4dd56230  fe31f6f4054d  ve/sched: sched_show_task: call task_ve_name() under RCU lock
match  46255655d3d8  729bae49fe15  ms/sched/numa: Fix use-after-free bug in the task_numa_compare
match  a1a6ca62eb2f  445e2b504468  sched: Count loadavg under rq::lock in calc_load_nohz_start()
match  30ae5219692d  722721a29ae9  OpenVZ 7 config file
match  c6505b034b2e  2e9ba9d157f0  ms/epoll: fix use-after-free in eventpoll_release_file
match  74ec7a6e7237  f0c9085b0463  ms/epoll: Make fdinfo to always success
match  ed835086e9f1  ce2c239e1bfe  fs: Lower ioprio in case of ioprio_set() called from CT
match  2eb69ba7e9fc  4dea3f2d66c3  fs: Show saved signal mask in /proc/[pid]/status
match  961b16cdab22  99c69f194654  fs: Split statfs_by_dentry()
match  d5b653298dc4  ee4b17159a28  fs: Restrict ve sync methods
match  75a21266ca91  dc282ec1a601  fs: Mask appropriate filesystems FS_VIRTUALIZED
match  8ee641c53851  6ca5172f5b70  fs: exec_mmap() arg corrected
match  bba9e7ef6164  0a1698fdd354  ve/fs: Port diff-ve-fs-allow-to-remove-swapfile-hardlinks
match  a4498ef72b56  98c679424c0e  VE/FS: allow to mknod inside ct
match  79c11ab6c168  d6af6afaecfd  ve/fs/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  0f73b24588d2  98740f47441d  ve/fs/namei: check containers capabilities in may_linkat()
match  9351c7408a7b  68ec2d898497  ve/fs/namei: fix capabilities check in sys_renameat2 () to support Containers
match  7e7094e0e9b9  3b0bb9caa487  ve/fanotify: Use ve-capable instead of plain capable test
match  178da772dc3d  bb791e596984  ve/fs/locks: Make CAP_LEASE work in containers
match  776e59e4fb1e  f602318b8f36  ve/fs/autofs: mark autofs as virtualized
match  1598ab9af4c7  b615a2899dba  ms/autofs: show pipe inode in mount options
match  f9e0726c7514  8a15b2e0d481  VE/FS: containerize filesystems access
match  5f9f317b7ac8  3bf3c3b70b43  ve/fs: mark virtual filesystems as virtualized
match  576f2b259bbc  651e80d4e947  ve/fs/nfs: NFS containerization
match  0ce7daec8ad2  37346d3d52b7  nfs: abort delegation in dying VE
match  a22d941fc8a0  e4c9742190d0  ms/NFS: Don't call COMMIT in ->releasepage()
match  8de3ab641b31  3d94580ab452  ms/NFS/CIFS/SUNRPC: don't allow to freeze execution
match  5ebe2fabbbe5  e7f6c59fcb1d  ve/fs/nfsd: NFSd containerization
match  7d03a2959107  c821c007a639  ve/sunrpc: containerize kthreads
match  f9f7ed2e6430  c28977a5fbe3  ve/nfsd: enable UMH client tracker in a container
match  1ce4136209ea  9241ed3ab02a  ve/nfsd: disable legacy recovery tracking for containers
match  2ec9c0dcc2a1  b2813ccc4d3f  ve/nfsd: do not print nfscld warning in a container
match  698a790e8c79  d427df636175  nfsd: return file system superblock time granulaty on FSINFO request
match  03a505d47c0b  c65bb50988e1  ve/fs: virtualize devtmpfs file system
match  ab878ea9dd17  8bfc8de04599  ve/fs/devpts: don't require newinstance
match  63c61c932bfb  2554f4c55fe3  ve/devpts: Assign containers @devpts_sb on first mount
match  3da70e7f6159  104cb23bbe39  ve/fs/binfmt: move all internal data to structure
match  183f5d68e473  e1112b0c1f0c  ve/fs/binfmt: virtualization
match  67dc0d3fe586  2d849d5d3ab9  ve/binfmt_misc: destroy all nodes on ve stop
match  4e17f1f1240f  78d73f60d04e  ve/fs: introduce "fs.fsync-enable" and "fs.odirect_enable" sysctls
match  09d457070b19  25c53389b75a  rh/fs: introduce "fs.relatime_interval" sysctl
match  dfed35abd791  96c7ab4c42a2  rh/fs: unwind changes on shift_arg_pages error path
match  26ecacfb4d44  53345b5a3518  vfs/nfs: add set_flags wrapper
match  487368014308  7ce3a7b04fa5  fs/shmem: skip "relatime" in shmem_parse_options()
match  d88467fa2bd3  ce81851fc1d2  tmpfs: shmem_fallocate must return ERESTARTSYS
match  230ad5a8bec9  66cc8e447675  fs: add fadvise file_operation
match  decac393ed24  8567306317c0  ve/fs/ioprio: confine ioprio_{set, get}(IOPRIO_WHO_USER) to current ve
match  56249c0c675f  1de83ea0347e  mm/fs: Port diff-mm-debug-memallocation-caused-fs-reentrance
match  5f6bb7163dfa  8c486daf44ac  ve/fs: Port diff-ve-fs-security-check-for-mount
match  016c4f3e28f0  38784e221abf  ve/fs/inotify: do not impose limit on the number of instances by default
match  cc4c0af84a96  10eea60beff4  ve/fs: Allow to mount ext4 and binfmt_misc under non-root ns
match  9f6b73fdf2a2  9af20b5bc5e0  ms/fsnotify: Make fdinfo to always success
match  41a1db86ee0a  13a340aa3dc2  ve/fs: add per-VE limit of mount points
match  45aa7a331e1b  6f305af1e278  ve/fs: namespace -- Ignore device permissions during restore
match  bb2a9ccb215d  104f219ac607  ve/fs: namespace -- Don't fail on permissions if @ve->devmnt_list is empty
match  e8dcf025848d  66038f94658f  ve: remove sysctl_fsync_enable and use ve_fsync_behavior instead
match  e0f41ae9a0c3  01974984a25b  fs: fix accounting pipe buffers to kmemcg
match  3d6e4192ab79  0dc1c553d46a  ve: remove sync_mutex
match  8bed4d6adccb  32b689c29f34  ms/fs/super.c: fix WARN on alloc_super() fail path
match  3d301dbcbc61  e61d42dd69c8  fs/block_dev: fix NULL ptr deref in freeze_bdev()
match  964aeaef98bc  395dfe185abd  ms/fs/file.c:fdtable: avoid triggering OOMs from alloc_fdmem
match  d625c4dd77c3  f3d9d50355da  ms/fs: Fix race when checking i_size on direct i/o read
match  789e19368239  f056fde10da4  fs: FIEMAP should sync only required range with FIEMAP_FLAG_SYNC
match  54ef03941a42  afd4357696a2  fs: ioctl_fiemap must check what filemap_write_and_wait_range returns
match  22ffbb4d72b8  ae44744d8627  ve/fs/writeback: filter per-container inodes earlier
match  4f6563d8bd6b  fecdedc93c4c  ve/fs/overlay: allow overlayfs to be used inside a Container
match  a5fd25c488ef  d46fe68bc1e1  overlayfs: unmark overlayfs as tech preview
match  4da7b581e4c2  4fd242544763  fs/aio: kernel direct aio
match  983b85cd33fa  433c9fe2ea6d  ve/fs/aio: aio_nr & aio_max_nr variables virtualization
match  29938ebaa794  6aaeb7352389  ve/fs: Export fs.aio-max-nr via ve cgroup
match  ac15fe38baa2  e1619e45f516  ms/aio: Multiply passed nr_events in io_setup()
match  7acaa8db90de  0bc8087429cb  ve/aio: Add a handle to checkpoint/restore AIO context
match  8e0ab8926367  1d4c7f672bb3  fs/ceph: honor kernel direct aio changes v2
match  830634363bb0  e9eaf5bc472c  pid_ns: Virtualize pid_max
match  d9d059f45357  74300ec6faa7  PIDNS: implement change_pid_ns()
match  c90372ce228a  b5f7fb3c3512  ms/pidns: Make the pidns proc mount/umount logic
match  e08d6eef9f83  2b88565b58b5  pid: export symbol nex_pidmap
match  874659c628cd  d93357ca1622  pidns: Disable pid allocation if pid_ns_prepare_proc() is failed in alloc_pid()
match  21de544d0bf4  6314a1aef662  pidns: add proc mount option 'hidepidns=0|1'
match  cc4f15c2d780  78e74233f944  signal: make SIGKILL top priority signal
match  34c6bb17df03  3a1e0d637bde  ve/signal: Ignore signals from wrong ve
match  22bf9090e35e  434f8bcb2d26  signal: don't rearm a posix-timer if siginfo was queued from user-space
match  cc0688a41d05  446567cf77fe  Use ve init task's css instead of opening cgroup via vfs
match  d00e2c014fd1  37be40a2c33d  ve: add one more SHUTDOWN hook chain
match  55658440044c  b9a30a36c239  KMAPSET: set of key-value mappings with build-in
match  f74ff4d7cfe0  0572d8409066  drivers/core/sysfs: respect ns when removing sys dev link
match  f554cba54dc7  87bd18858c35  ms/cfq-iosched: remove @gfp_mask from cfq_find_alloc_queue()
match  5c1d16340ca3  ea74085e7040  ms/cfq-iosched: simplify control flow in cfq_get_queue()
match  e227eafce5ed  48a9e89e04da  ms/cfq-iosched: fix async oom queue handling
match  111eea409817  ec1013930101  ms/cfq-iosched: fix oom cfq_queue ref leak in cfq_set_request()
match  59695e0263d8  0c86e7dec7ab  block: Export disk_type,block_class and disk_name
match  ddca945fe5b0  13870415e0da  block: suppress hard lockup warning in elv_drain_elevator
match  396cecc6fb1f  57a1d9c7c1f1  kthread: make of a new kthread's queuing code to a callback
match  ef0441a06d36  4cdde054550c  ve/kthread: kthreads creation facility introduced
match  8790cc1f0b36  c9af22f06767  ve/kthread: introduce kthread_run_ve() helper
match  6e15f139ce99  588f5289af3d  ve/kthread: khelper kthread in a container introduced
match  83a0cbc88045  96dc548117f5  ms/mpi: revert "Remove unused code from MPI library"
match  983bf4860965  daca9f8c24e8  ms/mpi: revert "Revert "crypto: GnuPG based MPI lib -
match  07c7c1e06727  9979547e5b6d  mpi: export arithmetic functions required for in-kernel DSA implementation
match  3ab3c1015967  cc4a0487ba3b  config.OpenVZ: OpenVZ related config options are added
match  002586520f3a  6f14048fd784  bcache: check correctly for bcache cgroup subsystem presence
match  6f9bbda6aacf  1cddbfe711db  config: enable BCACHE as a module"
match  9524c2488bad  0a4a173f0d60  VE/sysrq-trigger: make it VE-namespace aware
match  76b0370ba6c3  d768c3cb28fb  radix-tree: save previous gfp_t tags in radix tree for dirty memory accounting
match  4c354f5ba356  370eb5e4272b  ve/posix-timers: reference ve monotonic clock from ve start (v2)
match  c403c56811c7  13b60890833e  timers should not get negative argument
match  e074083f8d78  b26ec2df4592  ve: Add interface for @start_timespec and @real_start_timespec adjustmen
match  b37ba1a9d7a1  b95829ed8e02  ve: Use @real_start_timespec in uptime_proc_show
match  ad9e96d6e3a6  32af12275b25  ve/futex/timeout: adjust futex timeout to absolule
match  9b6343741760  81b5f3927002  ms/netfilter: Add {ipt,ip6t}_osf aliases for xt_osf
match  c694d5cf77fd  dd4a373e0222  ve/netfilter: Basic ve transformations
match  d1d466a4c093  6643f78740f5  ve/netfilter: Restore revision 0 "iprange" match support
match  e6be77d7ef4f  eef598a97504  ve/netfilter: Restore revision 0 "mark" match and "MARK" target support
match  14b66fe4407c  9efa77512e2a  ve/netfilter: Restore revision 0 "tos" match support
match  cb96396e5063  898dc40e9002  ve/netfilter: Restore revision 0 "TOS" target support
match  35d862306dd8  babc598dd5bf  ve/netfilter: Restore revision 0 "connmark" match / "CONNMARK" target support
match  b7915bd68c93  624845560a11  ve/netfilter: MARK -- drop off @table entity to support rhel5 containers, v2
match  5a71bd009920  40cf082623ce  ve/netfilter: Restore revision 0 "owner" match support
match  c30834beed9a  9918cf64f1fe  ve/netfilter: Restore revision 0 "conntrack" match support
match  e48a10d0217c  edae62c1360e  ve/netfilter: Implement ip_conntrack_disable_ve0 module option
match  847d91dc8e6c  8ad723925981  ve/netfilter: Implement net_ipt_permitted() etc
match  3e502641729a  5c932d913f04  ve/netfilter: Add pernet permission checks in ip_tables
match  5e7ebbd9f834  8ae2d2627e56  ve/netfilter: Implement pernet expect_max / virtualize "net.netfilter.nf_conntrack_expect_max" sysctl
match  d8873a6e10d0  da2609b129f2  ve/netfilter: Implement pernet net->ct.max / virtualize "nf_conntrack_max" sysctl
match  b971f3cf8b84  753f932b366d  ve/netfilter: Add autoloading of sockopt modules
match  f50ae7b1be03  7d1c19e4c9ea  ve/netfilter/cred: add ve_capable to check capabilities relative to the current VE (v2)
match  6bdb160333f7  afbfeb938a1e  ve/netfilter: Check for permittions while looking for target and match
match  e10334050e10  96a8c7599d5e  ve/netfilter: ve_printk for "nf_conntrack: table full"
match  c74f585ced0b  71cba0ceffa9  ve/netfilter: allow adding matches from the container initial user namespace
match  a4c123362811  0bd4bcdbb88d  ve/netfilter: get UID and GID from container user ns on rule match
match  0e823d7f08e9  d9007785a3fd  ms/netfilter: x_tables: check for bogus target offset
match  e1665f3fa6c1  816c33bfaf25  ve/netfilter: use ve_printk for BUGPRINT in ebtables
match  3756ee7de34f  ad8171df3c59  ve/netfilter: rectify nflog inside CT
match  d426ce74145f  4ae0dd0bd5f1  ve/netfilter: rectify ebtlog inside CT
match  d498d2e93203  8b9ea887331e  netfilter/x_tables: account entry offsets allocations
match  6df0ceaf45d1  fdcfd5a4323a  ms/netfilter: nfnetlink: correctly validate length of batch messages
match  81efde175798  a081420e3c95  ms/netfilter: x_tables: avoid warn and OOM killer on vmalloc call
match  208ecc0c3a8a  f200b53e5cd3  ms/bridge: drop netfilter fake rtable unconditionally
match  26d54c40a72f  559f9b27c80d  netfilter: ve_ipt_permitted() helper introduced
match  3d15c3aa094a  70c914598a68  netfilter: check per-ve netfilter status on actual operation
match  db4937853538  547f59b25a88  netfilter: always create per-net "filter" tables objects
match  2c7a789650bd  7b7f71a4d9c8  netfilter: always create netfilter per-net objects for ipv4/ipv6
match  98bfd9a8fae8  11d676d319ac  ms/netfilter: Allow xt_owner in any user namespace
match  74782aa26943  dd27fec589d5  config.OpenVZ: enable netfilter module xt_match_wdog_tmo
match  e440f57cc09f  65919602b2ec  ms/netfilter: Restore xt_connlimit version 0
match  2b1a4f53fc25  d805480c3308  ve/nf_conntrack: allow expose of priviledged sysctl inside containers
match  6c29cda32b80  c5f7b32245e2  ve/nf_conntrack: expose "nf_conntrack_max" in containers
match  dee48df3d354  cf1b4ffab840  ve/nf_conntrack: expose "nf_conntrack_acct" in contaners
match  ab1581d0efc8  19e16fa6cc5a  ve/nf_conntrack: expose "nf_conntrack_events*" in contaners
match  b32c062103ba  01270b2a5586  net: Primitives to enable conntrack allocation
match  783872817535  febfc8e59969  net: Mark conntrack users in xtables
match  88c2fcfa9df7  4620f9974467  net: Mark conntrack users in nftables
match  d389de639332  34c0d645ba05  net: Add dependence xt_socket match on nf_conntrack_ipv4
match  5b53337ba983  81d594a0a43a  netlink: allow to set peeking offset for sockets
match  1308c086c7b9  f81f7a33fedf  netlink: add an ability to restore messages in a receive queue
match  09a770c997a2  91e3bf38200c  netlink/diag: report flags for netlink sockets
match  9f76623ad147  97675cf872de  ve/netlink: allow messages with family PF_BRIDGE type RTM_xxxNEIGH in CT
match  17f5335c6642  850b5a6ce7ba  ms/netlink: fix an use-after-free issue for nlk groups
match  1a24342a4405  1b91548c6118  ub: Add pty accounting
match  d179c5cc3131  6a20b61b33af  ub: Add flock accounting
match  bf0897d2c7e2  10b0432c8c1f  ub: Show ub memory on sysrq mem show
match  4beeccbf2f98  dfa067053234  ub: Account file struct
match  93d24f744c55  23be241718fd  ub: Add address_space::dirtied_ub
match  0d1a228e90b7  111389a5b2a6  ub: Split meminfo_proc_show()
match  f7bf4d4975b7  626ff504de71  ve/proc: Port diff-ve-proc-add-buffers-field-to-meminfo
match  ee417430e88b  b3b54d9d8f55  ub: Show task ub info in /proc/[pid]/status etc
match  b182ee47d119  b1600b0fe343  ub: Account siginfo
match  d7c654b4dd06  8ee24d17524f  ub: Set ub0 to do softirq
match  2b0ceb715da7  522ee9c285bd  ub: Add dirty page accounting
match  494af05d15a0  78bd85664208  ub: Execute posix timers in ub0
match  de9dfda70e81  da834461f7c0  ub: Track task mm ub
match  04ab93706a45  cd2ad121d9cc  ubc: initial patch
match  2ba50f7ea8b6  459019bc0d71  ub/netfilter: account x_tables to ub
match  9485971baa75  8311be1deec6  mm/bc: Port diff-bc-shmem-fix-accounting-on-error-path
match  08b15b9b045b  9b3330f4d782  ub/memcg: introduce ub_total_pages
match  b2d04ed6b092  26bbeb4bf316  ub: ressurrect ioprio_set IOPRIO_WHO_UBC
match  d6868ee075aa  a41fda61f2de  ub: ressurrect iostat and ioprio reporting
match  dd1117e54b3d  1d722660825a  ub/fs: account writeback io
match  4cef08fc5283  5ce3947d83f6  ub/fs: resurrect sync accounting
match  39193508f75c  1a7d54dc32ea  ub: sync exec_ub on fork
match  e4de82527158  c602485a19a1  ubc: proc show stats in ve user ns
match  6a8c7f8c7185  0524e45bc142  ub/fs/writeback: per-CT fs writeback
match  398625eff058  6f5d8e6abe7d  ve/fs/sync: per containter sync and syncfs
match  ab0ce6d92ded  42601c1a0c0e  ub: show swapin/out in /proc/bc/<bc>/vmaux
match  da8f748bd21b  558b47c625ad  ub: add heuristic check for memory overcommit
match  40290532bd0a  5e9327c08d32  vznetstat: apply vznetstat patches from 2.6.32 as is
match  bd9ac67d963b  d59d82758e8c  vznetstat: Port diff-vznetstat-support-of-resetting-of-traffic-statistics-on-running-CTs
match  f69220f1c185  5842d6493482  vzlist: add vzlist from 2.6.32-x as is
match  e72717783215  e71ceea4fb08  dummy: add dummy modules for service vz init script
match  f16b8d9da1b7  fe9a21fcb038  ms/mm: save soft-dirty bits on swapped pages
match  08bd3dff3f81  86bd429ac384  ms/kmemcg: don't allocate extra memory for root memcg_cache_params
match  9a6ebe7b4d06  9c248b9533d4  ms/mm: softdirty: clear VM_SOFTDIRTY flag inside clear_refs_write() instead of clear_soft_dirty()
match  298d95209b95  edc2425cde72  ms/mm: softdirty: keep bit when zapping file pte
match  81c26cbc2f57  4ddb1fdf769c  rh/mm: Drop off Live Kernel Self Migration (TRACK_DIRTY_PAGES)
match  9d9af492a0cb  c7f8589bec15  mm: Add oom_group to set custom oom_score_adj
match  1e4da3faa66b  2b005d3d40e8  mm: Do not leak node data to CT's /proc/vmstat
match  948b77accb6d  18db20bbbeb5  mm/swap: comment about managing swap inside a CT
match  0f3a74d24001  248a9020e9b6  mm/swap: do not uncharge on reuse_swap_page
match  b16cd870f40e  3ef50214ace2  mm/fuse/oom: Show writeback_temp stats in oom message
match  4f283d2cb578  e24f107957c4  mm: add independed bio pool for swapout
match  1fae7e27c582  2916e042f503  mm: make task with TIF_MEMDIE die faster
match  340e38d62838  9f0ab4ce3a3a  ms/super: fix calculation of shrinkable objects for small numbers
match  deeadff80bd9  1fc9110b50ec  ms/dentry: move to per-sb LRU locks
match  547bf10a441e  f28701c031a8  ms/dcache: remove dentries from LRU before putting on dispose list
match  e08624e12078  86ad8e773fcf  ms/mm: new shrinker API
match  376df8e8d96a  04a06caddb40  ms/shrinker: convert superblock shrinkers to new API
match  226c489794ac  c1be6deb5ec0  ms/inode: convert inode lru list to generic lru list code.
match  6d5fec247ee6  34aff2b6a366  ms/inode: move inode to a different list inside lock
match  428e2070e572  2e64d06ec03c  ms/shrinker: add node awareness
match  f0acb58b5f17  3e9477b9a86b  ms/vmscan: per-node deferred work
match  46e31f4854fe  71a27bd2702a  ms/fs: convert fs shrinkers to new scan/count API
match  06d7ba8c92de  a7ac61a5ccfe  ms/drivers: convert shrinkers to new count/scan API
match  f95301c9a5c7  b50e308749a8  ms/hugepage: convert huge zero page shrinker to new shrinker API
match  d0d6d004ff0e  e2d09160afc6  ms/shrinker: convert remaining shrinkers to count/scan API
match  129026a056cd  17026c012180  md/raid5: use new shrinker API
match  b2f1eccf86b4  1f78cfbf886b  ms/shrinker: Kill old ->shrink API.
match  824073aac7a7  b294c5851bbc  ms/dcache: convert to use new lru list infrastructure
match  06041ea5fecd  6df288303dcc  ms/list_lru: remove special case function list_lru_dispose_all.
match  f7b22625833b  e50956a275cd  ms/fs: convert inode and dentry shrinking to be node aware
match  4db4e4c85665  912e34aecca3  mm: workingset: convert shrinker to count/scan API
match  9ba71ce36758  a793c12845ae  ms/list_lru: dynamically adjust node arrays
match  67b8fffdbf17  9ba95d0be605  ms/super: fix for destroy lrus
match  dbc3b8804d54  ad55e653b96c  ms/fs/super.c: fix lru_list leak for real
match  714854e4e292  5263162c9ee5  ms/vfs: fix dentry LRU list handling and nr_dentry_unused accounting
match  aaa96ac61622  7debd7d9d832  ms/memcg: use css_get() in sock_update_memcg()
match  b7be17597833  4394f6877412  ms/memcg: use css_get/put when charging/uncharging kmem
match  fb991decbaae  fd8cf8b3b959  ms/memcg: use css_get/put for swap memcg
match  5610f1dcfbd8  be3fe11c8089  ms/memcg: don't need to get a reference to the parent
match  509382db526d  8095b39388fc  ms/memcg: kill memcg refcnt
match  d47eb9dbde97  3fb3d58f90e1  ms/memcg: don't need to free memcg via RCU or workqueue
match  b05b9e49d500  c204a4e03b06  ms/memcg, kmem: use is_root_cache instead of hard code
match  5f8f06583dd8  04d73184207a  ms/slub: adjust memcg caches when creating cache alias
match  ced2bc616da2  91a015aec956  ms/slub: rework sysfs layout for memcg caches
match  dd9c4ae00e47  b914e4ccf5ad  ms/sl[au]b: charge slabs to kmemcg explicitly
match  f63ea2b99a1c  9866e787db84  ms/slob: Rework #ifdeffery in slab.h
match  de7d3f7e0e98  2b511f73cda2  ms/mm/sl[aou]b: Move kmallocXXX functions to common code
match  5616868e594e  579c1a42914c  ms/memcg, slab: merge memcg_{bind,release}_pages to memcg_{un}charge_slab
match  def58fc3184d  107212cdd2fb  ms/memcg: get rid of memcg_create_cache_name
match  9cf10eade870  d02b91b652ec  ms/memcg: memcg_kmem_create_cache: make memcg_name_buf statically allocated
match  995af333e745  e0916c22de82  ms/memcg: cleanup kmem cache creation/destruction functions naming
match  176e05336dec  af241b997616  ms/slab: delete cache from list after __kmem_cache_shutdown succeeds
match  6aa2e12f6a26  c8275ec55bc9  ms/mm: vmscan: call NUMA-unaware shrinkers irrespective of nodemask
match  2be1210aef53  728acae3bf3f  ms/mm: vmscan: respect NUMA policy mask when shrinking slab on direct reclaim
match  e599a86f2632  3056e0e12cee  ms/mm: vmscan: move call to shrink_slab() to shrink_zones()
match  906f9f9a7e42  f68b7c34c3c6  ms/mm: vmscan: remove shrink_control arg from do_try_to_free_pages()
match  6a7052aa2b48  5329121629d7  ms/memcg: move memcg_{alloc,free}_cache_params to slab_common.c
match  bb81241f60de  bb793945f1b2  ms/memcg: don't call memcg_update_all_caches if new cache id fits
match  e369f26aa65f  a8855987a823  ms/memcg: move memcg_update_cache_size to slab_common.c
match  e329996aa555  aaffed94622a  ms/memcg: zap memcg_can_account_kmem
match  1e7b75a2177d  c9e2d3efaf84  ms/mm/slab: Sharing s_next and s_stop between slab and slub
match  3c99a3efcd50  49e47a14eea6  ms/mm/slab: Give s_next and s_stop slab-specific names
match  72d275882e41  abf8479ee827  ms/slab: print slabinfo header in seq show
match  4c186fe6d7ad  72628059c780  ms/memcg: use generic slab iterators for showing slabinfo
match  5d4c95caf0a7  3672d0ece0c9  ms/memcg: fix possible use-after-free in memcg_kmem_get_cache()
match  db1483dba141  a9376cc1266b  ms/memcg: zap __memcg_{charge,uncharge}_slab
match  2726fb7365ac  8442505c8988  ms/memcg: zap memcg_name argument of memcg_create_kmem_cache
match  f03937c96ac0  9008a661d0d2  ms/slub: fix memcg_propagate_slab_attrs
match  7db20907ac43  e029faef5749  ms/slub: use sysfs'es release mechanism for kmem_cache
match  c0cbe604b386  f0ed6ef363cc  ms/memcg: zap memcg_slab_caches and memcg_slab_mutex
match  2662eb194f1b  bbd110e4eb83  ms/mm: vmscan: invoke slab shrinkers from shrink_zone()
match  92b9346948f7  55a9290974f0  ms/list_lru: introduce list_lru_shrink_{count,walk}
match  132c30e5f750  1b62570d3ce1  ms/fs: consolidate {nr,free}_cached_objects args in shrink_control
match  ca874ecc6a00  5b228016fecd  ms/vmscan: per memory cgroup slab shrinkers
match  80b63147c602  120cd468bdc2  ms/memcg: rename some cache id related variables
match  604fe05f5eb3  d47e3fa2aaae  ms/memcg: add rwsem to synchronize against memcg_caches arrays relocation
match  a0fc6f141e09  c5166924b8cd  ms/list_lru: get rid of ->active_nodes
match  d5822f8c085f  0ee988e37679  ms/list_lru: organize all list_lrus to list
match  e0ca769709ff  acdc3332c4c2  ms/list_lru: introduce per-memcg lists
match  85674c99087a  c0a7818222f2  ms/fs: make shrinker memcg aware
match  a5b00f2aaf39  b79d017ec2a2  ms/mm/slab_common: move kmem_cache definition to internal header
match  3ec8e402a565  116f2fcd7267  ms/slab: embed memcg_cache_params to kmem_cache
match  e1135445f88e  844eae545062  ms/slab: link memcg caches of the same kind into a list
match  ce65a81e7700  5ff0361db682  ms/memcg: free memcg_caches slot on css offline
match  3e6ca552d544  555e08f533a9  ms/list_lru: add helpers to isolate items
match  6615cf8ebefa  d0efb6c8f271  ms/memcg: reparent list_lrus and free kmemcg_id on css offline
match  3a79d71c23e9  94bbad7bf704  ms/slub: fix off by one in number of slab tests
match  5efe98fea897  c14cc757b4ec  ms/slub: never fail to shrink cache
match  84f5e43c752e  f3d2de9e10ae  ms/slub: make dead caches discard free slabs immediately
match  dd1b1b8d7226  e07d5e25b263  ms/memcg: port low limit
match  0d4f01a34b9a  aeef21c71b3a  ms/fs/ocfs2: copy fs uuid to superblock
match  be8782d6e06b  882b9687b91b  ms/cleancache: zap uuid arg of cleancache_init_shared_fs
match  b7d4d4eb45c9  bdcb58424462  ms/cleancache: forbid overriding cleancache_ops
match  9048bf54a554  c7d559b2786a  ms/cleancache: remove limit on the number of cleancache enabled filesystems
match  e57431ced2e7  6d7a26854b3e  mm/vmscan: Introduce PF_MEMCG_RECLAIM task flag to identify memcg reclaim.
match  197f6738d426  740d8f43d19b  mm: introduce transcendent file cache
match  6efa7be490e2  1dcfa7f43c62  memcg: allow to disable cleancache per memcg
match  d0c5fea9a9e0  17e8b094ab99  mm/frontswap: invalidate expired data on a dup-store failure
match  c605a9232588  a100daaf8bb0  mm: transcendent swap cache
match  4c78153ccb1c  7833c880dd48  meminfo: show size of tcache
match  be08a4f2bf40  60b6f9b15bd0  meminfo: show size of tswap
match  3e6854ea8d3e  17865f1d6169  fs/cleancache: fix data invalidation in the cleancache during direct_io
match  461ed253cf62  f19f519b6ba2  cleancache: avoid pointless cleancache_invalidate_inode() calls.
match  b74f1a9f0c46  6d1e129647de  ve/mm/cleancache: count only successful put in the cleancache_puts counter
match  c4bb7a3f6949  0037a48c6be5  tswap: Add optimization for zero-filled pages
match  531aa7269fd2  b177c922b0bc  ms/mm/vmscan.c: don't forget to free shrinker->nr_deferred
match  e0f2a937a007  a789fc51557b  mm/memcg: remove memcg from kmemcg_sharers list on css free
match  60c4f1f9c02a  b4e46b8ae4cf  ms/mm/memcg: do not use vmalloc for mem_cgroup allocations
match  33397ff415bc  3715a4d9b9f6  memcg: add oom_guarantee
match  f730b3e924f7  6b58026cea2b  memcg: count oom kills
match  44a46a27faa7  6f001eb3c187  ms/memcg: port memory.high
match  c006bc3ec757  c7a408f2301c  ms/memcg: do not call high reclaim if !__GFP_WAIT
match  016705acf9c9  3c2b2e457a96  ms/memcg: issue memory.high reclaim after refilling percpu stock
match  4feb2eaa4118  52c133330ce8  ms/headers: Support GCC 5
match  070251f8d192  fa15228cf961  mm: Port diff-mm-add-sysctl-vm.force_scan_thresh
match  d70b69ff89e7  fca6d4a98e32  mm/compaction: fix too_many_isolated()
match  eef6c7bd7cb3  aba3825d2430  ms/mm/vmscan: never isolate more pages than necessary
match  ac05974348a5  e6053f052c80  ms/mm/vmalloc: use wrapper function get_vm_area_size to caculate size of vm area
match  7b4b2daf0f20  43132d514f3b  ms/MIPS: Use NUMA_NO_NODE instead of -1 for node ID.
match  ee93c4af5551  ccddc49b6417  ms/mm: move slab related stuff from util.c to slab_common.c
match  8353a497db4e  1cbfd45b6962  ms/mm: slub: SLUB_DEBUG=n: use the same alloc/free hooks as for SLUB_DEBUG=y
match  879b54e72bed  70f03d8e3f6b  ms/kasan: add kernel address sanitizer infrastructure
match  f5b48ddc23dc  0834468afd44  ms/kasan: disable memory hotplug
ok     38019a18ba10  c6bcd41d7898  ms/x86_64: add KASan support
match  c58b2e36be97  c601008944c4  ms/mm: page_alloc: add kasan hooks on alloc and free paths
match  85ac24500b25  211d69caa9b4  ms/mm: slub: introduce virt_to_obj function
match  cf9afefe7f25  c4e7b3d2935b  ms/mm: slub: share object_err function
match  4d5465a41291  1175ad1413e3  ms/mm: slub: introduce metadata_access_enable()/metadata_access_disable()
match  c3ee1e14687d  954ab0efb795  ms/mm: slub: add kernel address sanitizer support for slub allocator
match  1a99c64632a5  dda00c42d050  ms/fs: dcache: manually unpoison dname after allocation to shut up kasan's reports
match  df7b6f8fe7ad  3a97ba9833ee  ms/kmemleak: disable kasan instrumentation for kmemleak
match  a488d6955aec  b9c17e7f194b  ms/lib: add kasan test module
match  06d45821cc4a  d9f01f9ac92d  ms/x86_64: kasan: add interceptors for memset/memmove/memcpy functions
match  0e92118a2604  bd54d9b7e036  ms/kasan: enable stack instrumentation
match  bfde319c13e5  4382d16835c9  ms/mm: vmalloc: add flag preventing guard hole allocation
match  3da94e0a924b  9b7300a7d4e5  ms/mm: vmalloc: pass additional vm_flags to __vmalloc_node_range()
match  0d7d3a67fad8  a44362deef5a  ms/kernel: add support for .init_array.* constructors
match  d2d6fdb15c9c  e4f6993b760d  ms/kasan: enable instrumentation of global variables
match  5bd561253696  540bc0addcd7  ms/kasan, module, vmalloc: rework shadow allocation for modules
match  47a1b8005efd  49312413b275  ms/kasan, module: move MODULE_ALIGN macro into <linux/moduleloader.h>
match  4aaa286af4b4  66eb7ca4670a  ms/mm, mempool: poison elements backed by slab allocator
match  d46cb9b94742  cb3aa87112de  ms/mm/mempool.c: kasan: poison mempool elements
match  7e064e03c27a  5a22c7d89bb6  ms/kasan: Makefile: shut up warnings if CONFIG_COMPILE_TEST=y
match  e65fdc3fbd69  59eb7b398a25  ms/x86/kasan: Fix KASAN shadow region page tables
match  443cf76d71d1  3dcc11c01c15  ms/x86/kasan: Flush TLBs after switching CR3
match  b0b66783c3c2  b5b587fea16c  ms/x86/kasan: Fix boot crash on AMD processors
match  c8ae89945c67  c81b3ca24112  ms/x86/kasan: Add message about KASAN being initialized
match  d06972cb9921  404657b7f2f5  config.OpenVZ: add KASan support for debug kernels
match  c5a58d3b89c3  6262b264a489  mm: vmscan: fix the page state calculation in too_many_isolated
match  806cc910d538  f58eceb034fa  mm: vmscan: fix do_try_to_free_pages() livelock
match  0c9f900c7021  88213a0aca2b  vmalloc: account to memcg/kmem
match  61ca0f934009  b6656fc28202  fs: account anon pipe buffers to memcg/kmem
match  75e2bade855b  9e42e99b5064  pipe: uncharge page on ->steal
match  c7df79eefe3a  050281558fae  gfp: inc __GFP_BITS_SHIFT
match  9be178957ee4  8c1b48d400e2  gfp: add __get_free_kmem_pages helper
match  031b673d2da5  7fcd5d6de305  arch: x86: charge page tables to memcg/kmem
match  d2b3819a28d8  6253973dfdb0  mm, slub, kasan: enable user tracking by default.
match  fa3deb904fec  b3de4f03b6a1  kasan: update reported bug types for not user nor kernel memory accesses
match  f8343de2b972  1ec0935d4b98  kasan: always taint kernel on report.
match  62a96aa02812  5131d9f0e23b  kasan: introduce single-shot mode and enable it by default
match  565f48f28369  8f7a22b7ee44  kexec, kasan: increase KEXEC_AUTO_RESERVED_SIZE under CONFIG_KASAN=y
match  d91195625770  9d1d4fdf4cfe  memcg: do not loop in mem_cgroup_reclaim if killed
match  e04c91ea303d  231a5878564a  ms/memcg, oom: lock mem_cgroup_print_oom_info
match  0e046ea9cecb  abf4ff7b6ee6  ms/memcg: change oom_info_lock to mutex
match  ee430fe50463  ee0864263a07  memcg: do not allow to disable oom from inside a container
match  c60a7faa28dd  5bcf2b36bed0  ms/x86/asm/entry: Create and use a 'TOP_OF_KERNEL_STACK_PADDING' macro
match  144aac7d52ad  0e8ed320a525  ms/x86/process: Add proper bound checks in 64bit get_wchan()
match  be138eb3c026  72b91fca13d8  ms/x86/process: Unify 32bit and 64bit implementations of get_wchan()
match  f0f9103c1067  aaaa3c066021  ms/x86/mm, kasan: Silence KASAN warnings in get_wchan()
match  d8c04ed05be0  b00b85936486  ms/memcg: add page_cgroup_ino helper
match  4457bc17cfbb  4ffb4f368786  ms/proc: add kpagecgroup file
match  829df352f942  6155d4ff471b  ms/mmu-notifier: add clear_young callback
match  3146dafaf317  41920debcc27  ve/mm,oom: print information about ve of killed task
match  893bc37f3bb2  9c324f35c39e  ms/include/linux/kmemleak.h: needs slab.h
match  e9ba7e3f36e3  58b00214bcdd  ms/kasan: fix kmemleak false-positive in kasan_module_alloc()
match  d981a481f05f  8861a0f089ac  ve/mm: allow container's root to ignore mlock limit
match  a1e7a66fdde8  23e324978c78  ve/mm/page-writeback: Introduce per-CT dirty memory limit
match  20a3ffdfb1d8  e104bab1b06d  ub/mm/writeback: do not check dirty limits for ub0
match  40355036518b  ac3ddb4c2543  memcg: never fail kmem allocations
match  9a53c7ab31c8  bc10a5297bc6  ms/vmscan: do not force-scan file lru if its absolute size is small
match  038a8e900b1b  f67c0a929041  memcg: ignore memory.low for cgroups w/o tasks
match  6b8390c0b22a  5cb772881f40  ms/slub: use lockdep_assert_held
match  f6cef9fd07c2  4a4d7b161513  ms/slub: do not assert not having lock in removing freed partial
match  56d6407d8117  bbf8030ac76c  ms/mm: slab: free kmem_cache_node after destroy sysfs file
match  98612fa25b9e  04cc28fe4071  mm: memcontrol: add swapin/out stats
match  0db0eb52dd35  6c67bbd1120d  mm/vmalloc: add v[mz]alloc_account helpers
match  e0b1331fa71a  10dd604ef647  arch: x86: fix accounting page tables to kmemcg
match  ac21d2f5edaa  8fff582346b1  mm: memcontrol: account shmem pages
match  c17eccf00eec  b06e0edc8b7f  ms/memcg: make mem_cgroup_read_{stat|event}() iterate possible cpus instead of online
match  63eea578286c  74f10f1b6a7f  rh/memcg: make mem_cgroup_sum_all_stat_events() iterate possible cpus instead of online
match  782e9bfd4d70  d2d13e42dfa8  ms/dcache: dentry_kill(): don't try to remove from shrink list
match  901199bebd87  bc783bff54f5  ms/dcache: don't remove from shrink list in select_collect()
match  64ab9628e3eb  9f1849871261  dcache: zap dentry_lru_del()
match  3e7609977f30  82f91dec678a  ve/mm: introduce min threshold for dcache
match  b1aebdef5858  bb987f48fff5  ms/dcache: don't need rcu in shrink_dentry_list()
match  164517dbf888  2f590078e48a  ms/dcache: lift the "already marked killed" case into shrink_dentry_list()
match  ee92c36af80c  c380e8e8ab85  kernel/sysrq: reset watchdog on all cpus while during sysrq-w
match  b6bd8b38c68a  4da8779220d2  ms/kernel/sysrq: restore touch_nmi_watchdog() in show_state_filter()
match  ea3866225d0e  3628f67b437c  ms/mm/kasan: print name of mem[set,cpy,move]() caller in report
match  7148ddcc24d2  17b21420c85b  ms/mm/kasan: add API to check memory regions
match  b085412efbc7  dbdc52aecf92  ms/x86/kasan: instrument user memory access API
match  ad2801f720ed  fac8a2b7f8ef  arch: x86: don't charge kernel page tables to kmemcg
match  635ef7b1ff43  4217b1e8c4d7  mm: memcontrol: drop memcg_kmem_commit_charge
match  dfa308652b46  67050297397a  mm: charge/uncharge kmemcg from generic page allocator paths
match  6cf02ffc1842  ebc0bdb4f497  ms/mm: memcontrol: reclaim when shrinking memory.high below usage
match  e808691824b4  5e5c137b7ee0  mm: vmscan: never wait on writeback pages
match  0cc5e065cca2  80c201b11ecb  config: disable numa balancing by default
match  d6083f8d9dc3  b8de35ca244d  mm: memcontrol: fix race between user memory reparent and charge
match  262bcac31489  4c1482e0d223  mm: default collapse huge pages if there's at least 1/4th ptes mapped
match  e23dfbcca488  79e8d8642293  mm/page_alloc: don't return freed pages from alloc_pages()
match  e0959b649bbe  ee1741ddf478  mm: memcontrol: add memory.numa_migrate file
match  12414bd14fdc  284edefdee4c  ms/mm: replace remap_file_pages() syscall with emulation
match  5345b69f6ca3  4da0a49950b9  ms/mm: drop support of non-linear mapping from unmap/zap codepath
match  a220af21bef1  d99f650149c8  ms/mm: drop support of non-linear mapping from fault codepath
match  4ffb6bde8367  4695a2251dec  ms/mm: drop vm_ops->remap_pages and generic_file_remap_pages() stub
match  6e3060e7cc38  a68370b5e499  ms/proc: drop handling non-linear mappings
match  6c1bf69ce316  25acf3de503c  ms/mm: remove rest usage of VM_NONLINEAR and pte_file()
match  137afbb489e4  87dd099d0aae  ms/mm: fix regression in remap_file_pages() emulation
match  e14f4ef5f72f  e9fe35e89db1  mm: memcontrol: fix race between kmem uncharge and charge reparenting
match  01a028518bf6  e6b7acd7c03d  ms/memcg: rework memcg_update_kmem_limit synchronization
match  5f0620cfe995  e63e334ec3ed  ms/mm/slub.c: list_lock may not be held in some circumstances
match  8f1d2c5933b1  441c3407fe35  ve/prctl_set_mm: allow to change mm content in ve
match  78fe93a24c4a  b53d208fe2f8  prctl: reduce requirements to exe link change
match  0ca74d0c14a8  eeee70a81479  prctl: remove one-shot limitation for changing exe link
match  381f8cbb90a4  722d73c0b08a  ms/shm: add memfd_create() syscall
match  47da5471b7fe  afbedecac8a3  ms/selftests: add memfd_create() + sealing tests
match  ff08eb09dbc1  26e413d77ca3  ms/selftests: add memfd/sealing page-pinning tests
match  5f05a4068c2c  60e0327897ca  ms/rmap: drop support of non-linear mappings
match  13649722e084  0032d8927e1d  ms/mm: replace vma->sharead.linear with vma->shared
match  725171dcf113  2b4a703da5f7  ms/vhost/net: extend device allocation to vmalloc
match  0074ad5bb276  a29ed7fa5c14  oom: do not dump all tasks info on each oom kill
match  b72fc86be827  c24fe93f9acd  ms/mm, oom: remove unnecessary exit_state check
match  f3d9bd5155b8  2b68171228d5  ms/oom: add helpers for setting and clearing TIF_MEMDIE
match  79564ab7c9d0  e42f6b39d918  ms/oom: thaw the OOM victim if it is frozen
match  86f6c8b4bd02  ef5145b0cd6b  ms/mm: oom_kill: clean up victim marking and exiting interfaces
match  92ed3f81baed  479e3c2d1416  exit: clear TIF_MEMDIE after exit_task_work
match  57b3f04cf6bc  ae4dfc6b90a3  memcg: add lock for protecting memcg->oom_notify list
match  d7179f3c568e  a89b30312cb8  oom: rework locking design
match  dcf20ad1eb46  a3ea004ffced  oom: introduce oom timeout
match  fd51319f4fc3  7eb37630b9dd  oom: drop OOM_SCAN_ABORT
match  2996f73d109a  41fb9b11b6ef  oom: rework logic behind memory.oom_guarantee
match  eb61510bdb19  9a79fbed087f  oom: pass points and overdraft to oom_kill_process
match  e4314043eb99  37baa622b92a  oom: resurrect berserker mode
match  7451712f4f25  b09fdc1608a3  ve/memcg: do not ignore oom_guarantee for unlimited cgroups
match  64b222f801dd  270e6af49529  oom: do not select child that has already been killed
match  eb4f2b0310b8  d159ba9d6d6e  mm: memcontrol: check more carefully if current is oom killed
match  87ff1cdf60a5  b8b4f13011a5  oom: do not ignore score of exiting tasks
match  1f3dd3a38e0e  9798957a5e19  oom: zap unused oom_scan_process_thread arguments
match  c70add0203eb  5490e6655836  oom: make berserker more aggressive
match  ac257063f802  891bacdc33d0  oom: fix NULL ptr deref on oom if memory cgroup is disabled
match  b82736ad2386  542d69b33ca1  ms/freezer: Do not freeze tasks killed by OOM killer
match  b242f72826a7  9c7b5c0ef8ad  kernel/freezer: don't freeze stopped & about to be ptraced task
match  499dcbac6eae  f51f0b1ff298  net/mm/tcp: Charge socket buffers into cg memory (v3)
match  52629c55cfa5  821bb4a83379  net: resurrect parent_cg_proto()
match  c4cf1feb1ab6  d2afb3adf28d  net/mm/tcp: Limit orphan sockets per-cg
match  96dd19155fd0  58c40763079e  net/mm/udp: Charge ingress buffers into cg memory
match  3b63db611428  b70fd0550e4f  mm/netlink: Make all in-cg memory be kmem accounted
match  93976d0ad180  27fd4b69115b  net/mm/packet: Pre-account maximum socket buffer into cg memory (v3)
match  78108bab717b  0b40d59bf1d7  memcg: add mem_cgroup_get/put helpers
match  47ad995b958b  05a40af1e7aa  mm: memcontrol: fix meminfo:SUnreclaim output in containers
match  a12b9ebf7b04  8bd20d2adb81  mm/memcontrol: res_counter -> page_counter transition
match  3f0fb835a31b  bb4ab7bfbeab  ms/mm: memcg: inline mem_cgroup_charge_common()
match  59c6f38b225a  d5627e68fef4  ms/mm: memcg: push !mm handling out to page cache charge function
match  3c660f732454  0663c163ffc8  ms/memcg: remove unnecessary !mm check from try_get_mem_cgroup_from_mm()
match  47e5bb67db1e  96230343dd44  ms/memcg: get_mem_cgroup_from_mm()
match  98f5faf2cef8  921c22d9c2fa  ms/memcg: do not replicate get_mem_cgroup_from_mm in __mem_cgroup_try_charge
match  ade4de369a07  f6245a23ed37  ms/memcg: sanitize __mem_cgroup_try_charge() call protocol
match  ab2d3825e7cf  c5d85e04a15a  ms/mm: memcontrol: fold mem_cgroup_do_charge()
match  0ad1f0491cc5  5db79c8a2ad3  ms/mm: memcontrol: rearrange charging fast path
match  1174278f0107  d2b57c4eb16a  ms/mm: memcontrol: reclaim at least once for __GFP_NORETRY
match  b01893bb719d  a3739975bcfc  ms/mm: huge_memory: use GFP_TRANSHUGE when charging huge pages
match  38d65fe9ec39  9ec56bea65f0  ms/mm: memcontrol: retry reclaim for oom-disabled and __GFP_NOFAIL charges
match  a5be5eea9c76  6529c3a9b6a5  ms/mm: memcontrol: remove explicit OOM parameter in charge path
match  65180dc541e2  4b0b3da9298f  ms/mm: memcontrol: simplify move precharge function
match  1e49ea259ef2  61de8cd8a3ed  ms/mm: memcontrol: catch root bypass in move precharge
match  cde4fd258e14  e4fc473f0f9f  ms/mm: memcontrol: remove ordering between pc->mem_cgroup and PageCgroupUsed
match  00e2fa8390b7  a10f7af1c79f  ms/mm: memcontrol: rewrite charge API
match  05bcc168b431  973d0568c295  ms/mm: memcontrol: rewrite uncharge API
match  7c809766bfe0  52dab5496098  ms/mm: memcontrol: use page lists for uncharge batching
match  8759facdbf21  25f421dc6516  ms/userns, pidns: Force thread group sharing, not signal handler sharing.
match  1d9a8d7efafd  56be94219e69  ms/mm: memcontrol: revert use of root_mem_cgroup res_counter
match  51fb718b06b5  43430766dc36  ms/mm: memcontrol: teach uncharge_list to deal with kmem pages
match  a3340c7288ec  769b413546e4  ms/mm: memcontrol: only mark charged pages with PageKmemcg
match  c41f32a6a7c1  7bd2ed802d49  mm/memcontrol: fix shmem accounting
match  1fd08e64665f  1f9102f845ed  ms/mm, oom: remove task_lock protecting comm printing
match  817fb75028f5  15ee1d9c9614  ms/mm: memcg: fix race condition between memcg teardown and swapin
match  c3c2ebcaa0b1  8abda20f531e  mm/memcg: fix kmem pages uncharging uncharge_batch()
match  41a2671636ce  fd5105a5d691  mm/memcg: make __memcg_activate_kmem() to actually activate kmem
match  756d5f1af5b3  2fdd42c6b881  ve/memcg: enable kmem accounting for all cgroups
match  1ffb1f6cfdaa  8264be4c83e3  mm/memcg: don't release memcg->css too early
match  ca5d18cca0ff  0038e50e2d7c  ms/mm/memcontrol.c: fix order calculation in try_charge()
match  97586d9ee52c  a8b680f20410  mm: fix false positive WARN on fs reenterence
match  eb12dfcf8581  054faa3e8a71  ms/mm: prevent KASAN false positives in kmemleak
match  ecf73c5870c3  54292d23dd54  mm/memcg, ub: fix overflow in mem_cgroup_apply_beancounter()
match  089baf230fdc  49ce0b0840c5  ms/mm/memcontrol.c: fix the margin computation in mem_cgroup_margin()
match  030f9972dc6c  2f714ba75aa1  ms/mm/list_lru.c: avoid error-path NULL pointer deref
match  a84b4c0cdea8  86307514a46a  ms/memcg: make mem_cgroup_read_stat() unsigned
match  32392f9b172f  c2848b7d1628  ms/mm: larger stack guard gap, between vmas
match  d022afe7c621  6fd5fad0bf52  ms/mm: Follow-up for "larger stack guard gap, between vmas"
match  c19a5ce03321  9d908441cf27  ms/vmscan: fix increasing nr_isolated incurred by putback unevictable pages
match  43980a8c5baf  cc5a11973ffa  ms/mm: vmscan: reduce size of inactive file list
match  8984b5fcc58e  c1584111eba8  ms/mm: vmscan: fix IO/refault regression in cache workingset transition
match  eccd25f72fca  30ab21a59e35  mm/memcg: reclaim memory on reaching kmem limit.
match  e30d2389ad5d  ffedef93a22e  ms/x86, efi, kasan: #undef memset/memcpy/memmove per arch
match  735c96f40256  141d150f000f  ms/mm: use sc->priority for slab shrink targets
match  cfc7b3a02c89  9f98dafd246c  mm/memcg: reclaim only kmem if kmem limit reached
match  4cae3e224157  68476df38c03  ms/mm/huge_memory.c: respect FOLL_FORCE/FOLL_COW for thp
match  0373edf07189  42a878473cb7  mm: Add rcu field to struct list_lru_memcg
match  62c69d7e5507  c867655cdfc9  mm: Make list_lru_node::memcg_lrus RCU protected
match  e54eed1f5dfc  eed56ac51e2d  mm: Count list_lru_one::nr_items lockless
match  bbcf614b067b  78f4d785756b  mm/memcg: sleep if mem_cgroup_force_empty_list() stumped on busy page
match  9a40e32cccf5  72bac5abca7b  kasan: show gcc version requirements in Kconfig and Documentation
match  453e0b7059d5  ab3839e7f6bf  Documentation: kasan: fix a typo
match  3fca98c6fed8  06acd1d258e6  kasan: various fixes in documentation
match  a7c5696df288  da6c247e02d2  mm, kasan: SLAB support
match  9d8546a9f996  9ebc503132b0  mm/mempool: avoid KASAN marking mempool poison checks as use-after-free
match  638ea9e0abee  e0669ddaebe0  mm, kasan: add GFP flags to KASAN API
match  be36e8dfd772  99f42c86128d  arch, ftrace: for KASAN put hard/soft IRQ entries into separate sections
match  13b09998257c  fb1d3ab515b7  mm, kasan: stackdepot implementation. Enable stackdepot for SLAB
match  0dd9e10954f1  6b2a32b6cb3b  mm, kasan: fix compilation for CONFIG_SLAB
match  64e4502ff453  c1ab24a6bc63  mm: kasan: initial memory quarantine implementation
match  9f0efa831325  6a42a735b4fb  lib/stackdepot.c: allow the stack trace hash to be zero
match  44f0489aa5dc  14d391fb97e6  lib/stackdepot: avoid to return 0 handle
match  13781a7f86a9  8eed994e9bdd  mm, kasan: don't call kasan_krealloc() from ksize().
match  ced06a65ffd0  5198ffa46263  kasan: add newline to messages
match  f57bb591c531  5ee1e1dd7789  kasan/quarantine: fix bugs on qlist_move_cache()
match  52d2ff5413c6  5dceace721b7  mm, kasan: switch SLUB to stackdepot, enable memory quarantine for SLUB
match  58e1c7d87c62  16ec94ab8219  lib/stackdepot.c: use __GFP_NOWARN for stack allocations
match  b94a5f4186f0  2c1096817941  mm/kasan: fix corruptions and false positive reports
match  981d2aa2cf49  647c1157feec  mm/kasan, slub: don't disable interrupts when object leaves quarantine
match  bf695e86be5c  e55dd6250a02  mm/kasan: get rid of ->alloc_size in struct kasan_alloc_meta
match  b8d8578021f7  57be382792de  mm/kasan: get rid of ->state in struct kasan_alloc_meta
match  7028fc9211c0  5ca4e98fe911  kasan: improve double-free reports
match  7bde2d47ecea  e18b870a269c  kasan: avoid overflowing quarantine size on low memory systems
match  03cb577b40df  ab387454822d  x86, kasan, ftrace: Put APIC interrupt handlers into .irqentry.text
match  4bf76ce4d92d  d465eb6d6934  kasan: remove the unnecessary WARN_ONCE from quarantine.c
match  9f5a332b7a43  81dcb3a8cd05  ms/mm/mempolicy: Add cond_resched() in queue_pages_pte_range()
match  14b4d121cf8d  3a401f240c26  kasan: update kasan_global for gcc 7
match  bf78e1cbe514  2a7b38e223ec  kasan: eliminate long stalls during quarantine reduction
match  468412f0eae8  4d2f05004c17  kasan: drain quarantine of memcg slab objects
match  6240b87828bb  281fed44783d  kasan: fix races in quarantine_remove_cache()
match  faf4652aaf19  78a4b77f712b  ms/mm: mempool: kasan: don't poot mempool objects in quarantine
match  1e2db0c70b6d  e8e4ce28154c  ms/kasan: support panic_on_warn
match  dd1404bd30d7  8d95efc96928  mm: issue panic() on bad page/pte bugs if panic_on_warn is set
match  ecd1c31c1a8b  6a243b592a19  mm/memcg: Don't enable interrupts too soon.
match  4644f0f3b866  dea77a6488f6  memcg: charge kmem allocations accounted to UBC in PCS6 to memcg
match  6739a9ddf8d9  bb0ef6c35eb8  ms/x86/coredump: use pr_reg size, rather that TIF_IA32 flag
match  5f9cf178d0f1  1e87d54a56ab  ms/x86/ptrace: down with test_thread_flag(TIF_IA32)
match  c8aa40fb0ef3  904bcc1c42c9  ms/x86/signal: add SA_{X32,IA32}_ABI sa_flags
match  06a9ddc42ef1  469080d11b55  ms/x86/signal: Remove bogus user_64bit_mode() check from sigaction_compat_abi()
match  985e16fd2846  33faeb7a2ea0  ms/x86/coredump: Always use user_regs_struct for compat_elf_gregset_t
match  8affcf646034  5f903b2e4d30  ve/audit: allow changing loginuid for VE root
match  fe3532f0b2be  459aa1a6ac17  ms/audit: fix a double fetch in audit_log_single_execve_arg()
match  1b07279e10e3  2dd725783aa8  ve/tty: Disable /dev/console in VE environment
match  c6a455ae063f  c22b1d7f3c6e  ve/tty: vzcon -- Add container dummy console support
match  7009fa172d80  839af980031d  ve/tty: console -- Enhance container console to support per VE ops
match  264d45e99e5d  d5e6f8325fa4  ve/tty: vt -- Add dummy stubs
match  4cc943da99f3  90c84fc9c458  ve/vt: Drop debug vars from console code
match  8b2e03456f42  1326fb6cccb4  ve/tty: vt -- Fix nil dereference due to race
match  a55d31e6bdb6  e22266bf62d6  ve/tty: vt -- Implement per VE support for console and terminals
match  6b84b385dab1  440a6855ba87  ve/tty: Use ve_capable in vhangup syscall
match  083e9c79054d  c26d73ceddc7  ve/vtty: Make indices to match pcs6 scheme
match  21c05ac33f2d  9849d94def2f  ve/vtty: Don't zap termios fields on slave peer
match  3a94629150cf  b7ea7179b7a8  ve/vtty: n_tty -- Allow write on sole slave vtty peer
match  de0b965c2f83  b58a8a79dd66  ve/vtty: Don't close unread master peer if slave is nonzero
match  4da7ccfdedd7  42924e1c2fa2  ve/tty: vtty -- Drop TTY_PINNED_BY_OTHER bit
match  dc906943d90d  17a7631d6a92  ve/vtty: Don't free console mapping until no clients left
match  bc3521a81b5c  5644a8c9a836  ms/tty: Fix unsafe ldisc reference via ioctl(TIOCGETD)
match  607f2343669a  aa65794162cb  ms/TTY: n_hdlc, fix lockdep false positive
match  63dd6f1e2954  b150b75bb05e  ms/tty: n_hdlc: get rid of racy n_hdlc.tbuf
match  c190d1b53d1a  4c363c6f8a61  ve/kmod: Port autoloading from CT
match  16560dcb4652  24d38dd30c77  ve/kmod: Add rules for autoloading (new) nf_tables
match  0e2ced1cc4d0  7cdfc10d996d  ve/kmod: Add rules for new {ip, ip6, x}table modules
match  5a9e0a4e210c  59f00529357d  ve/kmod: allow to autoload nf_log_ipv[46]
match  6c4213d8e6da  c69532f4fba3  ve/kmod: list of allowed to autoload in CT modules
match  b8f09224927a  503cdd4a5b78  ve/kmod: Add modules to whitelist for c/r sake
match  f0ff1c5a420d  44357342db6e  ve/kmod: Allow netfilter conntrack inside VE
match  1680d7c21b39  847b47f939e3  FIXME: to drop: ve/kernel/taint: Port diff-taint-message-enhanced-with-dump
match  b825dc82f757  8ddc4434fede  ms/kmod: remove false positive warning "waiting module removal not supported: please upgrade"
match  b24dff7820e3  8b06e705b893  ve/kmod/whitelist: allow overlay fs module autoloading
match  042d26b56e7b  55ee8ffabbc4  ve/kmod/whitelist: allow dummy module autoloading
match  a08b3f2ab8fb  08362f126a5a  ve/kmod/ebtable: allow to autoload ebtable_* modules from inside a CT
match  fc9c9bc172d3  74d3130c47f0  ve/net/vxlan: enable support and autoload in a container
match  2feefececd0d  c33cf605931c  ve/net/ipvs: allow IPVS modules autoload in CT
match  50156008522e  7f5feb1e11f9  ve/netlink: allow IPVS netlink messages to CT init userns
match  3dbf14641ca3  a257911afbd3  ve/netfilter/ipset: allow modules autoload
match  9e37516482d3  0ef00d0c10b9  ve/net/ip6tables: fix autoloading of the ip6table_raw module from CT
match  b419bf6421cf  619c4ddeff5c  ve/modules: allow NFS modules autoload in Containers
match  21e7ac94d56b  1e6d39cfa333  ms/netfilter: ipset: fix ip_set_list allocation failure
match  be8eac7da3d1  14f9351a2143  ms/netfilter: account ebt_table_info to kmemcg
match  dc2fa75c40df  b4dcb2a5a9f2  ms/net: sock: move ->sk_shutdown out of bitfields
match  e91d09b2f406  374f3246df75  net/af_unix: charge buffers to kmemcg
match  2c197deb3f8b  f005f53dbfce  ms/af_unix: move unix_mknod() out of bindlock
match  ba991c8164d7  ed59e281e14e  ms/af_packet: remove a stray tab in packet_set_ring()
match  ec8ccf8e70ce  762a49db0ae0  net: packet: rework rx/tx ring pages accounting
match  ac82dc22eacc  b108916f61d0  ve/netns: limit number of network namespaces per container
match  764d692d4f7e  11a8ad4801f5  ve/pid: Export kernel.pid_max via ve cgroup
match  7a84d09fd7ce  c9c8c9616268  net: Add ipv6 statistics cpu notifier
match  2d02daf68e57  04544e90564c  net: Allow pass cpu mask into snmp_fold_field{, 64}()
match  34243aee217f  96492f84a2a7  net: Iterate only online cpus in __snmp6_fill_stats64()
match  34bfef0a2195  cfc3cdaac959  rh/net: add recursion limit to GRO
match  2ee866f9e1ff  215e26d4cb6b  ms/net: ip, diag -- Add diag interface for raw sockets
match  5659e1272b09  a6ed9d474977  ms/net: ip, diag: include net/inet_sock.h
match  e84b2433b4a2  9eff2f14084e  ms/net: ip, raw_diag -- Use jump for exiting from nested loop
match  97f757799e58  c9c7de0d7bd9  ms/ipv6: add IPV6_HDRINCL option for raw sockets
match  3b13689e10fe  0064cb55683e  ms/net: raw sockets diag interface compilation fix
match  45f3477b1cad  19815c5e4aa6  ms/net: sysctl: fix a kmemleak warning
match  fce6a35099f9  78f5a39903d6  config.OpenVZ: add and enable INET_RAW_DIAG - RAW: socket monitoring interface
match  62a31a9edb1d  d785870640ad  ms/net: prevent of emerging cross-namespace symlinks
match  7a0f9833ce0c  e8012dea7eb2  ms/net: fix creation adjacent device symlinks
match  b082644c92bc  de5637116ee9  ms/neigh: disallow un-init_net to change thresh of neigh
match  ae5c33dcb371  5a883de7c8c7  ms/udp: must lock the socket in udp_disconnect()
match  3980005e463a  d0740de3c98d  tcp: sendpage should not handle Slab objects
match  00458f29da15  1018e854fba4  net: fix false-positive deadlock detection for sk_receive_queue lock
match  08bac9b3c9ef  c4bef53748f1  ipv6/sit: account and don't WARN on ip_tunnel_prl structs allocation
match  125d5bad2b97  e4d97a419d9f  core: Add glob_kstat, percpu kstat and account mm stat
match  6d76d2504acc  4235a4b1679f  sched: Account task_group::cpustat,taskstats,avenrun
match  23774558b8bd  e0693dc01725  ve/mm/kstat: Port diff-ve-kstat-disable-interrupts-around-seqcount-write-lock
match  5e9f4754eb6e  bd3fe93a2f9b  vzstat: initial patch
match  25f475852995  e34b3baaad06  block/ploop: export put_io_context_active()
match  bc7853ed6a9a  0d7e65a3735b  ext4/ploop: ask ploop about ENOSPC condition
match  95627854974c  ccf936c76c1d  blk/ploop: Add BLKPG_GET_PARTITION operation
match  8397c13d754a  4f7bef7c2a13  fs/ext3: check for CAP_SYS_ADMIN, not CAP_SYS_RESOURCE in ext3_ioctl()
match  9e68d0df2090  719d1e4bfbcf  fs/ext3: add_dirent_to_buf() should return an error, not always 0
match  cc3bfd5f9d57  2fc3aab669f1  fs/ext4: ext4_ioctl should check for CAP_SYS_ADMIN, not for CAP_SYS_RESOURCE
match  40ee7e43a18b  63088c140ba9  ext4: Teach the fs where the balloon inode is
match  36a7ba870f62  4f0cc8d1a891  ext4: Teach statfs to report reduced disk usage
match  955e6427f4cf  f25aba054902  ext4: Don't show the active balloon to user
match  87b593781fce  7c9dc0ddefb2  ext4: Provide a balloon nipple for management
match  ead457c2dd24  edc85c38016c  ext4: quarantee rename atomic behavior
match  48df0479be4b  2ce5b02f1f34  ext4: make data=writeback mode safe
match  d9c1b7dbbdfb  ea0990057816  ext4: pfcache_csum mount option
match  d7ab90af2577  d1d606f4a58f  jbd2: make shure that we do not miss aborted state
match  b169db72575c  bcca76b377ac  ext4: Fix error handling after filesystem abort
match  419edbb6b293  0e36de6045ec  ext4: update defragmentation codebase
match  5dc432cfa637  77fe0282f388  ms/ext4: use ext4_ext_next_allocated_block instead of mext_next_extent
match  5bc914282d35  6213fbd7d874  ext4: fallocate mode - convert and extend
match  ea50b537b391  6bd90065743a  jbd2: raid amnesia protection for the journal
match  4a78b265e8c6  8cc701d4d6f0  ms/vfs: add support for a lazytime mount option
match  a90c90900d74  9dd328dc284c  ms/vfs: add find_inode_nowait() function
match  f2249fadf9b6  f14602f5f972  ms/fs: make sure the timestamps for lazytime inodes eventually get written
match  3ba72d663660  e31d2cd01d1a  ms/fs: add dirtytime_expire_seconds sysctl
match  c413e3c460c8  040676a145c4  ext4: fix race aio-dio vs freeze_fs
match  2a5203c58578  7615c0d99512  ve/ext4: treat panic_on_errors as remount-ro_on_errors in CTs
match  c8fb75075654  8d3584d3ce59  ms/ext4: improve ext4lazyinit scalability
match  33af4615d5a5  bebc14b2d30f  ext4: Discard preallocated block before swap_extents
match  03da558f6ced  c4b64c4da4ef  ext4: add generic uevent infrastructure
match  7beda2926394  12f6c8b627b3  ve/fs/ext4: allow container's root to change immutable attribute.
match  69f1b958b462  3bf4ee69ce68  ext4: send abort uevent on ext4 journal abort
match  809e65e0d53d  e428484dc440  ms/ext4: improve extents status tree trace point
match  568b1cfc51ad  e3f6d3a66ff6  ve/xfs: add missing ub_io_account_dirty in set_page_dirty
match  9926b4f2730b  f696ad3b9dd7  ext4: ext4_fill_super() should handle register_shriker() errors
match  b63576cb141a  101723a48826  ms/xfs: convert dquot cache lru to list_lru
match  cd1c4b862837  3d08418a721e  ms/xfs: fix dquot isolation hang
match  3372b6461c94  8a7d4731dfc4  ms/xfs_qm: lost hunk from "ms/list_lru: introduce list_lru_shrink_{count,walk}"
match  54ea84558384  ab73196e5527  ms/xfs_qm: lost hunk from "ms/list_lru: add helpers to isolate items"
match  47b747a1bbd8  6fe6f5c2ea4a  Revert: [fs] xfs: rework buffer dispose list tracking
match  3c9027cd9404  ddce742aefce  ms/xfs: convert buftarg LRU to generic code
match  fc7492fba158  9b3e3e16a490  ms/xfs-convert-buftarg-lru-to-generic-code-fix
match  c33a07ce9b32  aace09a24121  ms/xfs: rework buffer dispose list tracking
match  a98a3d1ed372  ce5c9cf7295e  xfs: allow to mount xfs fs inside a Container
match  a5f87c535d7f  a8936832d334  ms/vfs: reinitialize error for resetart in prepend_path as in ms
match  bb626093685a  89ef6f999da3  ms/vfs: Remove second variable named error in __dentry_path
match  109606d73284  27060dd86611  pfcache: add generic mapping peers
match  4512ef69070b  34c68490d82e  pfcache: add hashed peers for ext4
match  8710bc7ae61a  aee4ed33a9b4  pfcache: iterate peer list only for shared pages
match  89b57154a2a1  29abaa570482  ext4: add mfsync support
match  a8469d3ee981  5c197edf53a6  ext4: Add ioctl EXT4_IOC_SET_RSV_BLOCKS V2
match  5562026db3b9  4741a01a302d  ms/ext4: add optimization for the lazytime mount option
match  2375833c6a1e  f576c6638361  ms/ext4: fix lazytime optimization
match  71cee950c9e4  b90d00e8239c  pfcache/ext4: drop pfcache csum on fallocate
match  f1cf54a6cc82  d247584be940  pfcache: do not account peer files to memcg
match  e03f374ad12d  a106432f4568  rh/ext4: release leaked posix acl in ext4_acl_chmod
match  934a454fb8ee  fb7a8380c644  rh/ext4: release leaked posix acl in ext4_xattr_set_acl
match  b769e20e4790  5f5f4f01b8f4  ext4: don't iterate over sbi->s_es_list more than the number of elements
match  3c763b7abb47  c3d13534fc63  ve/xattr: prohibit getxattr/setxattr trusted.pfcache
match  e25954b820af  b781ae61e444  ve/xattr: allow to set trusted.xxx for container admin
match  f7cf7a53ac8b  73f52ca5dad5  pfcache: hide trusted.pfcache from listxattr
match  ad73b0c347bb  135faeaf8efb  pfcache/ub: account pfcache peer files in ub0
match  1d31d4552b57  733b4390648a  pfcache/fork: don't inherit vm_private_data on fork
match  9770ea52a6ab  784a27ef36d5  mm/iolimits: fix double I/O accounting for iolimits
match  94b23e76c334  0bd5f44a2947  sched/vziolimit: Port diff-fairsched-do-not-account-iothrottled-tasks-in-loadavg-core
match  b7837f9ceed2  48c112a2f34f  vziolimit: Add vziolimit driver
match  a00b21633419  8d1279c53476  vziolimit: add bc cgroup control
match  79dc3feb484e  565703036220  vziolimit: port diff-ubc-iostat-wire-vziolimit-into-deadline-io_scheduler
match  b8319e8e94ad  2afb94137c21  cfq/vziolimits: add virtinfo hook for vziolimits
match  7940b1846f73  eaf11c541d5a  config.OpenVZ: add "vziolimit" module
match  aa8aa9167b6d  7472290745d2  vziolimit/fs/ext4: allow to throttle due to iolimit while reading directory blocks
match  ce2d4c3fcf6e  0260c301e8e5  memcg/bc: account dcache size
match  c96ffccc6b8a  e8960f8478f3  mm: memcontrol: add stats for reclaimable and unreclaimable stats
match  2abe6c0fede6  ce3cd0ee46eb  mm/memcg: improve mem_cgroup_dcache_is_low() performance.
match  bb29deba5a84  2fad8516ee84  mm/memcg: get precise stat2 counters for statistics.
match  c3c44f0609e7  8ee4fedf62e4  arch: x86: perf_event_intel: do not taint kernel when irq loop is stuck
match  32216df552f7  18e96b788414  ve/vdso: x86-64 -- Implement kernel version virtualization
match  7281aa3d7f7c  0d888fcf324f  ve/vdso: x86-32 -- Implement kernel version virtualization
match  a2305036a330  923ae8e7e8d4  ve/vdso: x86 -- Eliminate race in vdso allocation, v2
match  8edf5a856089  55b8d035ce3a  ve/vdso: x86 -- Disable virtualization in native x86-32 mode
match  8cf804d8a3bf  e2b78f05f7f9  x86/vdso: Fix build failure with GCC5
match  872cf6cf5035  ef6585dd2d00  x86/arch_prctl/vdso: add ARCH_MAP_VDSO_*
match  0e16cce8c677  e67f50eb3561  x86/vdso/prctl: fail if vdso present in ARCH_MAP_VDSO_32
match  05b84f8b551c  de3428deb684  x86/vdso/prctl: Return size of vdso blob for ARCH_MAP_VDSO_32
match  79c2b58ff8c6  d36bb1df86b6  ve/vdso: virtualized monotonic gettime through vdso
match  2cf5282fbb4c  0c0b9d0d05de  x86/vdso: Add 64-bit vdso map API
match  16f297cf9829  4ce73eb23808  x86/mm: Support mremap()'ing vdso vma
match  f960ef42cca9  121f88180646  ms/x86: standardize mmap_rnd() usage
match  29f7cf146417  bfc9a5d955de  ms/x86/mm: Introduce arch_rnd() to compute 32/64 mmap random base
match  ddebf0e36b6c  daf643cdc75a  ms/x86/mm: Add task_size parameter to mmap_base()
match  24cb8f49edf5  fdc0983e6a59  ms/x86/mm: Introduce mmap_compat_base() for 32-bit mmap()
match  fee8b47e5125  2720b497fb05  ms/x86/mm: Make mmap(MAP_32BIT) work correctly
match  bdf27921b797  154587f07c29  ms/x86/hugetlb: Adjust to the new native/compat mmap bases
match  ac4ccd187061  90983b1c37b4  ms/x86/mm: Make in_compat_syscall() work during exec
match  b5a1c73b16b4  c72c195520ee  ms/mm: introduce kv[mz]alloc helpers
match  c2d659774e25  875ed25c9f70  ms/mm: memcontrol: use vmalloc fallback for large kmem memcg arrays
match  a682ab28090b  aee1fe27956c  mm/memcg: limit page cache in memcg hack
match  37afabe8b717  e0b1f227140d  ms/mm, thp: Do not make page table dirty unconditionally in touch_p[mu]d()
match  a9094ff6a400  c19509b7fb75  ms/ipc/shm: handle removed segments gracefully in shm_mmap()
match  c1e44e04f4a2  33f8f797f21b  ms/asm-generic: drop unused pte_file* helpers
match  84ded83d4f1e  bff2a59d0253  ms/x86: drop _PAGE_FILE and pte_file()-related helpers
ok     d2147f98ec5b  a8b991bab865  arch/x86: introduce cpuid override
match  5b3770d92eb5  27e6f62b06e3  arch/x86: only enable cpuid faulting for containers
match  8c9ec3480769  c04fc92ac369  arch/x86: disable cpuid faulting on reboot and cpu offline
match  d905e145ebed  9cd97807c854  x86: cpuinfo: Refactor c_start()
match  5748ffebb619  1eb39249e737  x86: Show vcpu cpuflags in cpuinfo
match  5cd7985a5a85  c36a2c8f41ed  ms/seccomp: add ptrace options for suspend/resume
match  3c9c737784ed  a4fa07ecd69d  ms/seccomp, ptrace: add support for dumping seccomp filters
match  2bca4fc9bb2d  d3c8ec9c1e16  ve/seccomp, ptrace: Save original BPF program when setting the filer
match  eb410ec6a201  3efa076085c6  config.OpenVZ: enable CONFIG_LOCALVERSION_AUTO
match  1b96d1df6e2d  15659be01b33  config.OpenVZ: enable fencing watchdog for HA cluster support
match  9dc0dfe83068  445efe2ed531  x86: "pages zeroing on free" option introduced
match  94dc3edfaa0d  dd8f4b5f15ed  config.OpenVZ: enable NBD module
match  53c078862e8f  cce4aae67b7f  config.OpenVZ.debug: Enable audit subsystem in config"
match  25b79cf0d679  3a0cc1d2cdd1  config.OpenVZ: enable TAP accounting
match  3668af355fa2  3cb586f3298c  config.OpenVZ: disable RH_KABI_SIZE_ALIGN_CHECKS
match  b17074d97c5b  1f139bfd0891  config.OpenVZ.debug: enable panic-on-oops in debug kernel
match  118d7cab844a  d310d117909d  drivers/bnx2x: Limit setting of the max mtu
match  145a55618487  39bf58558f25  drivers/target/mhvtl: introduce a virtual tape module
match  af89a0fe7d6d  1620580ce8ab  config.OpenVZ: add mhvtl virtual tape module
match  25032c4d8b54  fd0ff43aec22  config.OpenVZ: add more options (disabled) which depend on EXPERT
match  5018675ec462  e309a27dca74  config-vz: add DISABLE_DEV_COREDUMP=n option
match  6a2ffacf7dc0  3d91793f4dfa  config.OpenVZ: increase default value for vm.mmap_min_addr
match  55b4bf0e06d6  9dd42cedfda3  config: Enable CONFIG_TCM_QLA2XXX module
match  fcab8dbf11d5  54ecffbf6dff  Kconfig.openvz: force CGROUP_PERF if compiling VZ Containers code
match  969380e55028  b4a274d1d155  rh/drm: fix compilation
match  37638bfc65b6  731a4ab2bf9f  scsi/debug: make scsi error loud
match  39eef71da3ba  ad3fcef15836  debug/scsi: debug Scsi_Host recovery
match  0a0e20a7b04b  e7589f15165a  scsi: fix the issue that iscsi_if_rx doesn't parse nlmsg properly
match  205235ebca9b  9cc3bd77b933  ms/mvsas: fix misleading indentation
match  c37f2f5f4b70  31cc2831a4a3  scsi: rollback to reset request in a request timer handler
match  c20540c9b17d  74d0b8cef44f  ms/scsi: libsas: fix error when getting phy events
match  6c4bfd8fd422  8c33d4adb64e  trace: add debug prints to nail down busyloop in tracing_read_pipe
match  cfa23b26b094  9a4a85477832  irq: make definition of irq_set_vcpu_affinity() static
match  06e30e9933b6  20cab7e1382e  wait: Teach do_wait() to know entered tasks
match  cad91ce98ca0  f5f50d998099  kernel: call task_work_run() before exit_task_namespaces()
match  f0c7398fc23b  e5acbf98229b  license: put correct copyrights into file headers
match  d5da8cdd67d2  4211a98fbfab  modules: set module author for Virtuozzo modules
ok     b2629a6db987  d6f18ad791fe  ms/kernel: add kcov code coverage
match  3fe8895a6e68  b3d4f05ad1d1  ms/kcov: don't trace the code coverage code
match  7c61fbc4a2bc  1844dcbc87c3  ms/kcov: don't profile branches in kcov
match  20a9bb99b3a7  a68479474660  ms/kcov: properly check if we are in an interrupt
match  97e8e86a0b8f  d9f6ab39a883  config.OpenVZ: add kcov code coverage
match  6bd32960d189  266c0d7ac881  kcov: do not instrument lib/stackdepot.c
match  7d84f29f6f84  318a08912e6b  lib/stackdepot.c: bump stackdepot capacity from 16MB to 128MB
match  b0179c8b133d  5f5c3926bca8  sunrpc: add "kill-tasks" proc entry
match  150fa5526c54  0b1cf699a1c7  sunrpc: bring back SUNRPC task abort logic
match  7676a3c813b2  f36b35d90ab7  sunrpc: pending tasks kill helper added
match  60184ea10d92  325e63bd2b0f  sunrpc: fix race between "kill_tasks" set and actual task killing
match  65ace54b9716  a0b996922a95  sunrpc: use rpc_killall_tasks helper when "kill_tasks" toggle is raised
match  09c354e1511d  76d34c8765de  sunrpc: do not place task to sleep if has to be killed
match  2852125ff33c  feb9d9f351ad  sunrpc: take net from task client only is available
match  c1e518519637  5a61923b6970  ms/KEYS: don't let add_key() update an uninstantiated key
match  419e361894c9  d5c720ef3619  ms/keys: fallback to user_match if type->match is not available.
match  9252e73c6733  a8ca117d4193  dm-crypt: add ability to use keys from the kernel key retention service
match  8952d4b45a35  10990146af4c  block/nbd: use REQ_TYPE_DRV_PRIV instead of REQ_TYPE_SPECIAL
match  770763ad0d8c  650bf12f75f0  ms/block: fix use-after-free in sys_ioprio_get()
match  d6627a5084b7  ccd6fc2e0a1e  ms/posix_acl: Clear SGID bit when setting file permissions
match  7a2305ce380a  cfaf9cd88afb  ms/kernel/groups: Use __GFP_NOWARN on user triggerable allocation
match  6f10f92cb589  05683fa8db9f  ms/cgroup: fix rmdir EBUSY regression in 3.11
match  09cefe6bc8e0  ad17b136e704  ms/percpu: fix this_cpu_sub() subtrahend casting for unsigneds
match  75f8b74790e5  4cbe954829b6  ms/kernel/groups: Account group_info allocations
match  907b677f510e  01dd2da040b2  ms/iovec: make sure the caller actually wants anything in memcpy_fromiovecend
match  5b7c63d25b55  c17e96979ec5  ms/pvclock: introduce seqcount-like API
match  8a0d17e6e20e  ce5604fd0606  ms/xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window
match  453e1b790975  b567f1a5ff46  ms/xfrm_user: validate XFRM_MSG_NEWAE incoming ESN size harder
match  00aff689dec0  1aae463732b6  ms/ipsec: Fix aborted xfrm policy dump crash
match  e936ee55907f  89e7810d5d08  ms/futex: Fix potential use-after-free in FUTEX_REQUEUE_PI
match  03ca48d61b3f  2a6cf4f906f2  ms/tracing/filter: Do not allow infix to exceed end of string
match  f96d1f4782a4  db024d8bc62f  ms/pidns: fix free_pid() to handle the first fork failure
match  d929de01989c  b297c466b629  ms/ipc/shm: Fix shmat mmap nil-page protection
match  da24422eb4fa  d30cf105a304  ms/prctl: Allow local CAP_SYS_ADMIN changing exe_file
match  58baf1c2b1bd  fd1b6c142ef4  ms/pid_ns: Fix race between setns'ed fork() and zap_pid_ns_processes()
match  130e20e639c3  f0bc674712bd  ms/kcmp: add KCMP_EPOLL_TFD mode to compare epoll target files
match  1fe442679945  3792c3758bf9  ms/procfs: fdinfo: extend information about epoll target files
match  313f395d0776  32790dfa10ad  ms/kcmp: fs/epoll: wrap kcmp code with CONFIG_CHECKPOINT_RESTORE
match  ff5fe099ddaf  00aa1f212beb  ms/kprobes/x86: Return correct length in __copy_instruction()
match  eee08a405fd1  96d2c19c9093  ms/ /proc/PID/status: show all sets of pid according to ns
match  dd6b67a5ac7c  c4c276d18429  ms/x86/spinlock: Replace ACCESS_ONCE with READ_ONCE
match  cbd90130354e  74d47879ecf1  ms/x86/ticketlock: Fix spin_unlock_wait() livelock
match  ba45122cb222  b8c8fbf270e2  ms/x86/spinlocks/paravirt: Fix memory corruption on unlock
match  19e1e63f6c5f  cc0d6ee06d67  ms/pty: Remove pty_unix98_shutdown()
match  6974821efd6b  7dc024a451b1  ms/devpts: fix null pointer dereference on failed memory allocation
match  35259ec7a212  53e2495a2cdd  ms/workqueue: fix ghost PENDING flag while doing MQ IO
match  d0e66e951836  4bd0195c51ec  ms/x86: Fix norandmaps/ADDR_NO_RANDOMIZE
match  a0c9142f30fb  e0c372d09e74  ms/kernel/kcmp.c: drop branch leftover typo
match  39d7df7f012f  51ebafb64339  ms/trylock_super(): replacement for grab_super_passive()
match  27e408673ecd  735a03d62c7e  ms/pidns: fix NULL dereference in __task_pid_nr_ns()
match  f2b4c916961a  c1cb405aaff4  ms/new helper: wait_event_killable_exclusive()
match  8fee61471834  c4603541aa7a  ms/module: Optimize __module_address() using a latched RB-tree
match  3f35cc17c349  52ad6aee771f  ms/module: Fix load_module() error path
match  ec5603132a29  aadc56a26128  ms/kernel/ucount.c: mark user_header with kmemleak_ignore()
match  eb8b4cb5b4cc  6bb97e2309c5  connector: bump skb->users before callback invocation
match  0541bfc5f122  1d00ca78730a  connector: remove redundant input callback from cn_dev
match  7237c2997174  bc65e4b34ade  connector: store all private data on VE structure
match  697b7384de42  d2c993f0860b  connector: introduce VE-aware get_cdev() helper
match  5efe4f1a28f5  2956bc0c4ebd  connector: per-ve init and fini helpers introduced
match  2bbbd2030343  d9e9a2b21084  connector: use device stored in VE
match  b40efaaa57dc  63d372668793  connector: per-ve helpers intoruduced
match  0522c6eafdd5  00b6c86b6376  connector: take cn_already_initialized from VE
match  c6d445e801d9  bfe0621d7531  proc connector: generic proc_event_connector() helper introduced
match  0bb2a6e8dcc1  cd8e60caccbc  proc connector: use generic event helper for fork event
match  79f5dda95d7b  3578b2e01d77  proc connector: use generic event helper for exec event
match  a64b2a49b25f  a9eda381aee6  proc connector: use generic event helper for id event
match  c1299ae6600f  6af2cab20df8  proc connector: use generic event helper for sid event
match  6d099465e699  258c3e3e3482  proc connector: use generic event helper for ptrace event
match  38dacfa2fef7  a6b5d1fc19ec  proc connector: use generic event helper for comm event
match  a91d83f1276b  1e5143d99282  proc connector: use generic event helper for coredump event
match  775cb7d09fe9  cf2594b50ff9  proc connector: use generic event helper for exit event
match  a9031c5b4527  b59f0f18fa0d  proc connector: add pid namespace awareness
match  d83b21bc2b4f  df107df3c157  proc connector: add per-ve init and fini foutines
match  e32c546e6d88  3a2a4e9b47ed  proc connector: call proc-related init and fini routines explicitly
match  2f90cd5a3108  34c9f53cb5ef  proc connector: take number of listeners and per-cpu conters from VE
match  c5880ae0af5c  d73a31511119  proc connector: pass VE to event fillers
match  6b5865772779  78c6b990590a  proc connector: take namespaces from VE
match  640094232fd6  ad1bb3d4ae31  proc connector: use per-ve netlink sender helper
match  2898027a1e96  775184519c1d  proc connector: send events to both VEs if not in VE#0
match  e64f734875d1  e7a5c7566008  connector: containerize "connector" proc entry
match  9f65f8d7199f  831d82b143b1  connector: take VE from socket upon callback
match  2299c64f30d9  0ee5ad48926e  connector: add VE SS hook
match  86d74ae91b38  b04ef428a137  fence-watchdog: Add fence-watchdog driver
match  967339a53af4  3549d80c6f2d  fence-watchdog: Add xt_wdog_tmo netfilter match
match  fa10674798a8  b7f3f22109a5  fence-watchdog/arptables: add ability to filter by watchdog timeout
match  e1f2b4f24633  bdbf726b11b0  ip_vzprivnet: Add ip_vzprivnet driver
match  9fbecc43b7d3  69c56d91ed48  ip6_vzprivnet: Add ip6_vzprivnet driver
match  c4c3581a0cbf  ece098514946  vzprivnet: Enable module in configs
match  f884b2f3fb7f  f8b0e336138c  vzprivnet: classify_write() cleanup
match  371fa1711329  e94edad59ac2  netfilter/vzprivnet: Fix memleaks of 'struct seq_operations'
match  05c655dc17a7  48b51a89b635  ms/fuse: use list_for_each_entry() for list traversing
match  96e3b2ec92a7  12db5c356c88  ms/fuse: flush requests on umount
match  c9e2f356542a  d5063e6de577  ms/fuse: add memory barrier to INIT
match  696184833810  4158ba187cae  ms/fuse: fix background request if not connected
match  bcda203c4efd  e4940f036da7  ms/fuse: reset waiting
match  938791749fbf  9103b7a5dbfd  ms/fuse: account as waiting before queuing for background
match  53541ddba3f1  ca7f61784739  ms/fuse: check conn_error earlier
match  9d68fbc7de5d  e53bca4fe964  ms/fuse: fold fuse_request_send_nowait() into single caller
match  3d8ad2768ed5  16b140a1068b  ms/fuse: call fuse_abort_conn() in dev release
match  f1b579e62ec8  4a09fabe28c4  ms/fuse: simplify request abort
match  4e7193390981  ebaae9c7fbf8  ms/fuse: req use bitops
match  1bc50fec12df  93ac1dd4c2a2  ms/fuse: use per req lock for lock/unlock_request()
match  42803829d3ae  0075473ca864  ms/fuse: fold helpers into abort
match  d8bd000b2adb  fed380935953  ms/fuse: rework abort
match  c6cbe4b50b9d  40546bb9430d  ms/fuse: simplify unique ctr
match  fbc27046afe5  731c43698ed1  ms/fuse: don't hold lock over request_wait_answer()
match  162bb7725580  cb1996d884cf  ms/fuse: simplify req states
match  3f6d2bcfc3c1  564182e1199c  ms/fuse: req state use flags
match  436aca5b494b  81f5c7224e21  ms/fuse: separate out input queue
match  df08a307e577  1ccb646c2f82  ms/fuse: duplicate ->connected in iqueue
match  bd1bb90de97e  ecd7c14aed39  ms/fuse: abort: group iqueue accesses
match  5d1f2d6cdfee  c825c1af3a59  ms/fuse: dev read: split list_move
match  22887931f8c2  8bf8d12a4c11  ms/fuse: iqueue locking
match  6393d2fb060a  fe55b084256d  ms/fuse: allow interrupt queuing without fc->lock
match  772cf2ec3681  9d54723f991c  ms/fuse: no fc->lock for iqueue parts
match  f50a09c38018  5e25a5230549  ms/fuse: simplify request_wait()
match  790b898087eb  9ddaa52b7a14  ms/fuse: separate out processing queue
match  3ca60e7905e5  bc0ef61f9093  ms/fuse: duplicate ->connected in pqueue
match  e16481bffe9e  259be82cc38b  ms/fuse: move list_del_init() from request_end() into callers
match  cd516bb8ad30  3ce1c59f06a4  ms/fuse: cleanup fuse_dev_do_read()
match  e84e9fd7b170  1e2e8a78b717  ms/fuse: abort: group pqueue accesses
match  560da44de6be  9bf88c1ad43c  ms/fuse: pqueue locking
match  c72713437a73  05009849fa70  ms/fuse: add req flag for private list
match  ae4003636163  ad2c613bc145  ms/fuse: request_end(): do once
match  11c850c0a3c5  b4f02e873061  ms/fuse: cleanup request_end()
match  80f3cec3ca46  a5d6f31cceb7  ms/fuse: no fc->lock in request_end()
match  5fa11dd3698a  558b085b99dd  ms/fuse: no fc->lock for pqueue parts
match  8a1bfaeaf825  d6f72984ebfa  ms/fuse: abort: no fc->lock needed for request ending
match  a06749a27ccc  19a0406cdf8d  ms/fuse: device fd clone
match  6522bd2c27f6  160b23335674  ms/fuse: introduce per-instance fuse_dev structure
match  b69dddc06604  e8f067eb7f78  ms/fuse: separate pqueue for clones
match  16bde6e3c9b3  cd84c02031f6  ms/fs/fuse: fix ioctl type confusion
match  fcbf19392a17  92f8abadc978  ms/fuse: don't mess with blocking signals
match  229b7b7cc4a3  43aef124d891  ms/fuse: use filemap_check_errors()
match  7391aa63228e  6890394f4d2a  ms/fuse: clear FR_PENDING flag when moving requests out of pending queue
match  6a37f1819d12  9d90bea1ca9c  ms/fuse: fix use after free issue in fuse_dev_do_read()
match  9cc70aba211f  cf0baeb3657d  ms/fuse: convert to errseq_t based error tracking for fsync
match  2487be04ec9a  67efbe7303de  ms/fuse: use kvmalloc to allocate array of pipe_buffer structs.
match  24ed48423bf7  e97f5caba717  ms/fuse: reduce allocation size for splice_write
match  5e4607891276  cc4443fe8fc9  ms/fuse: Fix use-after-free in fuse_dev_do_read()
match  a2418932124a  b3651ecb75fd  ms/fuse: Fix use-after-free in fuse_dev_do_write()
match  2c83a028ff13  de172abeb81a  ms/fuse: set FR_SENT while locked
match  48de6cfcfa3d  958a2b8f55a9  ms/fuse: use list_first_entry() in flush_bg_queue()
match  2875831f117c  41e77ac2f30f  ms/fuse: introduce fc->bg_lock
match  71c3e00a0f7e  8f52e178adf7  ms/fuse: do not take fc->lock in fuse_request_send_background()
match  985193af5a57  fcd3e2427641  ms/fuse: change interrupt requests allocation algorithm
match  e1a7a9575436  8780add91b84  ms/fuse: kill req->intr_unique
match  8dee015ba8b9  2d985ef634e9  ms/fuse: fix unlocked access to processing queue
match  4a5950b9da7b  2f1c28a4eba7  ms/fuse: Use hash table to link processing request
match  c6454f238ae6  eabb37aaada7  ms/fuse: Kill fasync only if interrupt is queued in queue_interrupt()
match  5469c7d7ac14  6ba0e312d750  ms/fuse: fix double request_end()
match  8e5e3c1f4e3f  560ce6d151d3  ms/fuse: umount should wait for all requests
match  0208ab052d4b  4eef9bd59c32  ms/fuse: Optimize request_end() by not taking fiq->waitq.lock
match  9ea40730fefe  02d674ab3ea3  ms/fuse: Wake up req->waitq of only if not background
match  01ff28d73f90  275b10d8f276  ms/fuse: Add fuse_inode argument to fuse_prepare_release()
match  1357696f39a4  eb6542c96dad  ms/fuse: Convert fc->attr_version into atomic64_t
match  972ba91ff0f5  0d3eff5cbf44  ms/fuse: Introduce fi->lock to protect write related fields
match  228e501791c5  7f93e9455650  ms/fuse: Protect fi->nlookup with fi->lock
match  4338e5c8c370  ef7005d5f4c0  ms/fuse: Protect ff->reserved_req via corresponding fi->lock
match  aa8f1664878a  e5ced33f3d0b  fuse: kaio support
match  6e568bfbc558  a21ee746a555  fuse: Turn writeback cache on
match  62d25322a7d0  df22410e1768  fuse: direct_enable mount option
match  c588cf6fdeaa  ee146c7bc0de  fuse: fuse-ve-odirect sysctl
match  cfcffaaf5938  f641b3c5fab4  fuse: Show active requests in fusectl files
match  51e225738e9c  b03279419711  fuse: Show open files in fusectl
match  afbbd5e30394  650fa03f5ea1  fuse: Fuse ctl file with connection info
match  99ec3b1ff08a  1fd3f82765d0  fuse: some fairness in handling writeback
match  73c5b71467aa  455f847ca821  fuse: Wait for real writeback to finish on file
match  67a8b51dd466  5f2e5acd7760  fuse: reimplement synchronous close
match  2f571e6b6735  3d52eb79c549  fuse: i_size to be updated on first open
match  11fd31eb4909  bf3774e4f32c  fuse: account read/write requests into iostat
match  1e4c91e07c98  79a3850e2ec4  fuse: wire iolimit sleep-hook into directio path.
match  64119fb13e73  6023644040b8  fuse: account directio requests into ioacct
match  b74a71c4c3f2  4413892c655b  fuse: optimize fuse_vma_close()
match  6098c0c2cda0  a21a84dd95a6  fuse: enable async_dio for pcs
match  132e8c08c49e  2074e715c1f5  fuse: improve bdi dirty memory limits for fuse
match  a72de934df5d  9ec688522346  fuse: account read/write requests into iopslimit
match  ad439537764d  f4e7e7926f64  fuse: implement invalidate_files notification
match  a6ba2062c0f9  33a2c9bb0efb  fuse: pass "fc" to fuse_invalidate_files()
match  64f1b9241d4e  a391b245ef68  fuse: cleanups in fuse writeback
match  891307321479  4377e8b6b759  fuse: add missed fuse_file_put()
match  b7a7bc0ba8c5  f065c462f268  fuse: do not use RELEASE on directory
match  40e2a091b73c  d80ad45f1207  fuse: extend report on pstorage errors
match  0e28235367e8  168b2f3c0ea2  fuse: print initialized flag in conn info
match  a99be837531d  9dab10af3363  fuse: make umount synchronous
match  bf21d399c86a  d4a064ca233d  fuse: add mount option to disable close_wait
match  09f2f39e54ef  f68055ac2018  fuse: do not flush files opened ro
match  58f7a46657d0  7da5948633c5  fuse: the list of all opened files
match  a335953ce482  7d79b61e27f0  fuse: add page_cache bit to fuse request
match  23e812cd33fe  2b6317fc896e  fuse: add "killed" bit to fuse request
match  effc832249cc  30e2e8548953  fuse: kill requests on "lost-lease" event
match  9502e031c67f  00f84879301c  fuse: prevent queueing new requests after
match  bb9962d7f2d4  5645164b3759  fuse: skip waiting for fuse writeback
match  4176d9a64fad  4f95641e82ab  fuse: fail lost-lease notification if async_read
match  80ddd8bd52a4  c78ac9ba7e44  fuse: report details of aio failure
match  628d06545d3c  15edb74954b1  fuse: invalidate_files backward compatibility mode
match  d458f2f8fb69  a3e76838f6a4  fuse: fix deadlock in fuse_flush()
match  8d96acf8e9a0  0c662d203f0b  fuse: release cleanup
match  d7fd13bf4319  f1c7626773a7  fuse: virtualize file system
match  be512c2643f7  e2b40b42c73e  fuse: resend interrupted release
match  6f381bfa11ec  6aa59d18b0f9  fuse: increase min/max_dirty_pages up to 256/512 MB
match  622770069263  a530ee987925  fuse: enable synchronous close for both "pstorage://" and "vstorage://" fs types
match  1cccb5c83532  b5de3d647354  fuse: process small sync direct reads synchronously
match  8f9820688ec1  e33c1d85657b  fuse: queue work for aio_complete (v3)
match  ad5654b05d9e  761c49073449  fuse: relax i_mutex coverage in fuse_fsync
match  e930486dea5c  a54baf78c072  fuse: fuse_send_writepage() must check FUSE_S_FAIL_IMMEDIATELY
match  fa68ce5b78b4  b63fc8f605c3  fuse: ratelimint dio complains
match  893579e38bae  cd58c936b74f  fuse: trust server file size unless opened
match  69cf786749f4  ab331a0b1f65  fuse: fuse_blocked_for_wb must check rw_files
match  e76033acce88  6f747c2293d3  fuse: cleanup fuse_wait_on_page_writeback
match  91192f185d2b  068d286d2db2  fuse: fuse_prepare_write() cannot handle page from killed request
match  23b034ead3c0  0dd340b7e77c  fuse: ioctl() to bind fuse device to input queue
match  276f35c3ab07  87ee3212a4ef  fuse: add support for fallocate(FL_ZERO_RANGE)
match  1ed47ef023af  a7628712de62  fuse: fallocate must return error if mode is not supported
match  8c0c568efe99  04475c69c2cc  fuse: ioctl(FIEMAP) support
match  78b06886e2d7  2b6e5869d11a  fuse: skip invalidate_inode_pages2 on truncate
match  771b2e4ea9b8  e69ca16f4135  cbt: introduce changed block tracking
match  c2961fea2851  126f80702512  config.OpenVZ: enable cbt - changed block tracking
match  d0252e3a167f  6e574510b5a7  cbt: factor out alloc_page
match  69b2858bb720  5ebaef6ef55e  cbt: introduce CBT_PAGE_MISSED
match  eac890dd2332  1713ec497d75  cbt: make __blk_cbt_set() smarter
match  8aca36e6476d  f5dee0d77bde  cbt: fix page allocation
match  3e8979f94c19  b30acc36cd69  cbt: add blk_cbt_map_copy_once() helper
match  45d00dae2ae4  9131abcb8857  cbt: add uuid arg to blk_cbt_map_copy_once()
match  cabf91a322b7  d288718a7a9b  cbt: fix cbt->block_max calculation
match  2f1265747833  569c0bd7053a  cbt: fix panic in blk_cbt_map_copy_once()
match  4a2e66931938  34650e0da268  cbt: new api: blk_cbt_map_merge()
match  149e32214365  73303851f47d  cbt: fix possible race on alloc_page()
match  51133ad691ae  d509f8696a3a  cbt: blk_cbt_update_size() should not copy uninitialized data
match  7f455c92d851  c73a757ab44a  cbt: blk_cbt_update_size() must return if cbt->block_max not changed
match  38160f4a2a30  cd8eeb45e599  cbt: don't leak ce_reserved64 in cbt_ito userspace
match  27d01f794778  944d7b31e6f8  cbt: license: put correct copyrights into file headers
match  962d7cdc5e8e  d61f95d72d5d  block: cbt: fix potential deadlock
match  aea34054394e  b96cfbe5049a  cbt: bitmap corruption caused by ipi
match  e9cc2473f843  105ac0c40a96  cbt: selfdeadlock in __blk_cbt_set()
match  bf61a83908ec  183c9832eeaa  ploop: add ploop to the tree
match  2e4fedf28d7e  b20073983914  ploop: fix file->f_count leak in raw_complete_snapshot()
match  8541517aa3cb  823a41d299be  ploop: check error from freeze_bdev
match  3e585f378816  475d20415eac  ploop: generic support of writeback control
match  a3796119f961  dd29ef2c7a0f  ploop: congestion detection
match  1a99aed995cb  6a4bff11a5ce  ploop: port io_kaio module
match  9dfecc57ee21  f0eb2331f7b8  ploop: check ENOSPC callback
match  47f3eaa8afb1  b2205f5c78f0  ploop: support of explicit unplug: start and stop plugging
match  18541d28c05e  f76447c557fa  ploop: support of explicit unplug: unplug callback
match  94cfb656c4e3  ebaa04e0f437  ploop: update i_size on preallocation
match  0f23b307074c  eca72dc76e60  ploop: set PLOOP_MAP_IDENTICAL bit on merge
match  1a521d7bf944  898ad9ae8196  ploop: purge plo->map on merge
match  9a2be00f2ecc  9b6147b4fede  ploop: fix deadlock inside dio_alloc_sync - lock inside while() but unlock outside
match  59205b1e7e5b  94b6de1b4af9  ploop: fixed deadlock by interrupts off inside lookup_extent_mapping
match  6028f0e2dee7  33a8da9880bf  ploop: fix accounting ploop_io_images_size
match  505479c508b9  59cfe59d66b7  ploop: fix dio_fsync wait
match  d3487b88301e  d90803b85477  ploop: check new size of block device on ioctl(GROW)
match  81526d26b8a8  62bb1ab3c3cc  ploop: prevent dangerous ploop-umount
match  34d625a184b8  f07be2af4aad  ploop: prevent disclosure 4 bytes of the stack kernel
match  840d45850f4a  a025a4797f19  ploop: report holes in pio_direct (v2)
match  6dfee5323126  0224711ac207  ploop: rework accounting images_size
match  ceb9f7a14c66  7d4304ed6203  ploop: fix iblk-to-sector calculations
match  acde4a68d376  e4ce0abe4044  ploop: fix sync delay for sync requests
match  0b882f9e5f07  738ae4878581  ploop: reverse order of fdatawait and fsync fop
match  6097399a0a60  0e4f6da0281e  ploop: skip writes of zeroes to unallocated blocks by default
match  7bf65bac5e77  05279decbd3c  ploop: support 4K block-size of host block-device
match  235f67e6a551  afa385976fc5  ploop: fix a race condition on relocation of blocks
match  617b2393a738  003dc9101baf  ploop: fix check_zero optimization v2
match  f7f28a22bfe8  33bac55a14b6  ploop: fix race in ploop_tracker_init()
match  5f35022e5a04  62b26b246321  ploop: prioritize BAT operations
match  3ba15745e5a0  e002ce11a033  ploop: add ioctl to limit size of top delta (v2)
match  0594941650b4  9fce77ae6426  ploop: bug on bad fiemap (v2)
match  65a1ded4668f  43b41e5d77f7  ploop: ensure non-empty delta list on running ploop
match  b995401ca2e2  5e065aee8781  ploop: expose open_count to sysfs
match  e3a4b934d792  c2d6bbc4df82  ploop: fix spurious hole complains
match  9d6c5e18853c  374e1a103f27  ploop: put top-delta back if merge failed
match  ed390f33e174  2502668598d6  ploop: roll back alloc_head on ENOSPC
match  433494956fc7  1f38bd310b71  ploop: zero blocks on reuse
match  0f01f14d8eab  c785a109f179  ploop: make manual abort transition verbose
match  c705627889c7  20aadbabe011  ploop: warning on "disk full" condition
match  fa41294407d6  1d6a08966f8a  ploop: notify blktrace about bio completions
match  464c144c94b6  1f1dc3ce168b  ploop: added ploop_req_delay_fua_possible() func that detects possible delaying of upcoming FUA to index update stage
match  fe0a1c9b83e3  c128defcaf7f  ploop: define struct ploop_request->state flags to force pre FLUSH before write IO and FUA/fsync at I/O complete
match  5eb6a4847003  88b9ba261f67  ploop: direct: to support truly FLUSH/FUA of req we need mark first bio FLUSH, write all bios and mark last bio as FLUSH/FUA
match  659e0a6b7d8c  742d875fb127  ploop: do preflush or postfua according force FUA/flush flags, and delay FUA if possible but add force FLUSH to req if so
match  1cf1d5f58609  f214474e9c29  ploop: make image fsync at I/O complete if it's required by FUA/fsync force flag or by req->req_rw
match  a2f1c4a1527f  f0f365b70ff3  ploop: mark reloc reqs to force FUA before write of relocated data
match  5c218420192b  a9ce077dbf39  ploop: mark reloc reqs to force FUA/fsync(kaio) for index update I/O
match  4bc366bac14f  a938ba03f191  ploop: force FUA of nullified blocks for BAT grow
match  db2245c1325d  b72dd9cf23ed  ploop: added printk of function, line, backtrace before ploop_set_error
match  7ae3a3d52857  00311f9ef0c9  ploop: add a separate queue for discard bio-s (v2)
match  db539cdbf160  6286a1cea100  ploop: fix busyloop on secondary discard bio
match  d2563cb2dd48  883e07c5f6fd  ploop: added into pvd header new close signatures
match  5486cf1d89da  8009b837dfbe  ploop: fix processing sync bios
match  8d8eb29817c7  a95a8d3e4447  ploop: dio_fastmap() must refresh bvec_merge_data
match  010965702093  2c738ce75a0e  ploop: fix race on prealloc request
match  3b40b784b814  6360803747f8  ploop: use GFP_NOIO in ploop_make_request
match  7edb7148e69c  e772ea1614a9  ploop: do not use fiemap beyond eof
match  d367ee2ab940  c4975cc1684f  ploop: release io_context on ploop_thread() exit
match  a1866d3232ad  60cafdd1fe3c  ploop: disable WRITE SAME for io_kaio
match  e8dc9a6f10fa  65f0731038d9  ploop: rename extent maps management funtions
match  16e5ea7682b1  e829b3f0b889  ploop: update gendisk disk_stats
match  c8f849440797  c94ff0535305  ploop: fix direct_io prealloc checks
match  85ffc2ea54de  61b51f60058d  ploop: replace BLOCK_UNINIT
match  5f13ee91aa66  1a8924b3f276  ploop: use FALLOC_FL_CONVERT_UNWRITTEN in io_direct
match  07e42b385c84  f8642f244a07  ploop: must acquire write access on space allocation
match  9d4552ea583d  b00cb155535c  ploop: io_direct must fsync after fallocate
match  af0e82c01419  1ae17f125faf  ploop: introduce pbd
match  ef51501f907c  d9b34f4a5931  ploop: implement PLOOP_IOC_PUSH_BACKUP_IO
match  fc24f27f5248  0afb8a5cb42c  ploop: wire push_backup into state-machine
match  ade8d26f569f  2a7c9036962c  ploop: push_backup cleanup
match  308e9bc1591c  114eacb4f1a2  ploop: force journal commit after dio_post_submit()
match  3cb84177440e  ba7ab7518148  ploop: push_backup: fix ploop_push_backup_io_read()
match  095144c97b9a  7e2669f9f2a9  ploop: push_backup: show uuid
match  313b8bbce462  639481c65777  ploop: push_backup: optimize ploop_pb_get_pending()
match  4d22ba40a912  a1f59855a430  ploop: push_backup: optimize ploop_pb_put_reported()
match  242643381887  38734f52b5e8  ploop: avoid costly user-controllable kmalloc() calls
match  ad13a04e4e00  73b7f4cf1c58  ploop: get rid of FOP_FSYNC
match  ea19ef42d581  7ebe95be6eba  ploop: io_direct: check for fsync fop on startup
match  43947fdc7eb6  4558a3175586  ploop: get rid of dio_fsync()
match  13eaa553b29e  88af1b1fc9ef  ploop: get rid of direct calls to file->f_op->fsync()
match  0d55b6b23511  94fdc195b37f  ploop: push_backup: factor out destroy
match  25a147f59b75  dace986fc9e1  ploop: push_backup: implement auto destroy
match  f089ca0de808  bf01e4b40acf  ploop: push_backup: introduce ppb->reported_map
match  879b543eadd9  5137eca89af6  ploop: push_backup: improve ioctl(PLOOP_IOC_PUSH_BACKUP_IO)
match  5f9aa1fccc89  847f007c5057  ploop: push_backup: merge pbd->cbt_map back to CBT
match  726756f74da8  8a4486d8b9c5  ploop: io_direct: delay f_op->fsync() until FLUSH|FUA (v2)
match  733ec9971bfa  0c0eef14ae8a  ploop: push_backup: copy stop status back to userspace
match  6ff90792a171  2854147cec8d  ploop: push_backup: rework lockout machinery
match  5a6788929eaf  7e83181205dc  ploop: push_backup: PLOOP_PEEK mode of ioctl(PLOOP_IOC_PUSH_BACKUP_IO)
match  f3349530f18a  36e3534df6fc  ploop: "Parallels loopback device" -> "Virtuozzo loopback device"
match  30672832f428  ac5027692030  ploop: fix gendisk disk_stats to be seen on partition
match  48571d3ada4a  d44c5c8fd0e7  ploop: fix counting bio_qlen
match  48762401305b  4d23fcb5c200  ploop: io_kaio: fix silly bug in kaio_complete_io_state()
match  c1c4416d9200  a7a2aee0e0cd  ploop: fix barriers for ordinary requests
match  1e17a4aa73bd  d9a58b47bab7  ploop: skip redundant fsync for REQ_FUA in post_submit
match  bfb558adb918  b2170b5cfc4b  ploop: deadcode cleanup in dio_submit()
match  475b8afe42e6  7693822b4c4c  ploop: minor rework of ploop_req_delay_fua_possible
match  e9521a1c1a84  6000fad76f56  ploop: resurrect delayed_fua for io_kaio
match  8d8deefb3222  f5bc4ad64e14  ploop: minor rework of ->write_page() io method
match  45341b4ce6d2  698d097ce147  ploop: resurrect delay_fua for io_direct
match  97ce41abbf35  7e10d21a4a13  ploop: remove preflush from dio_submit
match  a98ea7517183  1eaaef9b2b2f  ploop: generalize issue_flush
match  5e39a10be553  234b1345e771  ploop: fix barriers for PLOOP_E_RELOC_NULLIFY
match  bdb8fcdfd4f6  2456a17c28af  ploop: fixup barrier handling during relocation
match  2f7346c1af78  7bd1cb7dcd05  ploop: push_backup: introduce pb_set structure
match  c2ea7cc6b574  7d82aaae3b6e  ploop: push_backup: factor rb_erase() out
match  260736ae1137  2118e20f4431  ploop: push_backup: extend pb_set
match  bdae9c784a33  2ff19ad4cdc6  ploop: push_backup: add timeout tunable
match  8897ce4bdba4  5a6e0eebc099  ploop: push_backup: health monitor thread
match  cf7b029054f8  3856e6e888ec  ploop: push_backup: implement timeout functions
match  a7bf132cb384  2ae619a29d36  ploop: reloc vs extent_conversion race fix
match  18874bea4d7f  812e05286b6f  ploop: add PLOOP_IOC_FREEZE and PLOOP_IOC_THAW ioctls
match  dcf40328095e  5e0e42742017  ploop: release plo->ctl_mutex for thaw_bdev in PLOOP_IOC_THAW handler
match  8afd5494ac1a  aac0f60d18e0  ploop: fix fsync_reqs accounting
match  4b93d3bb3084  b285db62447d  ploop: introduce plo->free_qlen counter
match  1f780b4ba0c4  9ca9fd5cfafa  ploop: introduce plo->blockable_reqs counter
match  8cae6c8c6078  72bfe04dc9f6  ploop: fix free_list starvation
match  c21a01873fb6  b03e2a867c65  ploop: fix freeze/thaw ioctls
match  0d5ac8c427a7  ed86d17da8f0  ploop: factor ->write_page() out
match  d824846ecb16  0154f0393b73  ploop: factor out add preq to fsync_queue
match  aaa4b139bbed  91b30b45e7ff  ploop: io_direct: delay f_op->fsync() until index_update for reloc requests (v3)
match  a58bb1a9c0e9  cecc86fc1ab5  ploop: drop bdev refcounter on freeze_bdev() failure
match  95ac633a8509  6c392bf66b04  ploop: keep frozen block device pointer instead of super_block pointer
match  23b2519c53f1  b4bab40c30fe  ploop: add support for dm-crypted ploops
match  30e0fbc6c4f8  4aa7c9da0e74  ploop: push_backup: fix pbd->ppb_lock deadlock
match  59ae187dc44f  03326fb97665  ploop: ploop_grow must nullify holes
match  1f6024aedb0f  fd63d7c4d2af  ploop: push_backup: avoid preq->state corruption
match  913d5f216e5d  2b7c47411f47  ploop: push_backup: avoid deadlock on PLOOP_PEEK
match  cfcf814b2640  2fa1f4c3fc23  ploop: push_backup: ploop_pb_init must always spawn health_monitor
match  b5462e7bb1ed  d6fc75e83b0d  ploop: don't leak ploop_freeblks_ctl_extent
match  40baa4edd651  bf9975964727  ploop: add comments about possible leaks
match  cd7b538dd6b9  b387fb444623  ploop: pio_nfs does not require PLOOP_REQ_ISSUE_FLUSH (v2)
match  1e548f3ca607  29ccd8315a06  ploop: fix IS_PSTORAGE() macro: add check for "vstorage"
match  99df913c8f00  04abb0ed9dcd  ploop: push_backup: BUG() on list corruption in ploop_pb_add_req_to_tree()
match  c5d56634c1d6  e0e354c03bec  block/ploop: Add resched points in ploop thread.
match  404a072e4330  1eb32bb9c44a  ploop: fix typo in ploop_pb_get_first_req_from_tree
match  84d8f0296ffc  e6f8d24894ff  ploop: show ino and sdev for ploop images in sysfs
match  90bdf11c6cdb  56ce2f85d998  ploop: push_backup: ploop_pb_get_pending should wait again instead of ENOENT
match  d49e687237d7  358f367ebc61  ploop: fix race on map->levels[] update
match  158eb71caa86  5b9aaa98a101  ploop: make error messages about intersecting extents more verbose (v2)
match  7314e186200f  3faa2a8889bb  ploop/license: put correct copyrights into file headers
match  3192339c3c6e  70b1360fdc3c  ploop/modules: set module author for Virtuozzo modules
match  49a01b69b6cf  56855cf2f028  ploop: add dependency for CBT in Kconfig
match  b1da4610bd2c  da20e5b6f9f0  ploop: fix dio_invalidate_cache()
match  585ea5104bd4  ccf8cedfe1e9  ploop: fix trim_extent_mappings() locking
match  89d9bb3d7034  2377cd043dd2  ms/crypto: skcipher - Add crypto_skcipher_has_setkey
match  b986f793f3bc  4621ee5a6edf  ms/crypto: af_alg - Allow af_af_alg_release_parent to be called on nokey path
match  1308eb1faa33  491f09886d3d  ms/crypto: af_alg - Forbid bind(2) when nokey child sockets are present
match  b38c2c7ef59d  9f1e8807ca89  ms/crypto: user - lock crypto_alg_list on alg dump
match  e58bd8bacdca  a923525409b6  ms/crypto: hash - Fix page length clamping in hash walk
match  f795c09ff760  17a644567253  ms/crypto: gcm - Filter out async ghash if necessary
match  4abd8950b3c5  6945c3a48f03  ms/crypto: scatterwalk - Fix test in scatterwalk_done
match  57acb8dd2419  08c49e452949  md: add support for dm-crypted ploops
match  87069dcae514  951d1bf06936  kvm: do not SetPageDirty for file mappings
match  0f6d09f86909  094203a486f8  ms/kvm/x86: Pass return code of kvm_emulate_hypercall
match  11794cded710  e93cd5a33b8e  ms/kvm:vmx: more complete state update on APICv on/off
match  d5d5f4d5be3b  c967e371a5a1  ms/KVM: i8254: simplify atomics in kvm_pit_ack_irq
match  d3dcda65f87c  0f0a2853aa62  ms/KVM: i8254: add kvm_pit_reset_reinject
match  711dd570ceb9  4a8055706ecc  ms/KVM: i8254: use atomic_t instead of pit.inject_lock
match  eb2faf89c293  f33271acca40  Revert "ms/KVM: x86: reset MMU on KVM_SET_VCPU_EVENTS"
match  0dac9420144b  f23aafa0be40  KVM: async_pf: Let guest support delivery of async_pf from guest mode
match  4d389a1e261b  cfb1184a66d4  ms/KVM: x86/vPMU: ignore access to LBR-related MSRs
match  60d95e415263  f9ab8b37ec50  kvm: x86: factor out kvm.arch.hyperv (de)init
match  06e3c3e76155  34b0564a0d87  kvm: x86: hyperv: guest->host event signaling via eventfd
match  585f69e03350  40b4faf1ee91  kvm: x86: hyperv: delete dead code in kvm_hv_hypercall()
match  f0e1f603daf3  682d50b738bb  kvm: Map PFN-type memory regions as writable (if possible)
match  bc53d91f932e  acfc271a9392  ms/KVM: LAPIC: Fix lapic timer mode transition
match  3abc13226268  5ad920199c0d  ms/KVM: LAPIC: Introduce limit_periodic_timer_frequency
match  ba29c872a56d  57ee487cb1cb  ms/KVM: LAPIC: Keep timer running when switching between one-shot and periodic mode
match  ae2dcf3395f5  1fa8e074ecc9  ms/KVM: x86: handle 0 write to TSC_DEADLINE MSR
match  bc4a7acc570d  2cd593950087  ms/KVM: x86: really disarm lapic timer when clearing TMICT
match  72046da9715c  50afa1d58a3c  ms/KVM: x86: thoroughly disarm LAPIC timer around TSC deadline switch
match  f1d5c0c90bb3  8af0129b3f72  ms/KVM: x86: Add a return value to kvm_emulate_cpuid
match  4dc3a191c486  c1fbede51bb7  ms/KVM: VMX: Reorder some skip_emulated_instruction calls
match  64397ae27a70  62fcd271ca10  ms/KVM: x86: Add kvm_skip_emulated_instruction and use it.
match  33cd2f578240  431a4f341abf  ms/KVM: x86: Do not clear RFLAGS.TF when a singlestep trap occurs.
match  2153e0e39200  14baff130573  kvm: move VMs which we skip during shrink to vm_list tail
match  58fa84b0a383  d47b0eaa41b5  kvm: move actual VM memory shrink out of kvm_lock
match  cf603783dccb  96cc1515b293  KVM: x86: add a stub for MSR_PLATFORM_INFO
match  b3c0164f41ab  f6f1a948171c  ms/KVM: x86: Add module parameter for supporting VMware backdoor
match  b7b52e361aac  80a146ed4b60  ms/KVM: x86: Always allow access to VMware backdoor I/O ports
match  ef13f67f956e  fe1fa5207846  ms/KVM: x86: Add emulation_type to not raise #UD on emulation failure
match  459ec25b7c13  a4de373414f7  ms/KVM: x86: Emulate only IN/OUT instructions when accessing VMware backdoor
match  f4202a15789d  0a69f472f991  ms/KVM: x86: VMX: Intercept #GP to support access to VMware backdoor ports
match  ebc45ebfd4d6  f275318dc21e  ms/KVM: x86: SVM: Intercept #GP to support access to VMware backdoor ports
match  4288c577a522  bc889b55f993  ms/KVM: x86: Add support for VMware backdoor Pseudo-PMCs
match  28add08176bd  6c4cacaca98e  ms/KVM: hyperv: idr_find needs RCU protection
match  80f3e69dd1c8  0e888c8ec008  ms/KVM: X86: Fix scan ioapic use-before-initialization
match  f0605ae837d6  f1f0e39dafde  KVM: x86: Don't re-execute instruction when not passing CR2 value
match  7967f6a1fd15  c54131413925  KVM: x86/vPMU: handle access to LBR stack regardless of PMU counters presence
match  47345522eb79  fff293984b2b  vhost-net: enable zerocopy tx by default
match  48e6e6fc3c3d  1bdb7ebcc7c5  net/vhost: Replace kmalloc with kvmalloc for order>=3
match  e4ac7557ab9e  f3930807aebe  ms/vhost: synchronize IOTLB message with dev cleanup
match  feafa3ac833f  073189b5c73b  target: don't call an unmap callback if a range length is zero
match  aac0d1941cad  418cd5ae5063  target: add extra counters for LUN statistics
match  166ff6b8014c  30da81bcd017  target: add histogram for LUN statistics
match  fcb32b3cb180  5a87257071f0  target: add read/write/sync latency counter
match  0b76f60da21a  cf6b1dc76164  target: add an user-mode helper to handle changes of a group state
match  97e6d178d9b6  5c47ba8bb274  target: pass a device name to an alua user helper
match  c4a278cd4c73  5b73a06357bb  target: move alua user helper from group to device
match  9ab9ec19e3e7  478e951061a5  target: call alua helper before reporting group states to initiator
match  999fa68e84f7  c3fc4d07ea4e  target: set ALUA_TG_PT_STANDBY if a backing store is in standby mode
match  60f67ef15cc8  befaed1a043f  target: allow to set a blkio cgroup for a backstore
match  b1733c60de3b  934b495300d9  target: fix a locking scheme of persistent reservations
match  842ac6a44598  4d57cb2dbda9  target: move blkio_cgroup from attrib/ to param/
match  ae9fba0b98aa  ee86ec526d95  target: rename user_helper back to alua_user_helper
match  b5d6a2c627d5  927e9508919d  target: use to_stat_tgt_port() to handle files in scsi_tgt_port/
match  aa4c3f52b402  321a1136c0c5  mm: add warning about high order allocations
match  d14daab35dea  4e18cc030d5f  mm: add __GFP_ flag to hide verified high order allocation warnings
match  c3fe0530f45f  a98936d2aadc  ve/cgroup: hide ve and ub cgroups in CT
match  d31dadde9ae1  18a9fee9cc46  ve/fs/files: Add new argument to expand_files()
match  44516c3534f9  d4944c83f7a4  ve/fs/files: Add fdtable_align() helper
match  9db18008e57f  206892bf1d69  ve/fs/files: Shrink big fdtable on close in is_pseudosuper mode
match  f18977fd88ba  299d777c00ed  ve/net: partially return ms permission check for ethtool commands
match  6dc7292eed84  808fe5320de6  Revert "do_SAK: Don't recursively take the tasklist_lock"
match  85d2ba8926ac  0d67f3d1c5cd  tty: Avoid threads files iterations in __do_SAK()
match  930686096bee  9e2db186410f  tty: Use RCU read lock to iterate tasks and threads in __do_SAK()
match  12facabe83c6  fa358e619b68  ms/fs, mm: account filp cache to kmemcg
match  a7a891fec6f6  0eac0847f324  mm/tcache: invalidate existing page during cleancache_put_page()
match  75de5a7749b0  0027320df5e5  tcache: Refactor tcache_shrink_scan()
match  2612944c5a0e  5bf54a371ddb  tcache: Fix race between tcache_invalidate_node() and tcache_attach_page()
match  2e779704873b  afaf57a4e02a  fence-watchdog: print alive messages
match  091747122c2c  ba3799da3681  ms/scripts/has-stack-protector: add -fno-PIE
match  10c7277f88e6  bb083d6cbc34  ms/kbuild: add -fno-PIE
match  130395466a10  9d668014000b  ms/mm: compaction: trace compaction begin and end
match  bb1bc737d230  d60f3a20581b  ms/mm: compaction: do not mark unmovable pageblocks as skipped in async compaction
match  28bfc29ebd80  ff1e6f4503b3  ms/mm: compaction: reset scanner positions immediately when they meet
match  424accbcc906  25cc5f7caaaf  ms/mm/compaction: disallow high-order page for migration target
match  fd4f9dd20bbb  404e70289be6  ms/mm/compaction: do not call suitable_migration_target() on every page
match  caeed0e41779  1ad44c090c68  ms/mm/compaction: check pageblock suitability once per pageblock
match  97b44072a866  6d292990f94b  ms/mm/compaction: clean-up code on success of ballon isolation
match  c3f42f9c616c  3f34e67c9e22  ms/mm, compaction: determine isolation mode only once
match  03b9f7da1d94  988ba5f56e23  ms/mm, compaction: ignore pageblock skip when manually invoking compaction
match  572ed8a7b645  22869be0f557  ms/mm/compaction: clean up unused code lines
match  f1ab27372288  15e235aa917f  ms/mm, migration: add destination page freeing callback
match  3b03856c4f7d  c1ebdf4d8853  ms/mm, compaction: return failed migration target pages back to freelist
match  a9e509540223  340e5f56ee64  ms/mm, compaction: add per-zone migration pfn cache for async compaction
match  873501b8eac7  66fc0a7215c5  ms/mm, compaction: embed migration mode in compact_control
match  ed76e0bb6f06  3ffd1f75ab87  ms/mm/compaction: do not count migratepages when unnecessary
match  dbe7fd458672  8e662e6e51be  ms/mm/compaction: avoid rescanning pageblocks in isolate_freepages
match  d98af839a9f9  ec144f9cc49f  ms/mm: fix direct reclaim writeback regression
match  3ab6ec4c8c37  cc864e191309  ms/mm, vmscan: add active list aging tracepoint
match  36d2e0249804  ffa9945c5462  ms/mm, vmscan: extract shrink_page_list reclaim counters into a struct
match  421882ccb25b  8f5cc86cc888  ms/mm, vmscan: enhance mm_vmscan_lru_shrink_inactive tracepoint
match  13b25755d76b  665227722b10  ms/mm: throttle on IO only when there are too many dirty and writeback pages
match  4aaa9a38a3b1  64efd472e66c  mm/vmscan: collect reclaim stats across zone
match  86f03b11e2d1  4c20a844ea64  mm/vmscan: Use per-zone sum of reclaim_stat to change zone state.
match  d514d3c9e82b  6b45ec187150  mm/vmscan: call wait_iff_congested() only if we have troubles in recaliming
match  3a4ba8859381  fed8542824fc  ms/mm: memcontrol: simplify detecting when the memory+swap limit is hit
match  824fa6a0fc96  91fac945a8b3  ms/mm: memcontrol: fix transparent huge page allocations under pressure
match  2565cbb3164b  1970f975d5cf  ms/memcg: refactor mem_cgroup_resize_limit()
match  96581b99baa9  d65107155e4c  mm: try harder to decrease cache.limit_in_bytes
match  7bce8988dac3  95d93add7e85  ms/mm/memcontrol.c: try harder to decrease [memory,memsw].limit_in_bytes
match  6f869c522079  474e7bcec3c6  ms/dm crypt: replace RCU read-side section with rwsem
match  9a04c47fdda1  cedc8b6c60b5  mm: fix memory cgroup leak in case mem cgroup gets offline before kmem counter is 0
match  e85419dd2d61  a02b590bea10  configs.OpenVZ: add minimal kernel config for a KVM VM
match  6e6128bb3289  a927397f0232  mm/memcontrol: Fix memcg swpin/swpout stats accounting
match  a0466c2a58a4  5c3a24a755d6  ms/net: don't wait for order-3 page allocation
match  c853e573164f  0211f6f4e66b  fs/pipe: Use kvmalloc for pipe buffers
match  addadf8008d6  bc3e7d432041  ms/x86/kvm/vmx: do not use vm-exit instruction length for fast MMIO when running nested
match  1c1904c260bf  2c459336c3ee  ms/inotify: Extend ioctl to allow to request id of new watch descriptor
match  cb3a68954ea8  3c3f8e265fed  configs.OpenVZ: more options to disable
match  02648fcb784e  ba9271384efa  ploop: don't forget to dec preq->io_count on a error path
match  3f971947d130  53619992e44a  fuse: add a new async operation to unmap regions
match  5e73062dd89c  596db356ace6  ploop: handle discard requests via fallocate
match  5090bc1304c0  1544c4d4a420  ploop: allow to set discard granularity and alignment attributes
match  76c0b37b2569  aac5c3d43f7a  ploop: give aligned regions into fuse fallocate()
match  c6b7dfff41e4  ccc01de02b4a  ve/kstat/alloc_lat: Don't separate GFP_HIGHMEM and !GFP_HIGHMEM allocation latencies
match  292c2db11898  c5450dcc8ac4  ve/vzstat.h: move some kstat definitions into new header
match  43f5d84a6a96  43029500cdea  ve/page_alloc, kstat: account allocation latencies per-task
match  0512d893fa0a  7f1a6b090755  ploop: kaio_kreq_alloc specify nr_segs
match  4f71f98112fb  ab608f0b644f  ploop: kaio_io_page switch to bvec iter
match  41db3fed4b2f  24c6d943280e  ploop: io_kaio remove direct_IO_page requirement
match  8c104a7be785  2f9e08f7886e  fuse: remove direct_IO_page
match  c8ce76854b7a  039786bf00cc  fuse: assert i_size boundaries for fuse_direct_IO_bvec
match  80202ed019d9  c9574fa5a864  fuse: separate iqueue for clones
match  78ed66164194  c731e7556a34  fuse: add kdirect io engine v0.1
match  a11b0811001f  c60acf5c9ad1  fuse kio: minimal noop engine skeleton
match  b802aff25275  8e5997e02e55  fuse kio: Add nullio engine
match  1aee3e595bcb  020dea630526  fuse kio: Add pcs engine combo v0.8
match  2af1e8b4feba  ead05688c95c  fio kio: PCS unblock writepath
match  a576e705c881  79038c1f1416  fuse_kio_pcs: implement truncate
match  09a47ae16fdc  28ecb182cf5a  config.OpenVZ: enable modules for in-kernel fast path for vStorage
match  8ba3599a3285  9898510a067e  ve/tty: Provide interface for current tty inheritance
match  f7b6e18a82f2  90bf4e0dbf1a  ve/kstat/alloc_lat: Initialize alloc_lat to zero at start
match  3d6235116ed1  d5e80f35096a  ve/fs/proc: Make per-thread and per-process allocation latencies.
match  b96fec14a8e0  02ad42a39db2  mm/memcg: Don't charge anon pages as cache
match  40e7e88972c5  fe1b5eeb999f  mm/memcg: fix overcharging in cgroup try_charge() for !cache_charge
match  c1398b40c6be  69e65703eff3  ms/[media] drxk_hard: fix bad alignments
match  8636860f379c  9f14bcca0eec  fuse kio pcs: implement logging and prometheus statistics collection v2
match  36b57193dcb9  b7c9f417368a  config.OpenVZ.minimal: disable CONFIG_X86_DECODER_SELFTEST
match  9511ac77fd08  a8d58ba7b0c8  ve/cgroup: Get correct VE init css when ve init_task is moved to child cgroup
match  be49da04d860  638192fb2052  sched/ve: Link VE root cpu cgroups in separate list
match  f0807ee69ef6  cd4bb6bd11cd  sched/ve: Do not show loadavg in child VE cpu cgroups
match  c82b5c9cb093  88af8bceacc5  sched/ve: Iterate only VE root cpu cgroups to count loadavg
match  6862b3b497c9  cf8ef7c76a69  sched/ve: Use cfs_rq::h_nr_running to count loadavg
match  8bf617b20e49  9d8fc6479eee  ploop: Discard bios of size not aligned at 512 bytes
match  c03163f55592  3b3268eb93bb  fuse kio_pcs: ignore special inodes
match  2c51a1434504  f5631d1f6f65  fuse pcs_kio: fix page zeroing beond EOF
match  80da9c2abac9  a6e519610d65  ploop: add a standby mode
match  1a02f2e53409  fc3ebc9156a6  ploop: move discard_* attributes in the tune_attributes group
match  97276a823848  07a59b24f492  mm/memcg: fix margin computation for kmem limit.
match  b887d3243525  b3a3ea2c417e  mm/tcache: Reset index before repeating invalidation
match  1824f1d18658  dc702486dbb2  mm/tcache: initialize 'repeat' variable only once
match  55365a6fbee3  224ae61ac748  config.OpenVZ.debug: disable kcov code coverage by default
match  29e92cb841f5  3b1540526f69  ms/x86/ACPI/PCI: Recognize that Interrupt Line 255 means "not connected"
match  a58f14f2943d  7f8c6aef1871  net/setsockopt: switch high order allocations to kvmalloc() in do_ip_setsockopt()
match  2484ffb4c43a  8fbc813a177f  mm: introduce kvmalloc_check() for safe calls to kvmalloc()
match  06107618bcf5  d8a6d294657f  net/sock: teach sock_kmalloc() to call kvmalloc() when possible
match  67c5d8d5944c  b764ca4d76c5  ve/kthread: pass ve to __call_usermodehelper_exec
match  c2dbf371215a  b0872244bd7b  ve/kthread: fix race when work can be added to stopped kthread worker
match  91bfc1336fd5  c85216e2d54c  x86/cpu: compilation fix for CONFIG_PAGE_TABLE_ISOLATION disabled case
match  5793095a4b6b  e6d94d08f62f  ve: fix reading container state from cgroup
match  810b6640bd6d  ea2b200b2458  cnic: use kvzalloc to allocate memory for csk_tbl
match  687db604a958  ec32226d6a23  bnx2x: suppress warnings on DMA memory allocation
match  b12853e347b0  3c1760079937  bnx2: use kvzalloc() to allocate certain internal data
match  f31209848b5c  ff34dc2da6f0  net/drivers/i40e: suppress high order allocation warning
match  5302d860300b  f38b1d822611  drivers/igb: increase link detection timeout up to 5 sec
match  d27b1ddf8a98  f25d86e315ba  bonding: show full hw address in sysfs for slave entries
match  a572461ee943  90ceeffdb26f  net/drivers/i40e: suppress warning on skb linearization
match  9d0595c7dc43  6212540b5413  drivers/igb: increase link detection timeout up to 10 sec
match  3b3937a3e0be  fff7b9ab488a  ms/ipv6: fix backtracking for throw routes
match  b602d54641db  6749ef79ba18  net/sctp: Replace in/out stream arrays with flex_array
match  3d72d00165a3  9e72f5f38b14  ms/dccp: defer ccid_hc_tx_delete() at dismantle time
match  f14ca25564ff  bd3bc3f0f598  ms/dccp: Unlock sock before calling sk_free()
match  1f1dcce2edd4  3860db12ea5b  net/dccp: fix use after free in tw_timer_handler()
match  45fda927043c  feb04534a26f  ms/dccp: purge write queue in dccp_destroy_sock()
match  997f7f8e6f68  a64056ce31f0  fasync: Fix deadlock between task-context and interrupt-context kill_fasync()
ok     b44367d57465  219e52439f54  ms/objtool: Fix memory leak in decode_instructions()
match  ca00be9c4ce9  82301ed31819  ms/x86/xen: fix upper bound of pmd loop in xen_cleanhighmap()
match  76d4f4104f61  de8d502bac70  ms/arch/x86/kernel/ptrace.c: Remove unused arg_offs_table
match  11a4245299d2  3d5b8993b6cd  ms/Disable the __builtin_return_address() warning globally after all
match  afd2d7c33b34  9e3160098517  ms/ACPI / video: remove unused device_decode array
match  621e80553764  4ecce2d19b09  ve/kernfs: implement ve-based permissions
match  2fd7b8d75139  c6afdad4e32b  ve/kernfs: fix lookup for kernfs superblock
match  ec10a05cbb85  524b3a1f44bb  ve/kernfs: hide forbidden entries in container
match  d6a19311979c  d1f14cf34137  ve/kernfs: add new interface to control per-VE nodes visibility
match  fadc4ed6820b  5f8ec6df2ede  ve/sysfs: add dentries visibility filter
match  7e2fdf054532  b2ade246b951  ve/kernfs: export kernfs_perms_set() helper
match  4879f6921555  60d835466479  ve/sysfs: relax sanity check for ns equality in kernfs_find_ns()
match  e0d59321aaac  74b9404b2eec  ve/sysfs: generic sysfs_set_def_perms() helper introduced
match  135606a78c97  3f1147ffecc3  ve/module: export sysfs dentries in containers
match  956fb504f84f  adf7e3d7bd85  ve/fs: allow mount fs in init userns if it's mounted in another userns
match  bb57a34a036a  9bc62ade8294  ve/fs/namespace: allow submounts in non-init userns
match  407051ec6fbf  60420764e191  ve/sunrpc: enable rpc_pipefs mounts inside non-init user namespaces
match  2e22ef7b889b  45b3992ab3ae  ve/mount: allow pseudosuper to temporary exceed the container limit
match  0f80091cb28f  3dba1a7351cc  ve/devmnt: initialize s_mode before deactivate_locked_super to suppress warning
match  ffe5dbfd4769  7a6e1a8d50fc  ve/net/neighbour: per-ct limit for neighbour entries
match  d2d0f3900fbc  4068708bdef3  ve/sunrpc: prohibit mounting rpc_pipefs in CT without nfsd feature
match  797ecf967be0  7c47d47fb52a  ve/meminfo: show "MemAvailable: ..." line in CT's meminfo
match  7462431ac995  d8d73b6c9c52  ve: prohibit opening proc/self/exe from VE for VD_VE_ENTER_TASK
match  0d677634c74b  e6d0b3222286  ve/net: warn in case a Container hits ve::netif_max_nr
match  b745c336e5b6  fb07ba335430  ve/net: allow to change max number of net devices for running CT
match  1f715647c5fa  590e9f823183  ve/netfilter/ipset: allow nfnetlink_queue module autoload
match  55c0e641de1a  3f3e3605da17  ve: don't hide cgroup mount root from pseudosuper
match  b2201c838a53  524fe2939106  ve/capability: introduce capable() wrapper which honors CT features
match  5189dc2d7739  28f0054b2887  ve/time: introduce CT feature to allow setting date/time
match  49ff949f0ae3  e7e9e37f4306  ve/time/ntp: allow CT ntp adjustment time tuning under VE_FEATURE_TIME feature
match  52238bd0ab48  36bb04d7fbba  venetdev: drop src_lh/dst_lh lists from veip_struct
match  28247d67ab38  bf2480c40159  venetdev: fix race between veip shutdown and add veip entry
match  7b50feb05611  284cb5e9d25d  cifs: drop unused mapping_table_ERRHRD
match  77b0740eb108  d93859a33b56  ms/ACPI / dock: Drop dock_device_ids[] table
match  0f5acb1dc506  8c04e7f0a564  ms/rtnetlink: remove unused ifla_stats_policy
match  367b2b14a068  b118b48ff020  ms/net/rtnetlink: remove dead code
match  472d6f496689  d1ed056245a7  ms/net-sysfs: remove unused fmt_long_hex
match  9a02bc07dc61  216407cd28dc  ms/memstick: mspro_block: add missing curly braces
match  9351d2c95967  214691b9bb7f  ms/tty: nozomi: avoid a harmless gcc warning
match  d3102b85fda4  b226bcc14abb  ms/staging: rtl8712: fix some confusing indenting
match  67bc81e6b950  b89a6a0934e8  ms/x86/mm: Disable various instrumentations of mm/mem_encrypt.c and mm/tlb.c
match  9449c3e8cb1e  134849c48ec8  ms/mm: fix mapping_set_error call in me_pagecache_dirty
match  d8afd73cf789  d05a8b6ddd53  ms/fs: check for writeback errors after syncing out buffers in generic_file_fsync
match  e7cac05d4404  48f630b1bbd5  ms/jbd2: don't clear and reset errors after waiting on writeback
match  6e72cd6da21c  e0d19ee3641a  ms/mm: clear AS_EIO/AS_ENOSPC when writeback initiation fails
match  101e31bc3cac  7641052631ac  ms/mm: don't TestClearPageError in __filemap_fdatawait_range
match  2cab65341c39  486287a9eafc  ms/lib: add errseq_t type and infrastructure for handling it
match  f687d15f8492  3f7d949109fe  ms/fs: new infrastructure for writeback error handling and reporting
match  aa83659be551  8cb1625219db  ms/mm: set both AS_EIO/AS_ENOSPC and errseq_t in mapping_set_error
match  edaac068069d  c0dac2601298  ms/Documentation: flesh out the section in vfs.txt on storing and reporting writeback errors
match  9d8ed5fe4151  36cc51df98d1  ms/dax: set errors in mapping when writeback fails
match  3a7ae1987b39  77a824736866  ms/block: convert to errseq_t based writeback error tracking
match  d3207b416056  728a866c0772  ms/ext4: use errseq_t based error handling for reporting data writeback errors
match  9cb3f5e03cbd  185d64c278fe  ms/xfs: minimal conversion to errseq_t writeback error reporting
match  d8cf0a7e37ea  845614539204  ms/btrfs: minimal conversion to errseq_t writeback error reporting on fsync
match  19720ec82807  60eb4da19586  config.OpenVZ.minimal: enable conntrack netlink interface module
match  5a8aba3984cf  1b42be6cdaa6  net: Change number of netlink repair
match  1d58cbc32186  48402b603801  kernel/lockdep: allow lockdep_set_no_validate_class()
match  be5ce65089b5  95b028da5693  fuse/kio_pcs: support FUSE_FSYNC
match  cd5c1764066c  32285647b5c3  fuse: support FS_IOC_FIEMAP in i386 compat mode
match  068c39660f14  abbd10daa56e  fuse/kio_pcs: adapt prometheus statistics to current vstorage state
match  1677e1a50a18  97ac9885a40f  fuse/kio_pcs: fallocate support at low pcs protocol level
match  6f39d8e8e709  b86e001ea950  fuse/kio_pcs: full fallocate() support
match  0a60276b1af7  8502108916c8  fuse/kio_pcs: FIEMAP support
match  1cd8be942138  c1897822a492  fuse/kio_pcs/pcs_map: fix process_flush_req lock leakage
match  2338e762a662  b655402cb452  ms/Revert "mm: page_alloc: skip over regions of invalid pfns where possible"
match  c8173b9fce7e  0a98dacd4065  ms/fs: Don't leak MNT_INTERNAL away from internal mounts
match  d33175996f8c  5ec17198d42e  sched/rt: Stop for_each_process_thread() iterations in tg_has_rt_tasks()
match  6905c860b3c5  9879c3a189e7  ms/sched/autogroup: Fix failure to set cpu.rt_runtime_us
match  b7370dd06648  e13ff74e8b97  mm/vmscan: shrink slabs from offlined cgroups
match  3a143dd7c506  7d5c11517d8f  mm/memcontrol: try to free all memcg during offline
match  d8de077d4108  c1e8fae266b2  fuse/kio_pcs: read is broken by FIEMAP patch
match  b5e3427dd6ce  e43619c19f6c  fuse: pcs_kio cancel requests after fused crash
match  cbe9e1902328  e7bcd77c6d43  blkcg: implement bio_associate_blkcg()
match  7a41059cf1d3  8912743e757c  cpuid_fault: Log table updates
match  caa333c532d1  52f9a6ac7d28  ms/relay: Use per CPU constructs for the relay channel buffer pointers
match  dce0ba177ba4  3822dac0d826  ms/tty: limit terminal size to 4M chars
match  ffe3f0743f61  67bfa622b310  tty: use kvmalloc for screenbuffer allocation
match  3cfd31e71db4  544d868316d8  fuse/kio_pcs: use kvmalloc for pcs_fuse_cluster allocation
match  b8d6d18da149  90eb9dd40ce5  ms/nfsd: more robust allocation failure handling in nfsd_reply_cache_init
match  f98da8d0b5cb  e2473232ea1f  nfsd: use kvzalloc() to allocate memory for drc_hashtbl
match  c9fb4555ca04  bbbcdb6d6e5a  fuse: Try automatically load kio module
match  4eb5078ba883  5ef792a529e9  kio: Stop always breaking connection in pcs_sockio_send() in case of EAGAIN.
match  22343224eade  2f5f0c8a5d45  fs/fuse: move FUSE_SUPER_MAGIC to magic.h
match  a7a5491b64ce  d983661bc1f7  fs/fuse kio_pcs: check fuse_conn args
match  6250aed3f6d3  f8ecc3316b10  fuse kio_pcs: ports from new user-space
match  3d1dddb79564  860aadc8ebbd  mm/tcache: fix rcu_read_lock()/rcu_read_unlock() imbalance
match  d7a58365ed39  91adb256e79a  fuse kio: Do not requeue requests when connection is dead
match  bd9bbcc4c8e8  da86a6e99b1c  fuse kio: Declare pcs_sockio::parent type
match  bfd09d6a7421  eb20ef6a58b4  fuse kio: Cleanup in struct pcs_rpc
match  915769fad17c  5b4d49897e15  fs/fuse kio_pcs: remove s_subtype check
match  d63ba5dbdd09  25f5702ae987  fs/locks: add more info for unexpected lock
match  e0d8281c08a8  83e2693bc933  fuse kio: Introduce fast path protocol version,
match  b19610f7cb62  6dd07725ac86  fuse kio: cleanup in token enqueue
match  6959178f9c98  aa6a84e9450e  fuse kio: invalid assertion
match  7e5f8af26f37  deb3f3f5cac5  fuse kio: Remove useless code in pcs_cs_destroy()
match  3c4eb6f9157c  30c26f4b0760  kernel/panic.c: don't dump_stack() in add_taint()
match  638f17c58a4f  a531c33e81a4  fuse kio: Introduce pcs_cs_list_of_cs_link()
match  27ad0a203210  c2d26f1395ad  fuse kio: Fix potential use after free
match  15e41f737602  f7e51002c125  fuse kio: Fix possible use after free in cslist_destroy()
match  18c39379da7b  257d2bb7d8bb  fuse kio: Introduce pcs_cs::use_count instead of ::is_probing
match  c164d62cbec3  a55c90fa8afa  fuse kio: Wait till cs is unused in pcs_csset_fini()
match  84a1608faab6  8a39ce1e8808  fuse kio: Change order around pcs_map_notify_addr_change()
match  c66ec32ed7e7  89dd610ac134  fuse kio: Fix fix deadlock during change CS address
match  47e0fb481ded  522027dffa5f  fuse kio: Fix dereferencing of NULL cs in map_replicating()
match  1898f2b1ee46  53c7182a37fb  fs/fuse kio_pcs: some cleanup ireq_on_error_()
match  21c82f4ab8fb  6da2f7ff086e  fuse kio: Handle fuse_map_resolve() failure in pcs_map_queue_resolve()
match  f7fe1b6f0719  0e175126b7bb  fuse kio: Arrange rcu modifiers around accesses to pcs_cs_link::cs
match  0ab3950758d3  3393d9d6bb34  fs/fuse: disable optimization fuse and kio_pcs in debug kernel
match  11e7dca55bbc  6a23e2e3d76e  fuse kio: Use dereferenced cs in cslist_destroy()
match  023a0aa9fe60  a263fd2d1e9b  fuse kio: infinite loop in processing congestion queue
match  e05f133ded4b  c9c6669096b9  fs/fuse kio_pcs: move pcs_ireq_queue_fail()
match  15b57ca84b94  c0a74c6276ea  fs/fuse kio_pcs: handle error of submit_size_grow()
match  c5742f2d0f40  6c3d6ac5190d  fs/fuse: export fuse_release_ff() and fuse_write_file()
match  855cb8506294  ff161da6036d  fs/fuse kio_pcs: pass the file handle for FUSE_SETATTR request
match  e06c18dd4aa4  28533b7d4eaf  fs/fuse kio_pcs: fix double unlock of m->lock in pcs_map_get_locked()
match  5d2b8fd48949  3d2991590d36  fs/fuse kio_pcs: fix out of bounds roles_str[] array access
match  40c557d3fb23  073a2c1fca18  fuse kio: Delete excess unlist in pcs_csset_fini()
match  084e5c65408a  5bccb163152b  fuse kio: Do not NULL used pcs_cs_link::cs during connection destruction
match  4becbaadff13  77ac5a7b764b  fs/fuse kio_pcs: fix NULL pointer dereference in cs_keep_waiting()
match  f126a49bf06a  f49a54a8e0c4  fs/fuse: remove extra check for empty active_list
match  2bf2588ee18e  591bf424b68a  ms/errseq: rename __errseq_set to errseq_set
match  1320419ebb64  2ddad151ff3a  ms/Documentation: add some docs for errseq_t
match  d6e723822eca  8e0b5cb99d9e  ms/mm: consolidate dax / non-dax checks for writeback
match  38ae6fc1ccc8  423205bd6e13  ms/mm: add file_fdatawait_range and file_write_and_wait
match  1342eed367be  f9883f082c07  ms/fs: convert sync_file_range to use errseq_t based error-tracking
match  941f86d64a9f  b82e4649ff5d  ms/mm: remove optimizations based on i_size in mapping writeback waits
match  5f77d8abc415  434ee116654f  ms/errseq: Always report a writeback error once
match  d9b61b58a758  c2f6a930c5e8  ms/fs: use mapping_set_error instead of opencoded set_bit
match  8927fe67fe65  93b7755b8622  ms/mm: have filemap_check_and_advance_wb_err clear AS_EIO/AS_ENOSPC
match  623b01581e95  07b753b87e6a  fuse kio: Wait pending requests on final fput()
match  473b24ffdc00  6c22cbe841b8  fuse kio: Place more pcs_cs_link::cs under rcu dereference
match  8aedc5456c25  28000b7bed9d  fuse kio: Add comment to fuse_release()
match  70d639d46ab3  fa9a53222069  fuse kio: Add missed spin_lock into sync_timer_work()
match  fec70904906e  228f31e18c41  fuse kio: Fix unbalanced queueing and dequeueing pcs_map_entry::sync_work
match  6bfd00a03c9e  ec01d4980738  fs/fuse kio_pcs: add more traces for cs requests
match  eb674f2d838f  5617e95ea403  fuse kio: Get msg size in second argument of pcs_sockio::get_msg()
match  41fb62ac80a4  8c5e3d451966  fuse kio: Skip processing of messages above PAGE_SIZE size
match  b4deb4aa21d2  547333aaf591  fs/fuse kio_pcs: mapped requests have map version preinitialized
match  0c237bb866b0  ee7685194f8d  fuse kio: support unix socket for local CSes
match  415b866e9d2f  40211fd1247e  fs/fuse kio_pcs: handle old map in pcs_cs_submit()
match  332ad702cadc  b7eaa078706e  fs/fuse kio_pcs: fix missing hbuf.uid update for ireq split case
match  d19edc366c47  d88473f3ff73  uprobes: Fix the memcg accounting
match  b288716ede1a  0d4e061cca1c  mm/memory: Don't charged cowed private pages as cache
match  22200c41e981  57d897fe9f02  fs/fuse: set inode entry for FUSE_FLUSH request
match  96e87edff1eb  0eb8e2614f66  fs/fuse kio_pcs: add handling FUSE_FLUSH in kio_pcs
match  342014ae72fd  46399f9a8e16  fs/fuse kio_pcs: increment PCS_FAST_PATH_VERSION to 1.1
match  b90d20a13497  5e5ab5f781de  fuse kio: Check returned FUSE_SETATTR size
match  24ef9743bd41  e2738ab74989  fs/fuse kio_pcs: enable traces for cs sync
match  a050350e5216  a488fbaf6fb7  fs/fuse kio_pcs: replace pr_info() with ktrace for ireq fatal error
match  c9aa73785fe2  a1cb4b81a0ce  fuse: Teach fuse_blocked_for_wb() handle no files case
match  4f333af49aae  716289e829f3  ms/x86/efi-bgrt: Replace early_memremap() with memremap()
match  80ddda84b6b5  d5513a59ab40  fuse kio: error PCS_ERR_CSD_LACKING is non-fatal
match  6a362e2694cb  ed5a6a8b6474  mm/tswap: fix lockup in tswap_evict_page()
match  4e98e6af6f63  53c35e6641af  fs/fuse kio_pcs: fix grow work execution with zero
match  65f29190837f  d2cab8d0d11b  ms/lockd: fix "list_add double add" caused by legacy signal interface
match  3581a972d68a  4052e030fe86  ms/proc: do not access cmdline nor environ from file-backed areas
match  83927a687ef3  4f7c54a72349  fuse kio: Make KIO to require writeback_cache
match  536ef7bd9758  b04d272d5d42  fuse: Refactor fuse_open_common()
match  691ff0f13921  043e26699893  fuse kio: Read file attributes every first open
match  b435dc27b11d  8b6c3e51bee7  IPoIB: use kvzalloc to allocate an array of bucket pointers
match  2ac217d0fa45  2ae49398e662  fuse kio: missing local client ID initialization
match  0f76d9b848d4  34c329bf616f  fs/fuse kio_pcs: bugs in integrity protocol for fallocate
match  02160ffe54fb  be590fbd2e3f  fuse: Relax BUG_ON() in fuse_direct_IO_bvec()
match  0a12990ca31d  07c3c3a99e2c  fuse kio: Fix NULL pointer dereference in pcs_map_get_locked()
match  c775f6cf33f0  bc0c7989cca9  fs/fuse kio_pcs: fix NULL pointer dereference inside a dead map
match  a70f06856d84  68c402c56c0a  rcuupdate.h: Switch to READ_ONCE and fix NULL-deref in __task_pid_nr_ns() again
match  6039139163fe  ebac94903f3c  fuse kio: Make struct fuse_inode::num_openers int
match  e6f7f44ead82  13af2c03b81e  mm/memcg: Bypass charges to offlined cgroup
match  766443c779f0  c21b8efbae72  mnt_ns: introduce global list of mount namespaces for debug
match  787911f5c06e  5403c2ceaa55  fuse kio: logging improvements
match  0f54eaf745db  1a8dbfb13da2  fuse kio: avoid spurious uncork setsockopt on unix socket
match  e90a98833f46  777ad388df50  fuse kio: control internal tracing with module parameter pcs_loglevel
match  d33beb028d2e  f7d8bc18d8d3  cgroup: fix css_tryget() to not succeed on offlined css
match  229c79e9e9ea  dd6936dce07f  sched: Make calc_global_load() return true when it's need to update ve statistic
match  89824556fe35  661a51eefea4  sched: Export calc_load_ve()
match  cdf53073700c  7f9dc818a75d  sched: Call calc_load_ve() out of jiffies_lock
match  f50873f40777  6795fa590c0d  sched: fix cfs_rq::nr_iowait accounting
match  6472a49855dd  f089f54255e9  kernel/sched: Use kvzalloc to allocate the array of ctl_tables
match  168b717dc40c  fd10ef2f2c85  ve/cgroup: do not link a CT cpu cgroup twice into ve_root_list
match  9b7903af7728  058a5e5127d0  proc/cpu/cgroup: make boottime in CT reveal the real start time
match  913e95542940  8358ad59da2c  x86/microcode/intel: hide warning on high order allocation for microcode area
match  67697a2d1ec1  e70297a2a0e1  fs/fuse: add non-blocking request flag
match  c375c8d89b08  d7a60d0d7874  fs/fuse kio_pcs: throttle async KIO requests
match  dd78087dbea1  a6ee9cc7501d  fuse kio: kio must not fail when not being able to claim a file
match  1a37a91486ab  d96160cb024f  fs/fuse kio_pcs: style fix in pcs_fuse_submit()
match  cb1d8fc3b41f  86e8439afeba  fs/fuse kio_pcs: fix NULL pointer dereference in pcs_flushreq_complete()
match  578363f98740  d4246d32b088  mm/memcg: don't swap cgroup's pages during offline
match  8c1a9be72450  890541e3ebf7  fuse kio: Move map_chunk_start() and map_chunk_end() checks
match  d7456505a6ee  a0ed1d30ea11  fuse kio: Allocate pcs_map from kmem_cache with SLAB_RECLAIM_ACCOUNT flag
match  fd350253e9e8  6b65b2f05902  fuse/kio: Add socket io fault injection
match  90ec59a2afcb  1926b3872b3c  bc: implement ubc "numproc" limit based on pids cgroup
match  8aa7ef89ea87  e2bc783f391c  ms/rpc_pipefs: fix double-dput()
match  83c4bde8d15e  4f786ae19ba4  rh/fs/dcache.c: Revert "fs/dcache.c: add cond_resched() in shrink_dentry_list()"
match  b934e609554c  6c63e442db94  fs/fuse kio_pcs: missed *msg_size setting in rpc_get_hdr()
match  2ae5e1b0a405  e302563268cc  config.OpenVZ.minimal: add some hardware drivers support
match  2c36309ea801  c46148590402  ploop: store exec_ub in ploop request and use it while processing requests
match  61ee8cc6d8e2  c4724c7edf9b  block: store exec_ub on struct request and use it
match  c3b318992292  23232f0e4868  fs/fuse kio_pcs: disable TRACE/DTRACE for release kernel
match  0f88e292482c  5650c7fd30a3  ms/sget(): handle failures of register_shrinker()
match  c8da18ea9dd0  a32465ad8c0d  ploop: avoid crash if ploop request has uninitialized preq_ub
match  3be155cf941e  f3e6016d87e2  vz_latency: don't account allocations in interrupts to random tasks
match  80efb8676d75  18eabd70c8c2  /proc/vz/latency: distinguish atomic allocations in irq from in task atomics.
match  b81f77d6f93a  0dbb16ed1c04  /proc/<pid>/vz_latency: Show maximal allocation latency in the last second.
match  e10e973d54d4  8c656a8d5a1e  /proc/<pid>/vz_latency: Add scheduling stats
match  89a543e3048f  4a570e308e56  ms/mm: assign id to every memcg-aware shrinker
match  fe496dfaa931  2a5d62d12f82  ms/mm/memcontrol.c: move up for_each_mem_cgroup{, _tree} defines
match  81ecb39da654  85e31d2990f3  ms/mm, memcg: assign memcg-aware shrinkers bitmap to memcg
match  527f5c8e75a0  194ccbec93bc  ms/fs: propagate shrinker::id to list_lru
match  0d175bf0e41f  fed5d3c51f21  ms/mm/list_lru.c: add memcg argument to list_lru_from_kmem()
match  e6a482c12d8a  fab294614171  ms/mm/list_lru: pass dst_memcg argument to memcg_drain_list_lru_node()
match  e6de1568c0da  ecf228e7ae82  ms/mm/list_lru.c: pass lru argument to memcg_drain_list_lru_node()
match  260d8c9ff991  e50b786e7b5a  ms/mm/list_lru.c: set bit in memcg shrinker bitmap on first list_lru item appearance
match  1bc940d8ddf2  e5acaab7095c  ms/mm/memcontrol.c: export mem_cgroup_is_root()
match  5997c36d77d0  bd665f34ab90  ms/mm/vmscan.c: iterate only over charged shrinkers during memcg shrink_slab()
match  78317747e147  2ed005e5753c  ms/mm/vmscan.c: generalize shrink_slab() calls in shrink_node()
match  e82ac704720b  95913d3c4515  ms/mm: add SHRINK_EMPTY shrinker methods return value
match  1442bb29a46a  edd1e3da109e  ms/mm/vmscan.c: clear shrinker bit if there are no objects related to memcg
match  dfb909b8716a  d6cb12877353  fuse kio: Cleanup in pcs_fuse_submit()
match  8896652ebaab  b101c2602a7d  fuse kio: Extract fiemap iteration from fiemap_worker() to separate function
match  fe40f929770e  d9978165ea0c  fuse kio: Move it variable from stack to struct fiemap_iterator
match  ebb792c8b895  f9b681c3e67e  fuse kio: Kill fiemap_worker() thread
match  84d01416f645  e1990dcb0093  fuse kio: Move position advance in fiemap_process_one()
match  67e095571ebc  aea2e3972755  fuse kio: Move fiter ireq iocount assignment
match  0b8e1d41d7ca  06db1fe09e4f  fuse kio: Introduce fiemap_work
match  2bb3b89205a0  6af1a7887dc9  fuse kio: Async queueing of fiemap from work
match  235751f04f68  d8cb3cba3115  /proc/vz/latency: Show max latency in 2 min instead of 5sec.
match  d049663e0466  d4125a4f0024  ms/mm: kvmalloc does not fallback to vmalloc for incompatible gfp flags
match  c4ed2879f2f9  53f4d476c6ed  mm/mempool: Use kvmalloc to allocate array of element pointers
match  cd9c823bed59  b41e1309d0f0  x86/kvm/vmx: suppress warning on high-order allocation
match  5052a7bb51ef  2563a4335cbe  ploop: kthread_create() errors processing
match  0857855b37e8  07158d458107  fuse kio: Do not zero already zeroed fields in pcs_find_get_map()
match  b1c97a7c152d  3284cb10ca4f  ms/unix: add ioctl to open a unix socket file with O_PATH
match  c1818f01cb28  1e3a830fdecb  mm/vmstat, io_acct: fix PGPGIN/PGPGOUT in container's /proc/vmstat.
match  9be53d33ec94  00270977b022  mm/vmstat: Add more vmstats in containers /proc/vmstat
match  f49800745095  5ee254a5ea0a  fuse kio: Do not zero already zeroed fields in pcs_sockio_init
match  ab4877fcd4b3  b270204b672e  pfcache: don't inherit vm_private_data on split and copy
match  b75b99c37a41  0d8e9a5835ce  fs/fuse kio_pcs: improve rpc to cpu binding
match  0dee9b0738e5  6f0688c57776  fs/fuse kio_pcs: time slice for rpc rebinding
match  0a706b1071ce  6838e761ae7f  IB/core: use kvzalloc to allocate ib_device
match  cad4c26c80df  893514c17c0a  ms/slub: Fix possible format string bug.
match  5529fe2de166  890d89805a7a  ms/slub: fix leak of 'name' in sysfs_slab_add
match  d9373b6d98bb  0b0b29a35208  ms/mm/slub: fix slab double-free in case of duplicate sysfs filename
match  d250a8a4da12  916c5b580d60  ms: Add braces to avoid "ambiguous ‘else’" compiler warnings
match  d0841966f1af  8a95a88d345b  mm/slab: use monotonic serial number for naming per memcg caches
match  3c71b63c6194  ba82d524f1ee  ms/slab, slub: skip unnecessary kasan_cache_shutdown()
match  b0363bacea5a  89c71c2fc260  ms/kasan: depend on CONFIG_SLUB_DEBUG
match  53a233b8b674  cc2de2470269  net: reorganize skb_gso_size_check() description to make htmldocs happy
match  754531d5775f  bddea09ea816  mm/init: hide most of start_kernel() from KAsan
match  aa223556b927  b30eb7e67650  md/bcache: add queue parameter to part_round_stats() call
match  8f685100efe1  3824ca1f76d7  mm: Fix int overflow in callers of do_shrink_slab()
match  da024814dcd5  1a639817e544  fs/fuse kio_pcs: fix race between req->end() and request_wait_answer()
match  71f4c75940b8  0074063ee8e1  fs/fuse kio_pcs: remove fuse destroy request
match  065891a1f0d2  6edcb8e8ce99  fs/fuse kio_pcs: drop rpc connection close in pcs_rpc_engine_fini()
match  3cfd90c1cc5a  783d23acc9de  x86/mm/kaiser: Fix build with CONFIG_XEN=n
match  187b199c9541  64f2c2a8ebdc  fuse kio: initialize batch in pcs_map shrinker
match  6ca8d0c6cbd4  7892f83fe55e  fuse kio: Add schedule_timeout() into pcs_rpc_fini_verify()
match  0b31ce762c74  79f70778088f  fuse kio: Do not get useless fuse.ko module reference
match  3f0ae5237cde  bf2d73516827  fuse kio: Revert fuse_request_free() changes
match  ab2b04558081  3bd4512a5f1b  fuse kio: Refactoring in fuse_show_options()
match  4b8a7c1bc65b  692adc5a53c8  fuse kio: Introduce cached_op
match  1cb00200bede  295737bbd2df  fuse kio: Reorder process_pcs_init_reply() and free memory on failure
match  536f6f90c156  957c5644f072  fuse kio: Fallback to plain fuse in case of version mismatch
match  8479b776d006  fb19eda6b32d  fuse kio: Protect struct pcs_rpc_engine::{unhashed, ht, nrpcs}
match  1752de3ee879  6de019fd65f8  fuse kio: Add debug printk into process_pcs_init_reply()
match  a74c75ad52d9  2d840d950645  fs/fuse: fix mutually exclusive flags in fuse_send_unmap()
match  dcee8dfae003  49199f84726c  fs/fuse: initialize req->io_inode in fuse_send_unmap()
match  9aba14823095  aad40398d60f  fs/fuse kio_pcs: split kpcs_req_send()
match  6ba7d4929643  e459ffe6dbf3  fs/fuse kio_pcs: prevention of falling kio reqs to usermode
match  dee1c429e57c  1d210361c01c  fs/fuse kio_pcs: fix double free of synchronous requests
match  3dee1feec0e4  e4e26d5f1ad1  fuse kio: Fix deadlock in kpcs_req_send()
match  bb60a2239241  8b743c8e71d9  fuse kio: Return possibility to handle files served in userspace
match  fa6ca0188edf  b53a17bab7a0  fuse kio: Fix spelling in process_pcs_init_reply()
match  ce2277e20e6d  dc52cd65e545  ms/x86_64, traps: Rework bad_iret
match  be3723681b42  15671311ebc6  ms/x86/asm/traps: Disable tracing and kprobes in fixup_bad_iret and sync_regs
match  bf96ef855cd9  c0f00d8f077d  ms/x86/asm/64: Clear AC on NMI entries
match  ef8a2cdf3ae8  5ae1d30ffcfa  fuse kio: Do not try to populate fuse_inode::private on second open
match  0cd039511ea6  e6b24e0fc24b  fuse kio: Differ fuse_pcs_kdirect_claim_op() return values
match  7a70c850dde9  94b5506de9a5  fuse kio: Refactoring in struct pcs_rpc
match  c2aa378d8f39  033ad53ca982  fuse kio: Port "ignore uninitialized CS addresses" commit
match  02c2171ce9d5  83e458f4d34e  fuse kio: Use __maybe_unused
match  bc7fbfdfa14f  fa895c360217  fuse kio: Use sio eof instead of parent to determ abort
match  92a5943ed884  d92b33eee5b5  fuse kio: Reorder callback assignment
match  32f52e994f60  d2cda502dae2  fuse kio: Add pcs_cleanup_wq
match  f8b09d4467b7  e85ec1be8e62  fuse kio: Destroy rpc in work func
match  b5fc1a84c910  77e63507e86f  fuse kio: Introduce pcs_sk_kick_queue()
match  8a01a7ac4a1a  161c630efc32  fuse kio: Dereference sk_user_data under rcu
match  213b91046d1f  6f57d2883bb1  fuse kio: Fix rpc socket leak on rpc_abort()
match  da145be2c6d8  9190ac442438  fuse kio: Hold pcs_rpc counter till sio may be freed
match  d4e10938c8df  5b08f6997ea7  ms/mm, mempolicy: migrate_to_node should only migrate to node
match  58c5beb95aac  2dc56b090ee7  fs/fuse kio_pcs: drop old mapping after size growth
match  6fc5e9484a64  39fe264f7bd6  x86,ia32: Restore 32bit personality
match  b231d247702e  45cc33b4ba9e  fuse kio: Stop self-abuse of rpc counter in rpc_queue_work()
match  39e69ff2545c  97d72572a487  fuse kio: Check for null ep in pcs_rpc_deaccount_msg()
match  faaba34b8bf3  1d18ae88aa6b  fuse kio: Move abort & destroy block up in pcs_rpc_send()
match  e61f6625cddd  64022aaf3e47  fs/fuse kio_pcs: flush rpc work inside pcs_rpc_destroy()
match  3fbad6f95761  d5985e7b0be7  fuse kio: Fix deadlock at pcs_fuse_submit() error path
match  2b94d198f3a1  b2f3dfb64ead  mm/tcache: don't insert empty reclaim node
match  f3d65250cfd7  1c035bff3acf  mm/tcache: rebalance tree if isolation failed
match  25dd5616141a  3b611dca7c09  mm/vmscan: shrink tcache, tswap upfront everything else
match  10cd29b2afc5  b906f8ae1f17  ms/ipc/shm: fix use-after-free of shm file via remap_file_pages()
match  dd99b9611997  70fe29075fe2  fs/fuse kio_pcs: fix NULL pointer dereference in pcs_mapping_truncate()
match  09158b625355  94bbe5def63c  fuse kio: Unexport pcs_ioconn_close() and pcs_ioconn_unregister()
match  1704c065fedf  03bff473d510  ploop: fix int overflow when calculating used_pos
match  cd5c11ae19d9  335eb4123e65  memcg/debug: warn early when releasing memcg css with non-zero kmem
match  1c2b13d39097  6fddd24f479b  kexec, kasan: increase KEXEC_AUTO_RESERVED_SIZE under CONFIG_KASAN=y up to 1G
match  173281f41a8d  cbe42e3178c8  ms/ksm: React on changing "sleep_millisecs" parameter faster
match  5ce7d60a5a12  204100c1ed2a  lib/kmapset: fix undefined behavior in kmapset_cmp()
match  89a7aec2b357  c627b568f304  ms/kprobes: Avoid false KASAN reports during stack copy
match  c72c64726646  3bb8d7cf198f  ms/kasan: add functions to clear stack poison
match  34bc15306fee  f9c2c878b94a  ms/kprobes: Unpoison stack in jprobe_return() for KASAN
match  0bbb14103aa3  9ae7c5ba1639  ms/sched/x86: Add 'struct inactive_task_frame' to better document the sleeping task stack frame
match  a30b6dc6d9c4  d3f1b7508f79  ms/x86/unwind: Disable KASAN checks for non-current tasks
match  4c1eae0a1a4e  47739a8de4ea  fuse: Fix parse_fuse_opt() return values wrong interpretation
match  d28416bd1f23  84c46874bcf3  fuse: Prohibit kio engine from containers
match  58d272f80b8d  abc05aeb770e  fuse: Switch unused engines off in Kconfig
match  179138869c5a  589b1aa910f9  fs/fuse kio_pcs: make map_truncate_tail() working as the original from libpcs_client
match  10cc41c82277  6a5268e3a646  fs/fuse kio_pcs: forgotten setting of the next phase
match  d8c8debd5556  746122a39dbf  fs/fuse kio_pcs: fix condition for map resolving in pcs_mapping_truncate()
match  1415cd4de809  c412dd5d4400  fs/fuse kio_pcs: protect valid_for_truncate() by m->lock's
match  1244b073f214  5f4c3d3cbd7d  fs/fuse kio_pcs: fix map leak in pcs_mapping_truncate()
match  494d455bd678  7fa62a347043  fs/fuse kio_pcs: simplify pcs_mapping_truncate()
match  1faef4dbb6fb  08068cb3c9f1  fs/fuse kio_pcs: fix map leaks in process_ireq_truncate()
match  d69453d88ecb  29b3be143d75  fs/fuse kio_pcs: NULL pointer dereference on access m->mapping->chunk_size_bits
match  cd414d7f047e  7b7cc67cedbf  fs/fuse kio_pcs: NULL pointer dereference in map_submit()->MAP_ARGS()
match  5458bfe4ab1b  987e0debd8a3  fs/fuse kio_pcs: cleanup in truncate (backport)
match  359f6135e28a  c7f6f48998b8  ms/vmscan: memcg: always use swappiness of the reclaimed memcg
match  f7f2b2a08dc1  14cba1c11140  ploop: create helper to access ploop_device->entry_tree
match  f1bf49a77402  5ae0d1e19bca  ploop: add separate tree for existing discard requests
match  1b390fda44fc  dc39826ef8e4  ploop: change default of discard granularity and alignment attrs to PAGE_SIZE
match  7916178808b6  ad0645875337  ploop: fix negative discard size in preprocess_discard_req()
match  2d6cfffe9858  20e325dacf26  ploop kaio: successfull alloc should adjust alloc_head
match  3a2722bbf718  2ffb51ddc30a  fs/fuse: add assert on i_mutex in fuse_send_unmap()
match  03dd075f40a5  8e0448d47105  fs/fuse kio_pcs: add assert on i_mutex for PUNCH_HOLE and ZERO_RANGE
match  eff00cc8f8c7  6c02e90f1819  fs/fuse: add assert on i_mutex in fuse_send_write()
match  c317ec012a0d  56312defa092  mm: cleancache: fix corruption on missed inode invalidation
match  9763179f7da2  7580d32b9e31  fs/fuse kio_pcs: make pcs_map_truncate() easier
match  893d1d9aee05  dc5407694525  fs/fuse kio_pcs: cleanup kpcs_setattr_end()
match  002f22d5d95b  dc27001e1ec6  fs/fuse kio_pcs: invalidation maps in setattr kio
match  42d535c0c82f  25bc4865465f  ploop: convert prealloced_size to absolute offset
match  58642ed92873  19a583eb81dc  fs/fuse kio_pcs: fix update cs state after receiving new map
match  2e49a3091339  472260067b6d  vzstat: account "page_in" and "swap_in" in nanoseconds
match  2b0d4a7666de  c93cfe52e601  ms/dlm: fix possible call to kfree() for non-initialized pointer
match  4e123b8d00de  e4954379c731  fbcon: use kvmalloc() for scrollback buffer
match  ac40a2c5a7a3  cc5a7dfee3c5  fs/fuse kio_pcs: replenish netaddr_cmp() with rdma type
match  d754f1b2c3ba  bbe399fe4003  ploop: move standby mode setting to separate function
match  59f17e9250f2  0fc186346e50  ploop: move to standby mode after fsync() error too
match  e868f1e0b1a3  3f961ab67e73  ploop: move to standby after -ENOTCONN too
match  83282928f80a  e752090c3885  fuse kio: Round down extent start in fiemap_process_one()
match  f17dce4d1a07  c0f3c95b3815  fuse kio: fix timer setup so it actually delays ireq
match  174367bc2ace  0a1f3f23cae9  fuse kio: never ignore fuse_req error during PCS_IOC_GETMAP
match  53fbf952fa5f  60623ed1bbb9  ms/lib: Add xxhash module
match  1eb11e192f70  949a1f56aec6  ms/xxHash: create arch dependent 32/64-bit xxhash()
match  c883bb4f8c06  2aec69a7cd1a  ms/ksm: replace jhash2 with xxhash
match  1d7e6db335b6  0fac3a0898b5  nfsd: disable UMH client tracking in nested net namespaces
match  28e27c9efcf6  a3e63675814b  sunrpc: cache_head leak due queued request
match  0df7015bfd4c  11a47c1efd9d  ms/sock_diag: fix autoloading of the raw_diag module
match  72c0d5fc4eec  81d10d00a69e  fs/fuse kio: fix loss of FUSE_FSYNC/FUSE_FLUSH reqs
match  21efa955c947  446399e830a4  fs/fuse kio: fix sreq and msg leak in prepare_map_flush_ireq()
match  473986899bfd  414effb58713  fs/fuse kio: retry allocation PCS_IREQ_FLUSH request
match  ba1267298738  6d3f0d3614ed  mm/memcg: Fix NULL-ptr dereference when memcg diabled at boot.
match  a390c3ad6ce1  576511fb325b  tcache/tswap: don't shrink tcache/tswap until they are initialized
match  8792b46f6e26  14edfcc57639  fs/fuse kio: missed clean di->size.op in failed shrink request
match  cf938de1179e  944890a1f0bd  mm/page_alloc: add latency to the page_alloc tracepoint
match  9573662efa90  4a8a14f49482  fs/fuse kio: missed cleanup for interrupted shrink request
match  8dc643bea5bc  d91146620e2a  fuse: do not wait for completion of inessential writes in fuse fsync
match  5158d4ccfc02  95f9973f6d92  ms/drivers/gpu/vga: allocate vga_arb_write() buffer on stack
match  8ae99fc6cfc4  b54eec0c1531  fs/fuse kio: fix mapping dereference in a dead map
match  f088fe14038f  4e23031bc981  fs/fuse kio: satisfy pure FALLOC_FL_KEEP_SIZE immediately
match  553fb2793680  f22ac3f3d1a9  fs/fuse kio: backport immediate-write attribute handle
match  a1d4c55e4501  ddbae24d9196  fs/fuse kio: add support PCS_CS_IO_SYNC flag
match  d5041bcff997  041a45f26556  fs/fuse kio: deny unavailable ioctl's in kio
match  adf502a95cd2  a7d864894521  fs/fuse kio: bring fuse ktraces to a common view
match  12fb7d15fc10  b29f57094d53  fs/fuse kio: disable duplication FUSE_K* messages to debugfs by default
match  3ada08a904a9  ff9e5c64e01e  fs/fuse kio: make it possible to enable TRACE/DTRACE in the release kernel
match  e7bc505e58d3  ba8afc9b03b8  ms/huge pagecache: extend mremap pmd rmap lockout to files
match  c58d0e5f126f  4bbbe70c86e4  ms/mm: speed up mremap by 20x on large regions
match  03916a06ae10  f8078ccf3711  ms/mm: select HAVE_MOVE_PMD on x86 for faster mremap
match  1211d90ad9c6  b34014d13062  ms/mm: workingset: size shadow nodes lru basing on file cache size
match  4af2db05d6a8  5260ea5b678f  ms/mm: workingset: update shadow limit to reflect bigger active list
match  bb2aef146a40  36ea93f3ae02  ms/slub: Make cpu partial slab support configurable
match  cc5674e562c1  a6d7c602f2af  ms/mm/slub: set slub_max_order = 0 by default.
match  59896aae9d0b  d2dfb16ee143  net/gre: Consider VE_FEATURE_IPGRE on new net creation
match  08916fe6639e  11a6dfc5eace  net/ip6ip: Consider VE_FEATURE_IPIP on new net creation
match  ee9658c8d09d  d932f8126f61  seccomp: Add PT_SUSPEND_SECCOMP in __secure_computing
match  9129a708e868  efc8a8abf09c  ms/sunrpc: use SVC_NET() in svcauth_gss_* functions
match  9b16810002f2  31df7c292aa9  pfcache: silently drop "trusted.pfcache" xattr when set on inappropriate fs
match  56c78334672b  43565af0a8c1  ms/ipvs: remove an annoying printk in netns init
match  f8d73ef77e78  f83dd134544d  fs: Export symbols replace_fd() and create_pipe_files()
match  9fad2a107a34  8119dfc85461  fs/fuse kio: invalidate files for kio
match  3a78af979420  c4a61e7569ca  ploop: Fix discard BIOs mis accounting
match  d3c883fe8609  3b9e95441dc3  fs/fuse kio: add FUSE_S_FAIL_IMMEDIATELY check in pcs_fuse_submit()
match  740804ff440b  ec7b8fc71810  fs/fuse: fix unsafe killing fiq->pending requests
match  8fec9809084f  290e2a4b5963  net: export net/core/somaxconn sysctl for unprivileged users
match  7ba0b727afce  02b3db195c15  ploop compact: remove alloc_head BUG_ON before truncate call
match  087d9b1ba615  a2a45b1fd710  ms/virtio_balloon: fix another race between migration and ballooning
match  d924f9196196  405063aab3a3  x86/pci-dma: don't warn about high order in dma_alloc
match  113406b134c8  458388a4221d  ploop: Remove unused argument get_block
match  7d1374b6e535  9c986c16d777  ploop: Remove dead "pcss"-related code
match  dae40087b3bc  782fb6839764  ploop: Kill unneeded PLOOP_S_WAIT_PROCESS bit
match  f859ec672537  5874409a3f56  pfcache: don't get inodes which are beeing freed
match  8a0e4e38a117  76aebee01bda  mm/vmscan: Don't shrink active lrus on the first try.
match  3c36e81912de  8f485a5a0c4d  mm/page_alloc: use sched_clock() instead of jiffies to measure latency
match  0f7b50b37e8f  85606206b445  ploop: Remove unused argument of __map_extent()
match  99b03aff0ae7  a9426ed6c04b  x86: Add __GFP_ORDER_NOWARN to dma allocations
match  2af3c0ddef43  0c85d9a659ce  i40iw: use kvzalloc to allocate array of control qp requests
match  4cf489db2663  cb0e317b2fb1  i40iw: Use kvzalloc to allocate i40iw_handler
match  29a10d85ea2b  423a125d5241  i40iw: Use kvzalloc in i40iw_allocate_virt_mem()
match  91248bdfac76  03058202c258  ms/mm: vmscan: pass memcg to get_scan_count()
match  911c8fbedf3d  d87f832d879b  ms/mm: workingset: #define radix entry eviction mask
match  f85ec3c55a36  0d389d0e488d  ms/mm: workingset: separate shadow unpacking and refault calculation
match  12303a28071f  2bb9ffb83e78  ms/mm: workingset: eviction buckets for bigmem/lowbit machines
match  81b36b5d240c  1454b9c6f4e4  mm/memcg: initialize mem_cgroup_per_zone_info earlier.
match  6fdbc60de319  0b78fa5f2920  ms/mm: workingset: per-cgroup cache thrash detection
match  0823107729be  efdfe4df0a3e  ms/mm: workingset: make shadow node shrinker memcg aware
match  7acb9b84f1e8  cbaddfca6adb  mm/vmscan: active lru protection fixups.
match  4beb911dd39c  8dbb3c784547  mm/swap: activate swapped in pages on fault
match  fe2a66aec2ec  fe28dbaca145  mm/slub: Don't compact memory for high-order optimistic allocation.
match  66e2a8fda636  d91d68344e98  tty/vt: avoid high order pages allocation on GIO_UNIMAP ioctl
match  83fd7aafff16  f3a1e4ede507  net: silence high-order allocation warning from UDP with big headers.
match  1298ddf6a849  0e9eff0b1d93  mm/page_alloc: fix allocation failure of zone-restricted allocation
match  18452f5ccbe5  9d247d6634fa  mm/vmscan: scan active file and anon lists if inactive file list is too short
match  579daa769704  8c314f51d35d  mm/vmscan: don't shrink active list once more in case we reached nr_to_reclaim
match  e58d9e8dd44d  80fed4f12a54  RDMA/ocrdma: Remove unused STAG array.
match  2c8c7eafc5d6  572a626c382f  net/skbuff: Don't waste memory reserves
match  52d3a4c1f244  1e12382ffdf1  net/skuff: WARN if kmalloc_reserve() fails to allocate memory.
match  8aaa5f9bf592  e084e0c49e2b  ms/tcp: fix potential huge kmalloc() calls in TCP_REPAIR
match  09fe0e4b73b3  727a578c5f8b  ms/net: use skb_clone to avoid alloc_pages failure.
match  4b8a8e35b186  8ed211890dd3  prctl: Fix false positive in validate_prctl_map
match  98abef11a743  f2ccb0e37894  net: Allow autoloading conntrack nft-helper-* modules
match  7517c8792391  f6722a0e65d1  kernfs: keep kernfs node alive for __kernfs_remove()
match  9e915b6b3f8f  a08a96c8e11e  ms/mm/slub.c: run free_partial() outside of the kmem_cache_node->list_lock
match  af036c35d489  37e44bccaecb  mm, memcg, oom_gurantee: change memcg oom overdraft formula
match  c4c5adadba86  6d890f2e3090  mm/workingset: fix possible race with memcg deletion.
match  a3d6663cc6eb  62e557a5486d  mm/workingset: fix workingset_activation() with memcgroups enabled
match  b8f10975a02d  7f9ba151dfc6  mm/workingset: Fix memcg_inc_ws_activate() with disabled mem cgroups.
match  74d40547b499  e5bb2593608f  mm/workingset: Fix workingset_activation() with disabled mem cgroups.
match  975f099af8f4  5a5f1db23ece  ms/mm: scale kswapd watermarks in proportion to memory
match  4d108744c730  3aa0a4f1a2c4  mm: extend generic iov iterator API
match  de636ed641da  89a8d4f8dbbd  ms/Documentation: add watermark_scale_factor to the list of vm systcl file
match  3081c4039055  420855d0e144  memcg: mm_update_next_owner() should skip kthreads
match  22415b527f68  27c25d7cbe31  memcg: optimize the "Search everything else" loop in mm_update_next_owner()
match  5fb2cb0f2f55  74ac33a69565  DMA-API: exceeded 7 overlapping mappings of cacheline share
match  8e452497117c  d0e48cf8e811  ploop: introduce dio_may_fallocate() helper
match  4e86738373c8  0415f3297375  ploop: Export whole_block()
match  5986444a213e  6f233f01a802  ploop: Add cluster_size_in_bytes() helper
match  ee9b1d9732b6  751a8c21230c  ploop: Add cluster_size_in_sec() helper
match  9b6ced81e3bb  7e4bdbdfa73d  ploop: Add local variable into dio_submit()
match  55a165f8d306  e0fd99ac34b5  ploop: Add cluster_log local variable
match  8a204196152a  7eb1ab856108  ploop: Add trim_extent_mappings_tail() helper
match  8afd75c46691  7a890d814a3e  ploop: Introduce local variable in ploop_start()
match  803ad7a61605  ca43ec6560b1  ploop: Never merge discard requests
match  f678d1053702  d00d98f67b93  ploop: Set up discard limits
match  d5e6cc756959  a907f361409f  ploop: Introduce ploop_can_issue_discard() helper
match  356f2baf188b  937ad2528b27  ploop: Online discard support for dio engine
match  1b0ad5276fa1  5f85881a2a6c  ploop: Enable discard support for ploop1 format backed by io_direct
match  d4364a306ae7  c0b4b4e11add  ploop: Skip repeated discard
match  e91a25c839f1  3b745c781e14  ploop: Prohibit custom discard alignment and granuality
match  b0af9691fcb2  efab978ea505  ploop: Prohibit discard in case of multi-delta case
match  ba5a8f2aa438  405d05fc1a39  ploop: Do not forget to put io context
match  247cc693efb9  d9a24774f4b5  ploop: Merge repeating prepare_merge patterns in single function
match  5c3db31c7f9c  048ae4d1433c  ploop: Fix race between .prepare_merge and .submit_alloc
match  7d293ff37c05  f98f53072da2  ploop: Export map defines to separate header file
match  8b002eed8654  fa8651d9516d  ploop: Make submit_alloc() return int value
match  7d6e05930c73  36b6d0ece876  ploop: Introduce ploop_submit_alloc() helper
match  cfde8d6075ea  3aa0037c7c89  ploop: Prohibit discard ioctls
match  020c10ad8bfe  7f362b0024e9  ploop: Prohibit PLOOP_IOC_UPDATE_INDEX on singular list
match  243c376bbb64  2b6a8b1bb49c  ploop: Introduce data_off_in_clusters() helper
match  0f3dd33e0ada  b7c244350414  ploop: Add .complete_merge method
match  9ac742a00a6f  900920a31c1a  ploop: Zero indexes on discard
match  8601c6772637  6b7ae225449b  ploop: Fallocate cluster in cached_submit() during hole reuse
match  27926275de69  82bbb6302875  ploop: Populate and maintain holes bitmap
match  44c5e00b5b16  0ce922debb07  ploop: Fix huge grow with head clusters relocation
match  d4abebb29d79  937cf3c66a41  ploop: Add native discard support parameter
match  316c0a23dc74  c6d5dc706a6b  ploop: Make PLOOP_IOC_FREEBLKS always return 0
match  39f580e59678  aac0a019e021  ploop: Repopulate holes_bitmap on changing delta
match  430921be5008  180904dd83bd  ploop: Clear abort bit on replace delta
match  4b1eb3f667eb  e5c7d6394c10  ploop: kaio: Enter standby mode on EIO as well
match  0f8cfbdc4ae7  d576e3bd5cbd  fs/fuse kio: fix double free of pfc in process_pcs_init_reply()
match  daa48d960fa6  62182d1029b5  fs/fuse kio: fix getting a non-existent pcs inode in kpcs_kill_requests()
match  5ad82c220eb5  0eb58f9107c8  fs/fuse kio: export fastpath protocol version
match  e1a6f786351d  732ae633132b  fs/fuse kio: fix a typo in worth_to_grow()
match  5b7e13649d9a  aae72fdba603  fs/fuse kio: relax congestion avoidance limits (backport from usermode)
match  21c32e29b4ed  3adbafa93537  fs/fuse kio: add missed sock write in pcs_sock_sendmsg()
match  0d979355c1de  26083e1a09ba  fs/fuse kio: export io_locality
match  424177389d73  f673bcfea449  fs/fuse kio: sync pcs_mds_sys_info struct
match  2081d24e03f5  afbcdf079ff0  fs/fuse kio: add warning about jumbo chunks
match  9479257dfae0  653a5525b204  ploop: Enable native discard support for kaio engine
match  a0d87bfd955f  e14b0150239c  fuse: do not take fc->lock in fuse_request_send_background() - fixup
match  eb962b1abe49  7581eb0a4ede  fuse: Check for req->ff in fuse_request_queue_background()
match  595bf7e016f7  43ca00f6a79d  ploop: Check for top_delta in ploop_congested()
match  72548355bf27  4b755a9dc4ed  ploop: Return maintaince mode ioctls again
match  95d897b56d06  66c73254df90  ploop: Show whether device supports native discard
match  8fcbfcf3dae4  6c019f142c62  fs/fuse kio: forward fuse_file pointer to kpcs_req_send()
match  6f93c98c8e3a  92d37d2a5848  fs/fuse kio: add pending kio requests to kqueue
match  0afaac49290d  b11821e16771  fs/fuse kio: style fix in pcs_fuse_submit()
match  f19a59ce40bb  d39e19af4b14  fs/fuse kio: keep fuse_file for requests waiting for shrink
match  576d5776109e  d752f8cad559  ploop: Fix maintaince_type obtaining design problem
match  aaac627e74f6  33e2d3b7e92f  ploop: Add lockout on discard requests
match  19a8588a6e2e  8b85ffef5099  fs/fuse kio: fix latency time count
match  9f82da0a4f9c  f0ee14ce7ac5  fs/fuse kio: make req_classify callback
match  c397e275269c  0c75cf36492b  fs/fuse kio: simplify processing and sending kio requests
match  d1f883e68b9c  90628765252c  fs/fuse: fix locked kio request send
match  5e8aa5bc746b  d9b67a79b7db  fs/fuse: add conn_ctl to fuse_conn struct
match  a6fda35181ad  bfe8751c72ed  fs/fuse kio: create sysfs stat directory
match  1f05020c5b19  3fc5fdf3ed22  fs/fuse kio: implement iostat statistics info
match  57f9bde3460f  237ca2c71144  fs/fuse kio: make interface pcs_kio_file_list() for listing kio files
match  1b9872eb2dae  f179dc5aa3bf  fs/fuse kio: make interface pcs_kio_req_list() for listing kio reqs
match  99b9fa151ac5  5a2bc4adbdf0  fs/fuse kio: add retry counter for kio requests
match  ad61f5a82ee5  1bccc004144a  fs/fuse kio: implement pcs_strerror()
match  4dc00b0e8ac6  795c3cb84478  fs/fuse kio: implement requests statistics info
match  1e95a1e11acc  8afe40c5da4e  fs/fuse kio: implement fstat statistics info
match  563d97bd14a5  27ba019e887e  fs/fuse kio: implement fstat_lat statistics info
match  a9687010b182  53448710d211  fs/fuse kio: remove useless pcs_cs initialization
match  f56bea62fceb  20e7ad56acdc  fs/fuse kio: implement cs statistics accounting
match  eed83d7fc114  f6685e361db6  fs/fuse kio: convert rpc state id to string
match  d1f8b71fb8de  a1b567033c39  fs/fuse kio: implement cs_stats statistics info
match  2af15c735d2b  4a439b274d89  fs/fuse kio: cosmetic changes in pcs_fuse_prep_rw()
match  ce0b915ad9df  31d56228f233  fs/fuse kio: fix inode leak in pcs_fuse_submit()
match  45f0787eab6f  636b1cfc4d76  fs/fuse kio: fix stack overrun in request_end()
match  dcddd9887b45  bf14db8246c8  fs/fuse kio: skip iostat count for unknown req types
match  9440345ca98a  52294c8be11d  ploop: Do not warn when BAT is wider than disk size
match  240261434254  1e9d40bd2a36  ploop: Introduce set- and clear- holes_bitmap wrappers
match  98f9c661c3a1  ddb43640134a  ploop: Ignore clusters above holes_bitmap
match  ba6eb2c76af8  9ec7ec64cc1f  ploop: Add sanity check on stop
match  960e1627c1c9  ea493ab40a20  arch/x86/kernel/cpuid_fault.c: copyright update
match  bd1ef2f6f696  0e095496a530  block/blk-cbt.c: copyright update
match  62e6c9c4dfed  62d2061d4f96  drivers/block/ploop/Makefile: copyright update
match  da53f1acbb48  7682a5b59058  drivers/block/ploop/dev.c: copyright update
match  5d3a464f4f3d  815ebf2acf34  drivers/block/ploop/discard.c: copyright update
match  d2f1b1ca8e5e  31910f18cb50  drivers/block/ploop/discard.h: copyright update
match  6e6028bfd70f  a09696bff8e1  drivers/block/ploop/events.h: copyright update
match  978bcfe25ee1  872e31ec8938  drivers/block/ploop/fmt_ploop1.c: copyright update
match  3229e84391dc  0cc93b43a6ef  drivers/block/ploop/fmt_raw.c: copyright update
match  240723b0dad3  3fa583b91db9  drivers/block/ploop/freeblks.c: copyright update
match  c31781e55272  2a093c259e51  drivers/block/ploop/freeblks.h: copyright update
match  c03861b447f7  e2f09eff1ca5  drivers/block/ploop/io.c: copyright update
match  481b99de6e7e  033a783738ae  drivers/block/ploop/io_direct.c: copyright update
match  d6fabfcd946e  8be6c89b7f60  drivers/block/ploop/io_direct_events.h: copyright update
match  7676129a21a2  df13265dc5b2  drivers/block/ploop/io_direct_map.c: copyright update
match  4cf4e7ab253b  a33821f2c4fb  drivers/block/ploop/io_direct_map.h: copyright update
match  de4e3e5fbfdf  e4b020bd4c77  drivers/block/ploop/io_kaio.c: copyright update
match  8fcdf5bdd075  97155506fdfb  drivers/block/ploop/io_kaio_map.c: copyright update
match  6e5497a7c5a1  a063cfc729e5  drivers/block/ploop/map.c: copyright update
match  da9e77f80471  fb343c023db7  drivers/block/ploop/ploop1_image.h: copyright update
match  7ec75d08d633  97041aaa9b30  drivers/block/ploop/ploop_events.c: copyright update
match  32800fc9d3f0  cdc78da5b274  drivers/block/ploop/ploop_events.h: copyright update
match  4bf918e268e9  4de00f4b0d9d  drivers/block/ploop/push_backup.c: copyright update
match  cb5a509aa35a  d0a7393b54cc  drivers/block/ploop/push_backup.h: copyright update
match  6ecdd6180e69  6fc6ca45066b  drivers/block/ploop/sysfs.c: copyright update
match  2a7ad4b01713  e9b18fe466ec  drivers/block/ploop/tracker.c: copyright update
match  19d8902f5788  8d46155353d1  drivers/net/veip_mgmt.c: copyright update
match  10a970e5df17  530e4aa5075b  drivers/net/venetdev.c: copyright update
match  50a74056f5ff  30ca82d5d684  drivers/scsi/scsi_dbg.h: copyright update
match  750810de1ca3  23055fb1b7e9  fs/ext4/pfcache.c: copyright update
match  d67038ad0770  9d884503d3db  include/bc/beancounter.h: copyright update
match  09ba42f7bcc4  b5a75be998f8  include/bc/decl.h: copyright update
match  a54050f9c00f  8ddb0073ae0e  include/bc/io_acct.h: copyright update
match  1df6fa95ca16  15e491baedd6  include/bc/misc.h: copyright update
match  b1d3552685b7  fe9ab4149d57  include/bc/proc.h: copyright update
match  fdf427644cb1  b7b0c517bd40  include/bc/task.h: copyright update
match  46df62974498  9875e627cf2f  include/bc/vmpages.h: copyright update
match  5a4e498991a7  79690bdced2b  include/linux/fence-watchdog.h: copyright update
match  9eb59236f023  13ed13b4544b  include/linux/kmapset.h: copyright update
match  0d6c1cea1c8e  844f752d3e47  include/linux/pfcache.h: copyright update
match  682a2b7e9aee  7594de19fa11  include/linux/ploop/compat.h: copyright update
match  2bdde7eaa515  de77bd2615d5  include/linux/ploop/ploop.h: copyright update
match  223a0a296899  9d08f52ebdaa  include/linux/ploop/ploop_if.h: copyright update
match  fecf9adbb6f8  cab3595f7bdf  include/linux/ploop/ploop_stat.h: copyright update
match  c5531ee1af03  48b92743f7cf  include/linux/ve.h: copyright update
match  b21e2596b636  a1895581c398  include/linux/ve_proto.h: copyright update
match  7ea9e0153bf7  426dbcf4defa  include/linux/veip.h: copyright update
match  de454142cf9b  0f36270dd2df  include/linux/venet.h: copyright update
match  3e98e0eb627d  47816f22b1d7  include/linux/virtinfo.h: copyright update
match  44b93a56a254  2cce865b100d  include/linux/vzctl.h: copyright update
match  188a229bb5b1  559ffbae880e  include/linux/vzevent.h: copyright update
match  8015daf51e7e  9852c91585bc  include/linux/vziolimit.h: copyright update
match  50c0ab22dff5  7799d42b80a8  include/linux/vziptable_defs.h: copyright update
match  c6c88715e457  ba5a3ad044c0  include/linux/vznetstat.h: copyright update
match  8de08efc3fee  99a5ea432a17  include/linux/vzprivnet.h: copyright update
match  2fd7d807501b  9eebbb86ee21  include/linux/vzstat.h: copyright update
match  3a036a33034a  1ee5bf671b44  include/net/udp_memcontrol.h: copyright update
match  e8ddd75d54d4  e48c60177d06  include/uapi/linux/bc/statd.h: copyright update
match  973f63f6ca14  7fa73f401056  include/uapi/linux/beancounter.h: copyright update
match  5b5a93125ec6  ec5dde12c5ce  include/uapi/linux/venet-netlink.h: copyright update
match  685bbe41a4a4  e576e9cec510  include/uapi/linux/vzcalluser.h: copyright update
match  b1646cc43f9c  4eda30ac1b26  include/uapi/linux/vzctl_netstat.h: copyright update
match  fb451f08ac76  c9323648013b  include/uapi/linux/vzctl_venet.h: copyright update
match  b8ae3a9ae68b  a58e80e26717  include/uapi/linux/vzctl_veth.h: copyright update
match  d95ce7381183  a36b1374d76b  include/uapi/linux/vziptable_defs.h: copyright update
match  4084bf17393b  b0fd4a9b686d  include/uapi/linux/vzlist.h: copyright update
match  45e1ff2b8059  7b79f6bf3018  kernel/Kconfig.openvz: copyright update
match  525f49cde4c7  7ebead735bd9  kernel/bc/Kconfig: copyright update
match  238404ae481b  ac7ab77d8d34  kernel/bc/Makefile: copyright update
match  141d47559ac6  0d55d19084f9  kernel/bc/beancounter.c: copyright update
match  85d50b7bb59c  540ad695d3c2  kernel/bc/io_acct.c: copyright update
match  cacdacb99f82  e428de4f477f  kernel/bc/io_prio.c: copyright update
match  ee664391c7ec  5b5fd5c51196  kernel/bc/misc.c: copyright update
match  e7ad03e3defa  91f8f968c8cd  kernel/bc/proc.c: copyright update
match  cbdb9d1e314e  d256232c56d2  kernel/bc/statd.c: copyright update
match  e0e980a0958f  5e1f302a5c68  kernel/bc/sys.c: copyright update
match  3415a489d3ab  66e513348cb2  kernel/bc/vm_pages.c: copyright update
match  b20bf28e781a  ba8cc6ee5a8f  kernel/fence-watchdog.c: copyright update
match  c18e4be5a442  64dc0640ff10  kernel/ve/Makefile: copyright update
match  29f1285c2e6c  2b002174c58a  kernel/ve/dummy/Makefile: copyright update
match  6788b7433fb9  e1e15e998fe1  kernel/ve/dummy/ip6_vzprivnet.c: copyright update
match  27c42b4df858  d19dbf7317c7  kernel/ve/dummy/ip_vzprivnet.c: copyright update
match  0790d9e5a938  0a8abe9d217f  kernel/ve/dummy/pio_nfs.c: copyright update
match  1075dcdc0f5e  0aeee52ccaf5  kernel/ve/hooks.c: copyright update
match  c9869b7dd8aa  2fd41d0d7d96  kernel/ve/ve.c: copyright update
match  e662c0fec646  a2f7af00d251  kernel/ve/vecalls.c: copyright update
match  7ea5bce8ce32  072f89b0ff0f  kernel/ve/veowner.c: copyright update
match  019b29f3f46a  40c3d0a053b8  kernel/ve/vzdev.c: copyright update
match  90a4e4fa0655  59878d18b6ca  kernel/ve/vzevent.c: copyright update
match  e8ae79c75833  db2ecffaa4b8  kernel/ve/vziolimit.c: copyright update
match  d45213d3033d  d5e2a3e02de5  kernel/ve/vzlist.c: copyright update
match  85ad12c292ad  5ea8def53316  kernel/ve/vznetstat/Makefile: copyright update
match  cf1978fd0b6a  fba858ffc83c  kernel/ve/vznetstat/ip6_vznetstat.c: copyright update
match  4dddf25eb20f  a2c22a500b61  kernel/ve/vznetstat/ip_vznetstat.c: copyright update
match  98b6c447701b  f8cd44c7c5cb  kernel/ve/vznetstat/vznetstat.c: copyright update
match  447fd8f0ff2d  2c0a4153c00f  kernel/ve/vzstat.c: copyright update
match  1d6eb58fd548  af13b211e039  kernel/ve/vzstat_core.c: copyright update
match  7818b81ae6b5  761c7a22681e  kernel/ve/vzwdog.c: copyright update
match  8ce7d2d9f1c2  08a6466edb6e  lib/kmapset.c: copyright update
match  d4e21cad5e17  1aed42b5624d  mm/iov-iter.c: copyright update
match  9c7986d7757d  fc0aaeb36831  mm/oom_group.c: copyright update
match  607b90aad2d0  243da1c4e3ce  mm/page_idle.c: copyright update
match  70b1fb049b4c  cf73edb6a6bf  mm/tcache.c: copyright update
match  94418922c135  cec306b65559  mm/tswap.c: copyright update
match  972dac14a75c  f637b7f81c3c  net/ipv4/netfilter/ip_vzprivnet.c: copyright update
match  3fbf231f176a  ea44d1798565  net/ipv4/udp_memcontrol.c: copyright update
match  6bf16a8d9e50  92ec6685f94b  net/ipv6/netfilter/ip6_vzprivnet.c: copyright update
match  3900579726fd  e32603867c51  net/netfilter/xt_wdog_tmo.c: copyright update
match  5858cf702f55  3fa2d1dbd497  tools/testing/selftests/memfd/Makefile: copyright update
match  54d030090cbc  7b83079eb83f  tools/testing/selftests/memfd/fuse_mnt.c: copyright update
match  f3b571085cf6  819bda4cf70f  tools/testing/selftests/memfd/fuse_test.c: copyright update
match  0449b9352ec0  e74d1d7f05a6  tools/testing/selftests/memfd/memfd_test.c: copyright update
match  8c3e63201d60  97d0d9c98231  net/ipv4/udp_diag.c: author email updated
match  271d98b93974  b3ed4265b4c0  net/netfilter/xt_wdog_tmo.c: author email updated
match  a48444d6b288  b83b1b03e634  config.OpenVZ.minimal: update up to 3.10.0-957.el7
match  c728f3429ec8  b72f125c9865  configs.OpenVZ: add minimal debug kernel config
match  79872dd4413d  7662245ca817  config.OpenVZ.debug.minimal: update up to 3.10.0-957.el7
match  7b825ab42d02  cfbdf3d94817  configs: disable cpu partial slab support
match  e0cc78fa46ef  46d1786d1a59  config.OpenVZ.minimal: enable R8169, PATA_ATIIXP, X86_AMD_PLATFORM_DEVICE, NET_DEVLINK
match  abbc79bc561c  e711bfc380c3  config.OpenVZ.debug: disable CONFIG_AMD_MEM_ENCRYPT
match  d336ce621ed2  0cfc4ae896c7  config.OpenVZ.minimal: add support for e1000[e] and r8169 network cards
match  4dabb1042492  35e45e049460  configs: disable FUSE_KIO_NOOP and _NULLIO in debug.minimal config
match  c0003282e704  7797b01578c2  config.OpenVZ.minimal: update up to 3.10.0-1062.el7
match  7e169ba3674a  99408f2e27b5  config.OpenVZ: RHEL77 rebase: disable new options which depend on EXPERT
match  7d22abffc1ce  cbb393d71c7a  kvm/x86: add log printing on emulation failure
match  a1268a3959f6  651e5e6ac2af  ploop: Decrement active_reqs before bio_endio()
match  811b042c1c99  7610d5a9b569  ploop: Also decrement active_reqs before bio_endio() in ploop_complete_request()
match  be0a75c7c8b5  345f057d6466  fs/fuse kio: drop maps on file close
match  bd7f3e53d0b1  281711803b5e  fs/fuse kio: reset write_iter for canceled msg
match  a1174a5ba49b  479460dd6bf6  scsi: aacraid: resurrect correct arc ctrl checks for Series-6
match  526d83530e00  2139bf5f0147  i40iw: use kvzalloc for large allocation of iwdev->mem_resources
match  9a67103e3ef7  83f4c0c225e3  vziolimit: fix race by putting throttle.speed check under ub_lock
match  9ba187476912  bf13b10eb01e  ploop: Do not split discard bio in kaio
match  ebd55a88268d  e9b1b0844508  ms/root dentries need RCU-delayed freeing
match  f11ffb40e88d  e5fa53a1c8f2  ms/lock_parent() needs to recheck if dentry got __dentry_kill'ed under it
match  c79b1e5ed203  84697e0a130e  ms/fs/dcache.c: fix spin lockup issue on nlru->lock
match  e1f8c7bedfe4  27d79147bedd  ms/fs/dcache: Fix incorrect nr_dentry_unused accounting in shrink_dcache_sb()
match  0781d26fac92  4d9002b770df  fs/fuse kio: fix fuse_mutex leak in pcs_fuse_stat_fini()
match  db7d43106bad  9adfc7012942  fs/fuse kio: set NULL to stat->kio_stat in failure case
match  9d62a5c3cf51  84214672dbef  ploop: Use BIO_EMPTY_LIST for cleanup
match  551c6e92eb32  b08a0d05bdcb  ploop: Kill unused sync vec functions
match  216bd941369f  bac96db2e245  ploop: Extrack extent-related logic from dio_sync_io()
match  b759265b5787  2c51b83cc595  ploop: Extract extent-related logic from dio_io_page()
match  3e6239f4f72f  9337ad666d10  ploop: Kill __dio_io_page()
match  be91820395b6  18652ae6739e  ploop: Add comment about S_SWAPFILE
match  23b18197ec0e  fe5f1424c179  ploop: Remove useless variable
match  4b0ad4af8359  dfb24b45fb5f  fallocate: Unexport FALLOC_FL_CONVERT_UNWRITTEN
match  98bfccdffb22  07cbd0876bba  mm/memcontrol: fix memory.high
match  67aa1c7933b6  d9a1deece3a8  mm/memcg: reclaim memory.cache.limit_in_bytes from background
match  e2a9281a2e2b  271a6351b774  ms/mm: vmscan: check if mem cgroup is disabled or not before calling memcg slab shrinker
match  f976032160e9  b7fcacb751de  ms/x86: Extend #DF debugging aid to 64-bit
match  7f96a9bf08c8  5cfa0979391a  ms/x86/build/64: Force the linker to use 2MB page size
match  7925cd73eb10  cfd8e8157cb1  fs/super: don't destroy super_block in case of leaked inodes
match  b49814040234  1d26f0a4d1ae  fs/nfs: more leaks for busy inodes case.
match  54ae517c8079  523e8df80e44  ploop: Check that nobody writes to ZERO_PAGE()
match  d7b5f35dde4a  0556951768b6  configs: Enable doublefault exception handler
match  6035151fc544  be407f49fbf3  mm/memcontrol: warn if memcg reparenting failed to succeed in 20 min
match  f13862253002  d589870f02f4  mm/memcg: fix race with WARN_ON() check and kmem uncharging.
match  c938e091c8af  68b1e5bd26b6  mm/memcg: close potential race of kmem unharge and reparent.
match  022939868af9  8ee20fce91b4  ploop: Add comment about ploop_pvd_header::m_FirstBlockOffset
match  32be059cf258  5781a8a110a2  fs/fuse kio: add a sanity check on statistic inc
match  6a97897ac323  6c098527e429  ms/jbd2: discard dirty data when forgetting an un-journalled buffer
match  f23c63371982  72ccc490623a  ms/ext4: cleanup clean_bdev_aliases() calls
match  78d35591e3b9  61a8568ebd02  fuse: fix ->end() vs ->waitq ordering
match  f1bfdc5b86e2  c8f47e0acdfd  fuse: remove WARN_ON from fuse_write_file_get()
match  7000fbeaf42b  753d48ca814b  fuse: optimize writepages search
match  096b28772c24  75715dfcc33d  fuse: locking fixup in fuse_open_common()
match  50837979e822  259487e5dbd6  kvm: use kvzalloc for struct kvm allocation
match  37f1f707e16a  8eca51a48d62  vhost: suppress high-order-allocation warning for vhost_log
match  d2fa3a72c5b0  a0115acd9923  ploop: Fallback to maintaince_mode in ploop v1 format
match  e9472f3c4ea4  c48bd9e388fc  fuse: Wait inflight requests only in case of close_wait
match  ad24e8a0dde0  e5235664853d  ploop: remove module param ploop_major as it can break everything
match  585c5195cd96  506b0c591df1  ms/prctl: introduce the walk_process_tree() helper
match  12fb98e3a39f  10cf6fc8bcd7  ms/prctl: propagate has_child_subreaper flag to every descendant
match  ec97a52ae30d  753a3cc1b441  sunrpc: fix crash when cache_head become valid before update
match  8bef85f404b4  32e1dfe3e5ba  ms/libata: Implement ATA_DEV_ZAC
match  d5af21124cf0  963e14ff8076  ms/libata-scsi: Update SATL for ZAC drives
match  3b3e38272931  e9f23d17c194  ms/libata: Implement NCQ autosense
match  5fc466bc4978  3a6da469d195  ms/libata: Implement support for sense data reporting
match  58916a0f9ef0  6901c0562941  ms/libata: fixup ZAC device disabling
match  98f6608b9f2b  343b90098312  ms/libata: Fix ATA request sense
match  48b1e0b7d11d  e45554b15e8f  ve/modules: Add ts_kmp to allowed modules
match  7630d9818d01  a8c3d4ddcf01  ms/fs/writeback: fix lazyatime dirty inode writeback
match  db45bb55cfb3  44724b23f8d2  nbd: remove bogus BUG_ON in NBD_CLEAR_QUE
match  66ae65a01b60  e09a55ce3880  switch nbd to sockfd_lookup/sockfd_put
match  81bdaebc1665  384e60d4c339  nbd: zero from and len fields in NBD_CMD_DISCONNECT.
match  7f3450788fb1  f1a11c4a253f  nbd: fix possible memory leak
match  e52d1b7fa39c  fbb068d35d16  nbd: Remove kernel internal header
match  1fea00bcafb7  0f57e5eb9659  nbd: Replace kthread_create with kthread_run
match  36245f549157  c16a8884fc66  nbd: Fix device bytesize type
match  9cf53431f062  1fece450ea57  nbd: Restructure debugging prints
match  e1318027a5df  36068d4c603c  nbd: Remove fixme that was already fixed
match  5c41ad008fd5  8d4109211df8  nbd: Return error code directly
match  982e4f118c4f  0e77581d1fd7  nbd: Return error pointer directly
match  3a21d65223df  76239923ebdf  nbd: stop using req->cmd
match  73c643629fb1  f4909d148189  block: have drivers use blk_queue_max_discard_sectors()
match  14ddcfe1e9d7  ad6ee1fdf9e0  nbd: Fix timeout detection
match  607ca70144e8  d4742cfd5f6d  nbd: sock_shutdown, remove conditional lock
match  960530e3c0f0  b256bcd39dc9  nbd: restructure sock_shutdown
match  314bb4dd6686  fd07e319a937  nbd: Remove 'harderror' and propagate error properly
match  380a88c8ceb2  02535b9ff890  nbd: Move clear queue debug message
match  ca7083019ce6  eeb960da6d5e  nbd: Remove variable 'pid'
match  974c45ad863a  f337e2431308  nbd: Add debugfs entries
match  7a77387d3bec  341688abd515  nbd: Change 'disconnect' to be boolean
match  ae9a6a603403  8e9c4bb7654f  nbd: Rename functions for clearness of recv/send path
match  bb19bc536818  131448eed5f5  nbd: flags is a u32 variable
match  ec61cce1dffc  cd137a06f0c1  nbd: Add locking for tasks
match  e7174ecd9cc1  69a92de77b50  signal: turn dequeue_signal_lock() into kernel_dequeue_signal()
match  36f3a291cc0e  66d950c063dc  nbd: use ->compat_ioctl()
match  b1586e56f9d6  d66c1af22942  nbd: Fix debugfs error handling
match  f25039870bb0  cc62e08442cb  nbd: Remove signal usage
match  6d779ed9eee5  64168c65efbb  nbd: Timeouts are not user requested disconnects
match  bd31b031fed8  9c2c6e42f4d6  nbd: Cleanup reset of nbd and bdev after a disconnect
match  65b24e929d63  3404ade8e2fc  nbd: Move flag parsing to a function
match  2c7c1dff04d0  018c899bfdef  nbd: ratelimit error msgs after socket close
match  9745d2853d82  84428f5f07bd  nbd: Create size change events for userspace
match  29d5df6a98cf  f3fe7a40a76d  nbd: use correct div_s64 helper
match  4ab4992d2da6  19658b132f0d  drivers: use req op accessor
match  e1d0ef797817  72021b996fcf  nbd: pass the nbd pointer for flags debugfs
match  73d46ec4216a  48c679d759d7  nbd: fix race in ioctl
match  5d31bfe6d2ef  1a58582f739c  nbd: convert to blkmq
match  d48fa6ea245c  bcd8c24ad0ec  nbd: don't shutdown sock with irq's disabled
match  fce2dc1320b5  be2278df6c74  nbd: use flags instead of bool
match  eb1d89898ae8  5bb69aeac161  nbd: allow block mq to deal with timeouts
match  42f166af7d62  10c756659615  nbd: use BLK_MQ_F_BLOCKING
match  6f27f2023857  05d21c2697b4  nbd: fix use-after-free of rq/bio in the xmit path
match  eef5fda3a28f  6faf88e438dd  nbd: add multi-connection support
match  e4f2732a6f33  df5f7568649e  nbd: fix setting of 'error' in NBD_DO_IT ioctl
match  c7fb696480f3  28e23c3f3b24  nbd: use loff_t for blocksize and nbd_set_size args
match  57ddd03ec1bb  820996a222ee  nbd: fix 64-bit division
match  49f7c0367fde  6691af490212  nbd: reset the setup task for NBD_CLEAR_SOCK
match  4aade68cd2e2  8565f6d0d22a  nbd: use dev_err_ratelimited in io path
match  04b5e527aac4  5674c94c2162  nbd: s/<asm/uaccess.h>/<linux/uaccess.h>
match  36d21d09a888  e5b1ea4000c7  nbd: blk_mq_init_queue returns an error code on failure, not NULL
match  d1ed662bc74c  02e9ade2b3a3  nbd: only set MSG_MORE when we have more to send
match  607606ee8d61  698268eff58a  nbd: remove REQ_TYPE_DRV_PRIV leftovers
match  cccf0b9522dc  4801ffc74111  nbd: move request validity checking into nbd_send_cmd
match  5011d6836769  9838bd465436  nbd: use our own workqueue for recv threads
match  2fa447e7428f  399822e2f908  nbd: use an idr to keep track of nbd devices
match  3bc43005ee1b  67bf6139ce25  nbd: cleanup ioctl handling
match  c41f61dda5fa  f02c80f302fe  nbd: set the logical and physical blocksize properly
match  d3b7c90f8218  2aba7fdd7a5b  nbd: cleanup workqueue on error properly
match  6ac56652dc1d  fb311466f338  nbd: stop leaking sockets
match  5a4c1624e756  82f07247a104  nbd: don't allow invalid blocksize settings
match  374157e4bb76  9cfb932dff16  ms/pagemap: Port diff-ms-pagemap-do-not-leak-physical-addresses-to-non-privileged-userspace
match  2e244b1885b7  aa779b4ae79b  ve/cpu: handle sysfs attributes for CTs
match  2740decdf06f  94eddcbaabb3  ms/KVM: x86: inject exceptions produced by x86_decode_insn
match  cac9d8a6763b  e07de8677db8  ms/KVM: x86: always stop emulation on page fault
match  c7b70fa325df  ee1514c00651  ms/KVM: x86: set ctxt->have_exception in x86_decode_insn()
match  e6f17641293a  ee7ce7f29055  ms/x86/cpu: Keep model defines sorted by model number
match  b2af50791679  d200b8495365  ms/x86/cpu: Sanitize FAM6_ATOM naming
match  3b38f181e4e9  ed8b1e31b8b4  ms/perf/x86/intel: make reusable LBR initialization code
match  4db4551932bd  e414668e3b7d  ploop: Assign holes_bitmap before merge on merge-no-return point
match  adcc7c5273c6  00266de55127  ploop: Kill noop complete_merge method
match  1673e744fe29  e06f9860eb90  ve/kmod, nf_tables: allow nf_tables.ko autoloading on request from ve.
match  55daa7880533  49f4b0e1cbc4  mm/slab: Fix deadlock on attempt to shrink slab.
match  bd83b7b1715e  4465b3638b5a  ve/fs/exec: don't allow a privileged user to execute untrusted files
match  552f1d45efdb  5f560dbce96b  sysfs/ploop: add new device option trusted
match  4ba6e5b04b48  0e7a3df1d8e0  ve/fs/exec: send SIGSEGV to a process trying to execute untrusted files
match  5f1c7345f793  d3617e1fd985  ve/exec: allow trusted exec change both on boot and on running system
match  bf7677d992c5  010a6e6fce1f  rdma/i40iw: hide high-order-allocation warning in i40iw_save_msix_info()
match  b6fcf680ac36  98c0b324f988  ms/netfilter: nf_tables: avoid global info storage
match  15c52a54dba1  87b5c5369a02  ve: use host ipt_mask for pseudosuper in setsockopt and request module
match  d3185b7703e0  f2d3fee11dcd  fs/fuse kio: don't wait read requests in case of fsync/flush
match  c0c01d903e1f  bcd6e769b5c8  ve/net/core: allow to call setsockopt(SO_SNDBUFFORCE) from Containers
match  2d6c7140b859  2b282f8bec25  x86/asm: remove the unused get_limit() method
match  7fe7ab604f92  bcd846c83cbc  ms/block: add REQ_BACKGROUND
match  dff79b867363  fdcd613d858f  ms/writeback: add wbc_to_write_flags()
match  7e69169bc16c  d24da430d846  ms/writeback: mark background writeback as such
match  cd1c7ee03d1f  f86451625edc  ms/writeback: track if we're sleeping on progress in balance_dirty_pages()
match  3eb8b374bbcd  1e23588c1209  ms/block: get rid of struct blk_issue_stat
match  f9f9d5bff461  9ebbea62ad2a  ms/blk-wbt: add general throttling mechanism
match  5afb2edc5717  c7dd14602845  ms/block: hook up writeback throttling
match  5863788b4c90  cd11eb16467e  block: enable CONFIG_BLK_WBT*
match  62c9279afbd3  b68de49f7567  blk-wbt: increase maximum queue depth to increase performance of writes
match  e0b8c61bafe0  5b3f7e014cd2  ve: add a comment about possible pseudosuper race
match  122447a7518d  c0e0f4296ca7  fs-writeback: add cond_resched() in wb_do_writeback()
match  4843b06287c5  8b171425b173  ms/jbd2: add support for avoiding data writes during transaction commits
match  5e3f58eaf4b8  6dede3e75311  ms/ext4: do not ask jbd2 to write data for delalloc buffers
match  cc252b5f35ad  43db2aefa77b  ms/mm: add filemap_fdatawait_range_keep_errors()
match  098bdd541b51  9c02947cfbec  ms/jbd2: introduce jbd2_inode dirty range scoping
match  806767ee3912  d5e767c7c790  ms/ext4: use jbd2_inode dirty range scoping
match  e58d7f4643bf  d6f2bca371ea  ms/cfq-iosched: don't call wbt_disable_default() with IRQs disabled
match  5baac5ccebb8  1bc1974a8802  ms/block: fix leak of q->rq_wb
match  5f8f7c2016f8  b6b138230b13  ms/block: Fix list corruption of blk stats callback list
match  cf0e0c939fc3  01e7d0c97168  ms/ext4: use __GFP_NOFAIL in ext4_free_blocks()
match  a6cf479aa044  8cdafd9f87da  ms/ext4: handle the rest of ext4_mb_load_buddy() ENOMEM errors
match  84702aab75fa  eabcc9939021  nbd: handle ERESTARTSYS properly
match  4fccaa7dfdbb  f5811e4c0299  nbd: put socket in error cases
match  e6b35609dae9  fc42ec6dbdc9  nbd: set rq->errors to actual error code
match  0e8ecc1bf7b4  11a8a738d349  nbd: set queue timeout properly
match  703042433286  52fc60a0b0c5  nbd: replace kill_bdev() with __invalidate_device()
match  ba5dbd2cffe6  359d12cfef5c  nbd: handle single path failures gracefully
match  a6f72c27265b  63570e04a8e3  nbd: separate out the config information
match  03acf01d513a  22045631050d  nbd: don't leak nbd_config
match  568529e639ba  e3b85c42045a  nbd: take tx_lock before disconnecting
match  cf1ef9a09f00  95c9b065265a  nbd: ignore non-nbd ioctl's
match  adad7018bcca  503b45e415ab  block/ndb: add WQ_UNBOUND to the knbd-recv workqueue
match  9d81aebf5f81  6ed1d09ce201  sctp: suppress warnings on high order memory allocation on sctp chunk creation
match  d005596c5c50  b6f5d1001167  rdma/i40iw: use proper GFP flag for hiding high-order-allocation warning
match  4903d50b6c04  a62075a22420  ms/treewide: Add __GFP_NOWARN to k.alloc calls with v.alloc fallbacks
match  5d7149993ccc  b9657d18d23d  ms/nbd: fix how we set bd_invalidated
match  a9de080e064b  0d990415c85b  ve/kmod: allow "nft_compat" module autoload from inside a Container
match  bb8c74e2cb93  329939f46d13  sctp: suppress warnings on high order memory allocation on packet transmit
match  7061b14d49d9  8fa3fdefc63f  ms/nbd: stop using the bdev everywhere
match  5cdca92dde8f  43cd7d7f625a  ms/nbd: add device refcounting
match  423ef7e611bf  a23ab841af2c  ms/nbd: fix use after free on module unload
match  c4c882f769a0  25a8d5e481e2  ms/nbd: don't set the device size until we're connected
match  d6f25daf00cc  cd68f6e218d5  ms/nbd: fix nbd device deletion
match  91eb4de51d84  01213600ed9f  ms/nbd: update size when connected
match  eee4fecdf759  4abbd22a1388  ms/nbd: use bd_set_size when updating disk size
match  9fc9326f5879  e4536c6b57c9  nbd: invalidate bdev after size update
match  624eed2f86cd  7dbab4c87fcd  fuse: don't perform getattr on each write
match  6e3e40be010c  02cee0a385f3  configs.minimal: enable CPU_IDLE_GOV_HALTPOLL/HALTPOLL_CPUIDLE
match  a5c32ba1348d  6b95823c3db6  nbd: move nbd_size_update() of of the loop.
match  5255d8c5c103  6aaea8330ace  nbd: move setting the bd_invalidated out of the loop
match  0555c11e7dc0  c0f4394dda2f  ms/nbd: only clear the queue on device teardown
match  11ed51379b2d  295e77fd52e8  ms/nbd: quiesce request queues to make sure no submissions are inflight
match  f89d1cb2ab03  55ab6d7c6545  fs/fuse kio: share bandwith/IOPS for prometheus stats
match  696aebec1992  513dd03401b9  rh/dcache: work around buggy iso images
match  c0a37093d428  601be0a82b25  ve/kmod: enable autoload for iptables security tables from inside CT
match  46e1554f909d  40ddf7e7c836  ve/kmod: enable autoload for nf_tables_inet module from inside a CT
match  58e94df9dd31  bfce7008e936  config.OpenVZ.[debug.]minimal: update up to 3.10.0-1062.4.2.el7
match  8c7a0c87d630  fe9e62640233  ve/kmod: make all nf_* and nft_* autoloadable upon request from a CT
match  aa347e702874  24c9f65eb446  mm/ksm: Don't WARN if page is still mapped in remove_stable_node()
match  234a7b5ccac8  2df17a600f2f  ms/netfilter: nft_compat: fix crash when related match/target module is removed
match  f3abd314ca1e  db4d3c68ad8c  net: export "net.netfilter.nf_conntrack_helper" sysctl for Container
match  e8152ebca3d3  59f44038eb62  ms/netfilter: x_tables: set module owner for icmp(6) matches
match  a40c72fdecc0  cb43459df5bb  ms/SUNRPC: The TCP back channel mustn't disappear while requests are outstanding
match  4624b71b9dd5  c9832fbc2a4b  kvm/x86: extend info on emualation failure
match  396be28eedc0  19d211c74f9b  mm: fix hanging shrinker management on long do_shrink_slab
match  4af953dea2df  2a086cdd6d15  fuse: don't declare FUSE FIEMAP support for any FUSE fs
match  fc6c78d85a1b  8fe47d83cf6a  ploop: Reread bat offsets and length before merge
match  be76609b3e65  442b68feb212  ms/ext4: kill ext4_kvfree()
match  2ef9860f00d9  94e30d396886  ext4: replace ext4_kvmalloc() with kvmalloc()
match  ad6759652e00  8451fd3230e3  ext4: kill ext4_kv[mz]alloc()
match  0e40ac7680de  3481b16c3793  ms/ext4: remove extent status procfs files if journal load fails
match  8176c1f492ec  d56a5ead8f70  ms/net: Allow to show socket-specific information in /proc/[pid]/fdinfo/[fd]
match  a5ac5b9ef1fd  9bd742987675  ms/unix: Show number of pending scm files of receive queue in fdinfo
match  3800c9422430  2d5db94ad4dc  ploop: Do not try to update index after REQ_DISCARD in raw format
match  ac92c0915c05  e38a371aefa1  ms/ixgbe: fix possible deadlock in ixgbe_service_task()
match  030299ec903b  8dd2546d8aa9  ixgbe: don't check firmware errors
match  c8f9789b539d  0068f200af93  memcg: access beyond end of shrinker_map
match  ccc453c26646  ea2d197fd502  ploop: Fix huge grow of empty image
match  066a770bae11  f6e82b2298e6  ve/proc: Added separate start time field to task_struct to show in container
match  900ad050618a  eac66a6bd35f  ms/quota: Do not dirty bad dquots
match  de5b1bd3abc2  4eeecb537f28  ms/quota: Move locking into clear_dquot_dirty()
match  4454119abe73  daa41a4ffb0c  ms/quota: fix potential infinite loop
match  2459b4668cfc  7e17f8b09321  mm: fix out-of-bounds memory accesses in process_vm_readv()
match  ece161222927  07281f0ab590  ploop: Disable holes on io_direct raw images
match  bde30068758a  e3572a88cca1  ploop: Teach dio_sync_io() work with many pages
match  2414a738b71a  c9731df4e8d8  ploop: Teach kaio_sync_io() work with many pages
match  922562533038  31ee6fdb8d5a  ploop: Introduce .sync_read_many method
match  156b65af1c39  41cb36142a28  ploop: Read 10 BAT clusters on holes_bitmap population
match  82b29bafeeee  dbe32b424567  fuse: Add more debug info into fuse_direct_IO_bvec()
match  ba5c42b587a4  189dd3f0366e  ploop: Add debug check on truncation to kaio_fsync_thread
match  7075fb364597  9fcb1eb71c0f  ploop: Sanity check that raw delta is not zero-length
match  60fec635af54  bad887511324  ploop: Flush data bios on merge before index update
match  bc9ad938a518  887de2ae3df2  ploop: Move duplicated code to a helper
match  1ef4acb9a7c3  04f6ad89654e  ploop: kaio: Close race between truncate thread and grow
match  c31f7d848170  6563ae21713b  mm/memcontrol.c: lost css_put in memcg_expand_shrinker_maps()
match  fdca438f6c1d  badcf2032951  lost css_put in hwpoison_filter_task()
match  19e921ab91d5  5046b85b0c7e  ms/netfilter: nft_rbtree: introduce nft_rbtree_interval_end() helper
match  385294c0dca5  ec6473f3e052  ms/netfilter: nft_rbtree: ignore inactive matching element with no descendants
match  6f055d818b81  fa0ec35c220b  ms/netfilter: nf_tables: fix register ordering
match  9387af122ee9  976163e7e640  ms/mm: Allocate shrinker_map on appropriate NUMA node
match  92da02769414  372c94529ccd  fs/fuse kio: missing ireq's completion_data initialization
match  915b600d7001  eb1fec96c57b  ploop: Delay reusing cluster on discard till previous index flushed
match  28dd0dc1542c  7034f7b65f78  ploop: Move duplicated initialization into helper
match  402fc625ee15  689661baf1a0  ploop: Add congest argument in ploop_alloc_request()
match  1f56d84b434f  03c8a4256077  ploop: Use ploop_alloc_request() in ploop_bio_queue()
match  aac99fd06508  733485c86f16  ms/mm: introduce vm_ops->map_pages()
match  a51c44a8ed45  ffb19dad735b  ms/mm: implement ->map_pages for page cache
match  851e21a88f38  bf8de9176225  ms/mm: cleanup size checks in filemap_fault() and filemap_map_pages()
match  e09c6e3f8df7  a21d633bb904  ms/mm: add debugfs tunable for fault_around_order
match  1b749601a624  0a575b133481  mm/filemap: add pfcache support to filemap_map_pages
match  a9e9cdd54614  7cfc6e436343  pfcache: do not drop pfcache checksum during mmap(SHARED) of ro-files
match  d35f790fb87a  dda745eb038d  configs: provide kernel config via proc
match  ee96c4c176fd  449915e7e2b3  ve/procfs: make /proc/config.gz visible inside Containers
match  a01733ed497d  3f9a5feb9289  openvswitch: allow to create ovs bridges inside Containers
match  62047d91d7fc  2fa37ce46bed  net: export "net/*/neigh/*/*" sysctls for Container
match  1357bc7d2410  46c83ec5ae57  ve/bridge: handle netlink messages AF_BRIDGE / RTM_[GSD]ETLINK sent from inside a Container
match  1b5febcb7bdb  5e727506a637  ve/proc/block: show /proc/diskstats inside a Container
match  1a17684d3348  63eec0a37fc1  ve/net/bridge: make net.bridge.* sysctl visible in Containers (r/o)
match  2d27ee424cc3  3750736e6cdf  ploop: Set discard limits after blk_queue_stack_limits()
match  cd78548b5b08  2b0e193610ca  ms/VFS: use synchronize_rcu_expedited() in namespace_unlock()
match  1a485a292c2a  54f656940cf2  ploop: Debug check that we never send discards to header
match  007a532e52c7  9c23d299c186  mm/memcontrol: memcg_move_account() get rid of lock_page dependency.
match  4c84640efc91  da2ad00ac09d  ploop: Replace delta under quiesce state
match  9e44ecf64377  7887809a6312  ploop: Stop fast path reqs living their own lives
match  f0ad73231b6a  5b8c2d16cc6a  ploop: Disable fast path on in case of pending discard
match  8c06d8a78f5e  57ee87e1dc33  ploop: Simplify check in ploop_fast_end_io()
match  c9329bf66a8c  a9bb2659004b  ploop: Rename fast_path_waitq into pending_waitq
match  ceb37d7093cc  4d0d26f0b867  ploop: Rename bio_discard_inflight_reqs into discard_inflight_reqs
match  9b65b63f6a42  9cab0aaeac38  ploop: Be overprotective on discard
match  db2206772763  ad183cb483f4  ms/ext4: fix potential race between online resizing and write operations
match  36bbb71da62f  9f14edbd3d8f  ms/ext4: fix potential race between s_flex_groups online resizing and access
match  eb12e63f1128  4d445946aad5  mm/memcontrol: offload offline reclaim to background work.
match  d59acda0eb1f  c7962088c1f3  mm/memcg: save css_get/put stacks
match  521adf389f48  b94eed73ce78  fs/fuse kio: implement internal cs connection
match  3f5d88ffff3b  a28bd2dbab95  fs/fuse kio: drop external cs connection
match  82392a404713  4b48926f5fee  fs/fuse kio: make pcs rpc socket independent
match  822b62ed2a17  bf220bac365d  fs/fuse kio: make pcs auth socket independent
match  34e11288a882  2da7603314af  fs/fuse kio: implement support RDMA transport
match  4c85f6f6648b  d61cfb8eed64  config.OpenVZ.minimal: enable infiniband for fast-path for vStorage
match  fe0bf5a8d50c  a9b1d5ece2d8  ploop: Add interface to dump cached BAT
match  609cc2735279  eaccf628af8a  ms/ext4: fix potential race between s_group_info online resizing and access
match  d172cab6eb21  61a03c855571  ms/ext4: potential crash on allocation error in ext4_alloc_flex_bg_array()
match  39faa251a20a  1c481f521f16  memcg, bc/vm_pages.c: account some swapped memory as used in CT in /proc/meminfo
match  feeed136b095  ab7855798099  ub: show up to date data counters in beancounter cgroup
match  693a716f4fa3  55504f78c0b8  ploop: redefine of BIO_BDEV_REUSED
match  45c0c566944c  090ad218748f  ms/net: adjust skb->truesize in pskb_expand_head()
match  cb75379b9d67  1f6902c00f81  ms/nfsd: memory corruption in nfsd4_lock()
match  40542de4d15c  146602a6a3b5  configs.minimal: update minimal configs up to RHEL7.8 kernel base
match  f2222004dba9  561712028b09  ms/drm/qxl: qxl_release leak in qxl_draw_dirty_fb()
match  d9c7d6675833  08070fba4545  ms/drm/qxl: qxl_release leak in qxl_hw_surface_alloc()
match  703aa25a328b  0aae6063b0e3  fs/locks: Remove legacy UB_NUMFLOCKS
match  1e6844363510  acd9d1104639  drm/qxl: qxl_release use after free
match  0d9e9f4cfe66  c8084a8f2139  ms/i40iw: remove bogus call to netdev_master_upper_dev_get
match  b430c0f88525  2621c48aa2b7  mm: Move memcg_uncharge_kmem() to bottom of __memcg_uncharge_slab()
match  f3454a753edb  dea09baee83e  mm: Add RCU read brackets into memcg_uncharge_kmem()
match  35805a6020bb  81968a5f56ff  net/netfilter: add a mark to distinguish nft ops
match  db70ccb53b53  657a96b3a90a  net/netfilter: make nft NAT working in different netns simultaneously
match  bc0da6fe0397  fe7d545e3ff0  mm/memcg: Fix race on mem cgroup offline/kmem deactivation.
match  1a1c01bb0289  cad802778ed0  packet: Never charge 0 kmem in packet_sk_charge()
match  2ed2b54a25f1  ea6317f18c7f  mm: Warn on zero uncharge in memcg_uncharge_kmem()
match  2187ffa5d97f  abb230cd896e  ms/cgroup: make sure a parent css isn't offlined before its children
match  51a28e1a52c9  d9483ee3f200  ms/netlink: do not enter direct reclaim from netlink_dump()
match  f18b392a4d2b  e2e384ef7547  ms/netlink: do not enter direct reclaim from netlink_trim()
match  3005e3c4ab9f  959efade2882  mnt: allow to add a mount into an existing group
match  f46b825422d6  340562e35884  beancounter, memcg: inline some functions for easier debuging
match  766a9d5fba56  037e80130c8b  ms/netfilter: add missing IS_ENABLED(CONFIG_NF_TABLES) check to header-file.
match  ef6e9237004e  b5289e07c0ae  ms/netfilter: conntrack: don't attempt to iterate over empty table
match  b79dee964a51  b0c1f09bab9c  ms/netfilter: conntrack: use nf_ct_key_equal() in more places
match  2e17b67890f2  2b570079caa0  ms/netfilter: conntrack: small refactoring of conntrack seq_printf
match  6f973ba95019  7d50b9b0d9ef  ms/netfilter: conntrack: check netns when comparing conntrack objects
match  07dd86de128d  2141b2d171a8  ms/netfilter: conntrack: make netns address part of hash
match  5f5028074072  b04840b13584  revert RH patch 9837-net-netfilter-nf_conntrack-don-t-resize-NULL-or-free.patch
match  b80259735cf6  387af2660295  ms/netfilter: conntrack: use a single hashtable for all namespaces
match  e19678d7a88c  918a4cb28938  ms/netfilter: conntrack: consider ct netns in early_drop logic
match  e4290385fd2f  52de76c6146a  ms/netfilter: conntrack: do not dump other netns's conntrack entries via proc
match  08aabb80ba9e  80448668a834  ms/netfilter: nf_conntrack: Fix possible possible crash on module loading.
match  8ee942724b2c  5f4ec8c3a658  ms/netfilter: conntrack: fix calculation of next bucket number in early_drop
match  2e551315612d  d976ed841469  ms/netfilter: conntrack: check netns when walking expect hash
match  6a0555d7ad8a  372ca1a3572d  ms/netfilter: conntrack: use get_random_once for nat and expectations
match  1ffc1a32f610  963701363986  ms/netfilter: conntrack: make netns address part of expect hash
match  a58d190ae160  15a18d342c69  ms/netfilter: conntrack: use a single expectation table for all namespaces
match  0ab7156675b5  ca6c66e5a4ff  ms/netfilter: conntrack: make netns address part of nat bysrc hash
match  d0a08880e44b  b619073e3dcc  ms/netfilter: conntrack: use a single nat bysource table for all namespaces
match  b1d031695931  52a1808b5c07  ms/netfilter: conntrack: use single slab cache
match  67d8a79b8541  cccd5351374c  netfilter: xt_MARK: Add ARP support
match  aec6f1b25261  7e78f5d5db0c  netfilter: conntrack: fix false-positive compiler warning in early_drop()
match  6846fe9b8faf  3df6eb41fd8f  FMODE_MOUNT redefine
match  88977199cecd  7dec4c3c10a6  fs/fuse kio: add storage_version attribute to control filesystem
match  5978d9397c3a  9100806047de  fs/fuse kio: align CS messages to 512 bytes
match  8bfe43d26a15  a77f3a9d9dba  fs/file.c: don't open-code kvfree()
match  51edfb0fb2eb  e8b407db3cb8  fs: generic_file_direct_write() switch to iov_iter
match  ed85bcc85c83  84228f1f1ff9  __btrfs_direct_write(): switch to iov_iter
match  08985cf5c949  8444602db9ee  kill generic_segment_checks()
match  8b7aa866bac6  7a8ddf003e8c  mm: Kill unused ->direct_IO_page
match  ef08855f7736  8030869ef440  mm: Use iov_iter in __swap_writepage()
match  dbc4784106ee  9da3bb1a4f5a  fs: Pass iov_iter to ->direct_IO
match  14f84fdf4d21  94603d3248d6  fs: Kill ->direct_IO_bvec
match  27a2071c6957  3c3a36ab5570  mm: Kill useless mapping_direct_IO()
match  5703b48a9590  cdb09a98e71e  ext4: Use iov_iter argument in direct_IO functions
match  c7ddd871f337  334494e5d698  fs: Replace iov_length() with its iov_iter synonym iov_iter_count()
match  f16700b4cb63  6d9eef20d702  fs: blockdev_direct_IO: switch to iov_iter
match  d96855612977  ba258e215def  give ->direct_IO() a copy of iov_iter
match  76dbe3524945  f2fba5bbf1c7  iot_iter: Add iov_iter_alignment()
match  b03d8bac732a  e3af8b0013ad  new primitive: iov_iter_alignment()
match  b0d6e982a451  06c68e426d8f  dio: take updating ->result into do_direct_IO()
match  b4bb5653a9a1  754ce981aee7  new helper: iov_iter_get_pages()
match  8107d5568e19  8270dec752b8  direct-io: fix uninitialized warning in do_direct_IO()
match  6dfe95dfb3f3  6834f262f1af  direct-io: fix AIO regression
match  301783242bd0  5614a78a74b1  new helper: iov_iter_npages()
match  85e0c31fb747  d3786fd88fab  bio_vec-backed iov_iter
match  a2aca64a0d8a  b6a40dd0e721  ext4: ext4_file_dio_write(): switch to iov_iter
match  49b48a4b410c  7f771afd2899  dax: dax_iomap_rw(): switch to iov_iter
match  ff2a9e7664b8  80be55e55a1f  ext4: ext4_write_checks(): switch to iov_iter
match  9f7f3f5c5d57  af611846ae50  fs: More use iov_iter in ext4_file_write()
match  13b153b6cf8c  48217eeb5b5a  ext4: ext4_file_dax_write() switch to iov_iter
match  d739b3a7fa25  2ea5dd95c8a8  ext4: Introduce ext4_file_write_iter()
match  89b7b4459831  b3374af31916  ext4: Attach write_iter and read_iter
match  402255f6ea87  b4830d5f4e35  fs: direct-io: don't dirtying pages for ITER_BVEC/ITER_KVEC direct read
match  a049c1ef248e  40fd958416c8  ploop: Introduce possibility to use kaio engine for ext4
match  2c9ba98f5d83  2526f1c86137  x86/asm: Use register variable to get stack pointer value
match  06486ce24d0a  975e9e190b87  locking/rwsem-xadd: Add killable versions of rwsem_down_read_failed()
match  5157b83ee8a7  9732daefc577  locking/x86: Use named operands in rwsem.h
match  19f2f277a580  7f90d91d4218  locking/arch, x86: Add __down_read_killable()
match  a6d83466df79  5d14a9c57ce1  locking: Add LOCK_CONTENDED_RETURN
match  d18e89800dda  3e58401daead  locking/rwsem: Add down_read_killable()
match  311aa8f7cde6  18c14d28c7af  net: Bring clearness to ve_netns deassignment
match  62a077ce39ca  c4e9720aa3af  ms/net: skip genenerating uevents for network namespaces that are exiting
match  15b1ffa534b2  c7e3b51ab9cd  ms/net: use net->count to check whether a netns is alive or not
match  38b934478467  0765bd11fab7  ms/net: Make account struct net to memcg
match  427d3b71a6de  bc2a3ed4a7ea  net: Fix possible race in peernet2id_alloc()
match  5b164e01e94b  65086d0fc295  net: Move net:netns_ids destruction out of rtnl_lock() and document locking scheme
match  de5f864b2a29  aa2e455dcaa2  net: Assign net to net_namespace_list in setup_net()
match  948575ac2e7d  1bae1a669aad  net: Cleanup in copy_net_ns()
match  1b3a4209822d  db05cc87dee8  net: Introduce net_sem for protection of pernet_list
match  7625648c36cb  9c9328363588  net: Move mutex_unlock() in cleanup_net() up
match  1ad50f807798  f0d5fee26223  mac80211_hwsim: Make hwsim_netgroup IDA
match  4174d5121533  2a2b48754f60  ve: Synchronize vznetstat pernet_operations
match  12ab3214a7a0  153a4e3e4ee1  net: Kill net_mutex
match  8f14c8e101b4  e04cd7dbfb12  net: Rename net_sem to pernet_ops_rwsem
match  61aeb6ef6ff6  020abdc28335  ms/memcg: remove tasks/children test from mem_cgroup_force_empty()
match  08a3b0908f9c  b713d8d4a406  ploop: Use kmem_cache for iocb allocation
match  2c20ff82f2ef  f9d06d2b691c  ploop: Kill unused PLOOP_S_SYNC
match  7bcb86848d64  0986df6a6e8d  ploop: Disable discard on ioctl(PLOOP_IOC_FREEZE)
match  cab8a7c20a0e  4a206e405f27  overlayfs: add dynamic path resolving in mount options
match  88db0bb63005  633a80fc27ff  overlayfs: add mnt_id paths options
match  9f04e6bc8349  43a6bd8adf29  configs: add/enable options for overlayfs paths absolute resolution
match  42e8f1fe9f57  c5d9291ae608  userns: move EXPORT_SYMBOL closer to current_in_userns
match  f7162dfc7eb8  f6de4242e93f  ms: common object embedded into various struct ....ns
match  ec8f817643da  aa5109847d04  make mntns ->get()/->put()/->install()/->inum() work with &mnt_ns->ns
match  98e12d3a0bbb  40d6fc0ee06f  netns: switch ->get()/->put()/->install()/->inum() to working with &net->ns
match  6700144a3146  5ea127dbb6c8  switch the rest of proc_ns_operations to working with &...->ns
match  1c50766fcabe  3922522f5476  make proc_ns_operations work with struct ns_common * instead of void *
match  40b097ba4816  1c043e2eaff4  new helpers: ns_alloc_inum/ns_free_inum
match  ba731208d2d7  c273662177b0  copy address of proc_ns_ops into ns_common
match  53b37991e0d0  b38a7543ea88  bury struct proc_ns in fs/proc
match  48e081e4fc30  e1a1e7701be9  dcache.c: call ->d_prune() regardless of d_unhashed()
match  57dfa169c497  535fb7ce391c  take the targets of /proc/*/ns/* symlinks to separate fs
match  1855812d0a3c  66646784f02c  kernel: add a helper to get an owning user namespace for a namespace
match  95b66981b17e  181eef488ace  nsfs: add ioctl to get an owning user namespace for ns file descriptor
match  7485972e76f3  f77a2352cde3  nsfs: add ioctl to get a parent namespace
match  4cc4f81d34ce  50a13fe45045  net: add an ioctl to get a socket network namespace
match  eb786b2dd29d  e2db93c2ac81  ns: allow ns_entries to have custom symlink content
match  2b226a8e5dbb  b96551897ba9  pidns: expose task pid_ns_for_children to userspace
match  f7ce4ca45b67  b59f691923b4  nsfs: Add a show_path method to fix mountinfo
match  eeeff6b09a6c  fec7892f37a1  net: Export open_related_ns()
match  c026400bdfde  db93beee5194  net: Make extern and export get_net_ns()
match  b63d31c46925  ac458577c43f  tun: Add ioctl() SIOCGSKNS cmd to allow obtaining net ns of tun device
match  5010092fb190  e4996d0bb89f  tun: Add ioctl() TUNGETDEVNETNS cmd to allow obtaining real net ns of tun device
match  d9cc65ff04af  c83b396cbe07  nsfs: mark dentry with DCACHE_RCUACCESS
match  d6cc3528f1f8  d001fca37659  ms/ovl: Fix dereferencing possible ERR_PTR()
match  5385cde307e1  e8dab166441e  ms/dynamic debug: line queries failing due to uninitialized local variable
match  cab3f29a1019  9319f44a8acb  ms/mm, page_alloc: drop should_suppress_show_mem
match  4e20e05df099  38f342d93f54  ploop: Add more debug info into PLOOP_REQ_TRACE_ERROR
match  08988e7b88ba  e6d6bf475963  ext4: Extract logic from ext4_overwrite_io() to underlining function
match  57c821049ed3  22467895f5c9  ext4: Introduce ext4_fastmap()
match  d20691f5baa9  0dc44a9b749d  ploop: Introduce fastpath for io_kaio
match  442608bde3f8  009db614d86d  fs/fuse kio: set the connection params for RDMA properly
match  998a10e63a21  51ba5533d141  ploop: Inherit stacking limits for ext4 over io_kaio
match  d47ff776d0ac  bc189b522de5  ploop: Fix divide by null in purge_lru_warn()
match  1dd8e7af7c91  5abd275bcab4  ms: af_packet: set defaule value for tmo
match  8a2512a7e17f  2a48b97551d1  ms: fs/namespace.c: fix mountpoint reference counter race
match  7af1c9e1ed1d  050e6e142799  sched/cpupri: Replace NR_CPUS arrays
match  176da10688be  1eb50e99060c  ve/cgroup: fixup for " ve/cgroup: do not link a CT cpu
match  0400073b2155  ee09365f7c0a  mempolicy: Prohibit VE processes numa binding syscalls
match  f81c745f52e5  b67392ef76b4  kernfs/sysfs: add ioctl to get fd network namespace tag
match  66d25d3b51d0  6d68cb433579  ext4: Introduce __ext4_es_lookup_extent()
match  bdf8c2c3d379  91a326f48a6a  ext4: Do read_trylock on fastmap
match  22e6c22ee04c  02aa55a42ba0  ext4: Avoid sleepable debug check in
match  4f687fc8cb0a  42d10c67603e  mm: only drain per-cpu pagevecs once per pagevec usage
match  cc87a0353e8c  2052dd34e24d  asm-generic/tlb: Track freeing of page-table directories in struct mmu_gather
match  ffc6053f0789  8b4697955834  asm-generic/tlb: Track which levels of the page tables have been cleared
match  757497018229  ddd0fb3941fc  asm-generic/tlb: avoid potential double flush
match  25ecc656e1da  64cdf96b773c  ms/mm: per-thread vma caching
match  bcbbcbf52d26  b347d58d6f10  mm: Add and use batched version of __tlb_remove_table()
match  4fde7e98acbb  5df5193cf6c7  mm/memcg: Use per-cpu stock charges for ->kmem and ->cache counters
match  b2badfc063f5  71aee5d4f05d  ext4: make sure enough credits are reserved for
match  625904a01ab6  302511eab168  ext4: recalculate journal credits as inode depth changes
match  7980066115d4  6f3ae351978f  memcg/kmem: don't show fake charge in usage and limits
match  cb5874c068c8  b36a3aae318d  net/mlx5: suppress high order allocation
match  11f6c8cf086b  0e82fa2c59c3  configs: set overlayfs nfs_export option to true
match  9ec16b5337f6  eca1be03dcf4  chardev: Avoid potential use-after-free in 'chrdev_open()'
match  73cc6cccb888  1b9da229d25e  ms/netfilter: nf_conntrack: flush net_gre->keymap_list only from gre helper
match  ffbebf809e34  16cc1877dd9e  ms/KVM: x86/pmu: do not mask the value that is written to fixed PMUs
match  86162843e72f  096b4fb06855  ms/KVM: x86: Fix perfctr WRMSR for running counters
match  17fbd5b37506  77bedd23279a  cgroup: add export_operations to cgroup super block
match  35fb5684b3f1  ccd63694f57e  mm/memcg: fix cache growth above cache.limit_in_bytes
match  aa815c5390cd  979e0409fb32  fs/fuse kio: show latency in cs_stats properly
match  51de0a1b5ac1  cb6e5769f2e0  fs/fuse kio: calculate network latency properly
match  2273d2c8a219  ceba2121c165  fs/fuse kio: allocate memory for each RDMA RX buffer separately
match  88ee2a4dfc0e  c7a33113eb77  fs/fuse kio: concurently work shrink and IO operations
match  e6f586e712ec  32fb11363ae0  fs/fuse kio: NULL pointer dereference in case of dead map
match  c26fa0d00712  0cffd07ec9fc  ploop: Fix discard iocb leak
match  f8f60bdd5ed9  6c8e1651294f  ve/cgroup: implemented per-ve workqueue.
match  2425e43c0c1f  32fa8364f7fb  cgroup: added rcu node string wrapper for in-cgroup usage.
match  b4006fecc006  9579c9d7709b  cgroup: exported __put_css_set and wrappers to cgroup.h
match  049f4366fdfd  ab4ec818b307  ve/cgroup: saving root_css to ve
match  a5beea3fae4f  528987dd660d  ve/cgroup: Added ve_owner field to cgroup
match  1f7574d3452b  13237a9d63e8  ve/cgroup: moved release_agent from system_wq to per-ve workqueues
match  7bf30dc30c09  6a5d16c6a396  ve/cgroup: Implemented logic that uses 'cgroup->ve_owner' to run release_agent notifications.
match  e07a9657b40e  d5f215a1daef  ve/cgroup: private per-cgroup-root data container
match  dc1fc7ea9d29  8db713322a52  ve/cgroup: set release_agent_path for root cgroups separately for each ve.
match  ad26987b0b42  21db005b599f  ve/cgroup: added release_agent to each container root cgroup.
match  8dd4d450c0aa  2b5ce6cf8580  ve/cgroup: cleanup per_cgroot_data at cgroup mount destruction
match  2beb780a44ae  8cf8d221ed06  ve/cgroup: At cgroup_mark(unmark)_ve_roots skip non-virtualized roots
match  68960d57a738  421ee74cae1c  ploop: Introduce ->fastmap_end_io
match  d0fe904c9197  12303001f036  ploop: Add @write argument to ->fastmap
match  ac9e46c5a7b2  32fd0ada4392  fs: Export mapping_needs_writeback()
match  acee363d459e  0498255208d4  ploop: io_kaio: Protect ->fastmap against EXT4_IOC_MOVE_EXT and punch hole
match  41b59169d4b1  abd859399e25  ms/KVM: X86: Implement "send IPI" hypercall
match  3424129f0b70  72c873eeb0f5  net: openvswitch: add capability to specify ifindex of new links
match  bf26623d2c5d  a412220912e2  ploop: Pass correct argument in kaio_sync_read_many()
match  fab0b597dc12  11ccc19a360e  ploop: Fix kaio_sync_io() for multy-pages case
match  c643ca3f41c5  13183150f79c  ms/ext4: add a new ioctl EXT4_IOC_CLEAR_ES_CACHE
match  e12164e055b0  2e770e709c91  ext4: Fix fiemap() with FIEMAP_FLAG_CACHE flag
match  50e8f72306c7  5998682a36bd  ploop: io_kaio: Introduce 4K discard_granuality with 1M clearing indexes when possible
match  aba4ec3a26dc  0543a8a4c9ef  ploop: Enable 1M holes with zeroing indexes for io_kaio
match  096fca663d94  de1cde123352  mm: Reduce access frequency to shrinker_rwsem during shrink_slab
match  3b5c65c96c92  046ea8eaf7d4  ms/netfilter: nfnetlink: correctly validate length of batch messages (take 2)
match  82ac14fb8979  87fb9615f938  ms/kernel/kmod: fix use-after-free of the sub_info structure
match  f4c0513df4cf  6fe36be177e4  ploop: Add @id argument to ->autodetect()
match  6e95dde240b4  ff182641b109  ploop: Formulate "kaio_backed_ext4" module parameter purpose
match  42a854cba672  cf42ab2c4bcd  fs/fuse kio: int overflow while calculation of pos in map_truncate_tail()
match  e8e7a9d68a96  8b0c2fae5543  ext4: Disable ploop's fastmap for DAX
match  a483cdbda0f1  a508c610e260  ext4: Convert ext4_file_dax_read() into ext4_file_dax_read_iter()
match  ecc4f47c7b31  03e3b4ff389c  ext4: Handle DAX case in .read_iter
match  8bdd380ee2ca  0db4a840d8a9  ms/saner handling of temporary namespaces
match  8c99541c7ec9  568ff850de56  ms/vfs: syscall: Add open_tree(2) to reference or clone a mount
match  7150cdf95cdc  eb3195578976  ms/vfs: syscall: Add move_mount(2) to move mounts around
match  2b8f3afe44a4  9883cb490d6a  ms/teach move_mount(2) to work with OPEN_TREE_CLONE
match  48071e6d403b  a688d40ead01  ploop: Clear PLOOP_S_NO_FALLOC_DISCARD on restart
match  7a0bc1c65484  79c55b70726c  ploop: Refactoring in ploop1_open()
match  9dd61814e618  3ef99192dc18  ploop: Move v1 PLOOP_S_NO_FALLOC_DISCARD to ploop1_open()
match  422cad353a33  6a7cec7ccac7  ploop: Zero discard limits on stop
match  51c2aea1ec1c  a184e21e25ff  ploop: Allow to set discard_granuality for io_kaio
match  5d92d1c1d158  fe58d793ba7d  ms/ipv4: Namespaceify tcp_fastopen knob
match  d9e7bceae216  6b7d5efe59cc  ve/perf: forbid perf events syscall in containers
match  226d59f76a76  7d2a95f439e2  ploop: Move blk_queue_make_request() into __ploop_dev_alloc()
match  18f95ce34284  8cbf2aced6fa  ploop: Move queue autoconfiguration into add delta stage
match  53b6232a5599  93f773ba1e9b  ploop: Allow to configure FUSE discard_granuality
match  379eee99453f  f24b6954eb18  ploop: Introduce may_allow_falloc_discard()
match  e1526af0d9d3  b9f052f55fe1  ploop: Allow FUSE to avoid maintaince mode based discard
match  3f55abbaf974  d9263922d724  ploop: Disable discard on ploop1 v1 after snapshot
match  36563213792d  a323ce20dfe7  cgroup: Fixed null pointer dereference at cgroup_mount #PSBM-107596
match  fc846b4df51e  de2872efa04c  rh/fs/dcache: Track & report number of negative dentries
match  4e9832d8586f  7ee312f6c43b  ipc: add export_operations to mqueue sb
match  f05adb44527e  9d46c6d5bd33  vznetstat: Clear skb->mark on entering to VE's IP stack
match  045d9b1d5c7b  93218fb79785  bcache: Fix crashes of bcache used with raid1 #PSBM-106785
match  c35f5919fae0  5908239649db  ms/bcache: Data corruption fix #PSBM-106785
match  10ec126d84a1  6503dcb2e446  ms/bcache: unregister reboot notifier if bcache fails to unregister device #PSBM-106785
match  2e9785e22685  aad365cc765b  ms/bcache: fix cache_set_flush() NULL pointer dereference on OOM #PSBM-106785
match  48433ac7e5f0  0cb230464580  keys, user: Fix high order allocation in user_instantiate() #PSBM-107794
match  66ef255fa025  0f2063c882d1  ploop: Provide interface to pass freezing fs during snapshot
match  9a6d123940b8  6379295d5a0f  ploop: Kill unused truncate ioctl()
match  d32692fc4abb  f4ab99401fc6  ploop: Transform never-true check
match  404531f9b88d  400596cce457  modules: use kvmalloc when creating sysfs attributes for ELF sections
match  4f309cff1279  bd915107debe  ploop: call check_lockout() under ploop->lock
match  8b259307025b  7d8582a0a11b  ploop: Kaio simplify truncate() in kaio_fsync_thread()
match  31f834d339e0  b4b0ee5c7b0d  ploop: Do not do useless preallocation in kaio_submit_alloc()
match  02b0d0378e27  dfeeed7c451c  ploop: Add comments about fsync_thread
match  9ebf4d973f2c  ccfbfe12c52d  ploop: Fix race between truncate and i_size_read()
match  fd3dea1b684e  ab8723ab2f3f  x86_64: fix crashes due to bogus iret traps handling #PSBM-107794
match  8d8a028dd0ee  adc1574a6d32  cgroup: fixed NULL-pointer dereference in cgroup_release_agent
match  0d9c528e43b9  39c6bc6556a1  ms/KVM: LAPIC: Fix pv ipis out-of-bounds access
match  e51cad709016  b2d803e4196d  ms/KVM: LAPIC: Fix pv ipis use-before-initialization
match  65248a4c7602  f042aaf7f8ce  ipset: enable memory accounting for ipset memory allocations
match  00457d58fa57  1fc6ee5c5d77  mm, memcg: add oom counter to memory.stat memcgroup file #PSBM-107731
match  840cdb7825fa  cb223a82913d  ploop: zero-out block device statistics at ploop_stop
match  1b4f6b5867d8  caa9a888e90b  ploop: Rename label in kaio_fsync_thread()
match  2c94d60d56b1  748450ce22f1  ploop: Wait till fsync_thread goes to sleep on ploop_quiesce()
match  e2bd10ba0ff6  e20e187f0f5f  ovl: introduce new "index=nouuid" option for inodes index feature
match  50277ffc7e72  4511c22ba840  ovl: enable kmem accounting for overlayfs inodes
match  0e6a726ab60e  ad544960a79c  ploop: Change type of freezing argument on snapshot
match  5c4a74b775ca  e6c553fe28db  memcg: fixes accounting for allocations called in "disabled BH" context
match  7597c0dcc035  49c9d0259a41  tun: Silence allocation failer if user asked for too big header
match  515c85dd9155  3608015d1e02  vmscan: don't report reclaim progress if there was no progress.
match  54245dedae11  04574bf8b12f  vznetstat: Kill unused venet_acct_classify_sub_outgoing()
match  6dd7bbe34722  5525f50301aa  vznetstat: Simplify venet_acct_out_hook()
match  e68061dc1c61  563acb16f9f2  vznetstat: Skip local skb going from !IFF_LOOPBACK interface
match  42c415dfb6b2  6555b44d53ea  vznetstat: Move the code to drop redundant skb marks to *_xmit() functions #PSBM-122082
match  07360dcb9c4d  febd59d67924  mm/filemap: fix potential memcg->cache charge leak
match  59ba198815ae  1bb9de77bf0b  ploop: kaio: Clear swapfile flag
match  667403e227f9  22a328206158  ms/bcache: fix NULL pointer deref in blk_add_request_payload
match  745975ec0e79  5833ec32ce4c  mm/memcg: optimize mem_cgroup_enough_memory()
match  33bec0f0baef  9d5ecd9f2530  ploop: Wake up on last discard bio from ploop_complete_request()
match  b533c8e3b64a  66ae4eb5baae  ms/vt: selection, push console lock down
match  82aed48d3a3f  6a4091e12632  ms/vt: selection, push sel_lock up
match  ea938fbc595d  5ed1ef0ebd9d  ms/aio: Kill aio_rw_vect_retry()
match  f36db43034da  73c3d960ee33  vmalloc: cancel allocation for oom-killed tasks
match  07b61702798c  abcd93b4f20e  ve/kmod: make nfnetlink_log autoloadable upon request from a CT
match  2c82ab84352e  15262807d6d3  ploop: Reduce batch size in populate_holes_bitmap()
match  d6088faf4bb8  55848ce8ac36  ms/NFSD: Fix a null reference case in find_or_create_lock_stateid()
match  ac4904eaa5ec  cbefcee341b3  netlink: protect NETLINK_REPAIR2
match  5a62b027ee49  5a5393849375  netlink: add an option to set sk->err from userspace
match  e9da5aad293c  45df918b57b2  ploop: Preallocate clusters before nullifying on grow
match  9995fdd6ce46  885f310e6baf  ploop: Add more debug on error
match  c4b5855da693  0ef6416ab197  ve: Reorder ve->ve_ns assignment in ve_grab_context()
match  cbe274b8404e  8a010204a303  ploop: Add statistics of fastmap requests, which fails because of cache
match  c1a6abd49974  315656a467f3  ploop: Invalidate pagecache on service operations
match  45607aafc3a9  29838686bdd1  fs/fuse kio: post rdma work requests only after connection is established
match  319371666a0d  b1544efc74f8  fs/fuse kio: fix processing order of RDMA works during throttle/unthrottle
match  a28268ca6b40  9ad1a46bea7e  ploop: Fix crash in purge_lru_warn()
match  0f5ba06b7680  3fbbba7ea26b  commoncap: relax setxattr and removxattr checks
match  e2a8d14287d7  17a66bd64b95  mm/memcg: cleanup vmpressure from mem_cgroup_css_free()
match  41a180be2c47  90a0d14165d1  mm, page_alloc: move_freepages should not examine struct page of reserved memory
match  c27eb034dd27  898568f30358  ms/mm,fs: introduce helpers around the i_mmap_mutex
match  5a94ea5b3337  c837b436e01b  ms/mm: use new helper functions around the i_mmap_mutex
match  d11fdc2e0c0e  ec836410574d  ms/mm: convert i_mmap_mutex to rwsem
match  2169efbe4222  ea40a40c394c  ms/mm/rmap: share the i_mmap_rwsem
match  45d835aa79fb  1768f54f6775  ms/nfsd: Make init_open_stateid() a bit more whole
match  4561d61df56d  1085097bc2df  ms/fs, nfsd: convert nfs4_stid.sc_count from atomic_t to refcount_t
match  f46a08febc14  f46cf44e04e4  ms/fs, nfsd: convert nfs4_cntl_odstate.co_odcount from atomic_t to refcount_t
match  239c0958b6c0  a933df110a69  ms/fs, nfsd: convert nfs4_file.fi_ref from atomic_t to refcount_t
match  574b62e09ef7  4f4ecde215d6  ms/nfsd: Fix stateid races between OPEN and CLOSE
match  d09dfa7e7309  b30f613f116f  ms/nfsd: Ensure we don't recognise lock stateids after freeing them
match  292e98837bbe  d4e404f54b74  ms/nfsd4: move find_lock_stateid
match  e18c38e0dddf  1caff604e545  ms/nfsd: Fix race in lock stateid creation
match  d44001296662  88d845b34ed2  ms/nfsd: Detect unhashed stids in nfsd4_verify_open_stid()
match  db868b851852  3418a8a0bcf9  ms/nfsd: Don't add locks to closed or closing open stateids
match  798265953328  ae5400391ec1  ms/netfilter: ipset: Convert timers to use timer_setup()
match  3ac2bcdfb6ff  9252b36ae718  ms/netfilter: Replace spin_is_locked() with lockdep
match  55270a4ed771  154545b6a817  ms/netfilter: ipset: Fix "INFO: rcu detected stall in hash_xxx" reports
match  8ff0dda5661d  a40fcde74ccb  ms/netfilter: xt_checksum: ignore gso skbs
match  a01f8177d2b4  001115f1240e  ms/net: Fix usage of pskb_trim_rcsum
match  652eb0e90bee  b3c14063aca3  ms/net: make skb_partial_csum_set() more robust against overflows
match  706c5ed79da4  4e12a5490ea3  ms/net: drop bogus skb with CHECKSUM_PARTIAL and offset beyond end of trimmed packet
match  a69261f807df  0765b4bb2afe  ms/net: rtnetlink: validate IFLA_MTU attribute in rtnl_create_link()
match  daaf9a253a5e  ce68232ea21c  ve/net/core: allow to call setsockopt(SO_RCVBUFFORCE) from Containers
match  26f129b67d13  9506f1e8cfaf  ve/device_cgroup: show all devices allowed in ct to fool docker
match  f381c11dd821  bc9a42fc2bab  configs.minimal: update minimal configs up to RHEL7.9 kernel base
match  b5b6e41ac4f5  fc5d3e3c0c0a  ms/xfrm: fix a warning in xfrm_policy_insert_list
match  e01e1ca59005  3c58687d9aaf  ms/xfrm: policy: match with both mark and mask on user interfaces
match  e487148399ce  5f9b1abb9454  ms/netfilter: nft_rbtree: allow adjacent intervals with dynamic updates
match  70677f112396  a1337df45b00  ms/netfilter: nft_set_rbtree: handle element re-addition after deletion
match  03ad53665acf  66193885e539  ms/netfilter: nft_set_rbtree: check for inactive element after flag mismatch
match  483e7ba75fcf  04b354150e47  ms/netfilter: nft_set_rbtree: bogus lookup/get on consecutive elements in named sets
match  e31f69f09b5c  c1fdfc45d242  netfilter: nf_tables: allow to filter out rules by table and chain
match  6a3d30ec12a0  41fcec32e25f  ms/ipv6: repair fib6 tree in failure case
match  bc9be5a402a2  0e3b90cca4cb  ms/ipv6: remove null_entry before adding default route
match  d9aaefdf577c  455e21987931  netlink: silence high-order memory allocation warning in netlink_ack
match  3470ff10d981  1f6a812bc194  ve/cgroup: At container start check ve's css_set for host-level cgroups.
match  b9156ce5ac58  6ffce691e3de  ms/uprobes: share the i_mmap_rwsem
match  8260598aed43  0b07a198759e  ms/mm/memory-failure: share the i_mmap_rwsem
match  737c91c2f485  64258b2fa653  ms/mm/nommu: share the i_mmap_rwsem
match  1551e744845a  239fd18cf583  ms/mm/memory.c: share the i_mmap_rwsem
match  cfeea469ef3f  933cb5f2706a  ms/ext4: fix argument checking in EXT4_IOC_MOVE_EXT
match  c6615ab805d4  e7bdf841b35c  ms/ip6mr: fix stale iterator
match  965fa034101c  b79032b2eec2  ms/net_sched: gen_estimator: fix lockdep splat
match  4eda45615309  db971c9303d5  ms/xfrm: check id proto in validate_tmpl()
match  d138eb33ff4b  b4791c170c2b  ms/netfilter: ipset: Fix forceadd evaluation path
match  6ec2c783c0e9  013d7cb2214c  ms/netfilter: ipset: Correct rcu_dereference() call in ip_set_put_comment()
match  ebd7c1fad0b4  28a6e98f9f0a  ms/netfilter: ipset: avoid null deref when IPSET_ATTR_LINENO is present
match  e8fb255ae368  12df3ed72548  ms/netfilter: ipset: fix a missing check of nla_parse
match  df3a24ec30f4  67f890cac8d4  ms/netfilter: ipset: Fix the last missing check of nla_parse_deprecated()
match  482d13011ffb  053a2c5eabb0  ms/netlink: add a start callback for starting a netlink dump
match  1cb5ef5ab80e  551f60e520f3  ms/netfilter: ipset: fix suspicious RCU usage in find_set_and_id
match  54ad9f75c757  cacad8aa9c1e  ms/netfilter: ipset: Fix calling ip_set() macro at dumping
match  0f1fe62974c5  805891c480d7  ms/net: handle error more gracefully in socketpair()
match  ed7c5d178217  8ca5d35801bf  ms/socketpair(): allocate descriptors first
match  9ef1145c5aeb  dacb96e64f8e  ms/make sock_alloc_file() do sock_release() on failures
match  4d214da3fd0a  5c9c28396f3a  ms/packet: fix bitfield update race
match  9c35a088a34c  aecf85549063  ms/mm: list_lru: set shrinker map bit when child nr_items is not zero
match  d29991f71e15  402e6ae37216  ipv6: silence high-order allocation warinig in rawv6_sendmsg()
match  7875f55128d8  f2c6f6c3bf28  net: silence high-order-allocation warning in sctp_pack_cookie()
match  56a75a366dc9  844eef2112bf  ms/extable: Enable RCU if it is not watching in kernel_text_address()
match  b25bed7368a9  588cac269c23  ms/extable: Consolidate *kernel_text_address() functions
match  8af8a5c2c3dd  7711947ff6e4  ms/tracing: Fix race in trace_open and buffer resize call
match  ac46b420620c  1a77a4461587  ms/tracing: remove WARN_ON in start_thread()
match  7f059e90f939  1d72f005d315  fs/fuse kio: always use memory registrations for iWarp RDMA reads
match  882631ac85f2  4a2ab4fd479e  fs/fuse kio: fix problem with simultaneous map resolving
match  d3a05a0552d7  fb58119cafa8  nat: allow nft NAT and iptables NAT work on the same node
match  a272adc441a4  5c9ee71cf864  ms/fork: Have new threads join on-going signal group stops
match  1923388367cd  0c7b035dd179  ms/signal: avoid double atomic counter increments for user accounting
match  8890e457877f  6ff144600dba  ms/ptrace: fix task_join_group_stop() for the case when current is traced
match  8c0e238e32c4  1c9be9dcd5d9  fs: Resurrect generic_segment_checks()
match  ebe8c0c4df3a  62af426ea86d  ms/fuse: fix bad inode
match  82c195e3ff04  4c92c64b440d  tty: fix infinite loop in n_tty_receive_char()
match  3bb84cbddb51  f430ea3bdb05  cbt: Update CBT size from check_disk_size_change()
match  6f53f65da837  c5529020514e  ploop: Forced clear discard alignment
match  bc7efc164b2d  60369eee0180  Improve vps_dumpable check in __ptrace_may_access()
match  d4cf182fef4f  e594067193af  overlayfs: relax capable check for trusted prefix xattrs
match  53f78c0ff88e  1c472e74892e  per-memcg negative dentries accounting
match  1a3615ee8083  ddadc187e350  ms: mm: mmu_gather: remove __tlb_reset_range() for force flush
match  2c2fe4560561  f03bfab7f63e  ms/nfsd4: readdirplus shouldn't return parent of export
match  c052945e10f5  7c5905e53a3b  ploop: Add comment in cached_submit()
match  157748b67009  1d2cfd8b86df  ploop: Print mounted sb information on busy stop fail
match  8a973d6085ca  36151de2f311  iomap: report collisions between directio and buffered writes to userspace
match  d0c99d150b6e  fe87771414ca  fs/direct-io.c: keep dio_warn_stale_pagecache() when CONFIG_BLOCK=n
match  2257ad9b471a  ee743c580722  mm: memcg: fix memcg reclaim soft lockup
match  4df25cba45df  99a78816f7b8  mm/vmscan: add cond_resched() to loop in shrink_slab_memcg()
match  36f042ab5591  43b693ac1fdc  fcntl: make F_GETOWN(EX) return 0 on dead owner task
match  32d658dbf77d  f7749863910d  ms/netfilter: nf_tables: add generic macros to check for generation mask
match  168db4b3a59d  4d7bfdd025dd  ms/netfilter: nf_tables: add generation mask to tables
match  fe106aa7b438  35f8f9150a55  ms/netfilter: nf_tables: add generation mask to chains
match  9baff694fafb  fa4d3cf475fa  ms/netfilter: nf_tables: add generation mask to sets
match  0b8b087c15a2  650137b89745  ms/netfilter: nf_tables: fix update chain error
match  c2782e1316c8  c41834be762f  ms/netfilter: nf_tables: check msg_type before nft_trans_set(trans)
match  812eb7c1dca3  8dd7f13356da  ms/ext4: allow ext4_truncate() to return an error
match  621ea20b1808  cd4d81bbb5f9  ms/ext4: allow ext4_ext_truncate() to return an error
match  eac1f876ca63  6aa674a2ded8  ms/ext4: propagate error values from ext4_inline_data_truncate()
match  1f32d47d1066  563352514c4e  ms/ext4: handle ext4_mark_inode_dirty errors
match  bd981d302ec3  ea1cb7780484  ms/writeback: Export inode_io_list_del()
match  07c352e5a191  09f959d05526  ms/ext4: Avoid freeing inodes on dirty list
match  29fb10ea5e5b  9948b7675f52  netfilter: nf_tables: add fib expression
match  fb6956ad720b  23519b624faf  netfilter: nft_fib: convert htonl to ntohl properly
match  3e30e6e9be56  78af65124012  netfilter: nft_fib_ipv4: initialize *dest to zero
match  310d37c4a744  bdd7fd1ab84d  netfilter: rpfilter: bypass ipv4 lbcast packets with zeronet source
match  970d9ef177c2  758f9009db3e  netfilter: rpfilter: fix incorrect loopback packet judgment
match  a05cc1336f6f  bf7b90574b53  netfilter: nft_fib: Support existence check
match  d741e9e420bd  c6f02a6e53f2  netfilter: nf_tables: fib: use skb_header_pointer
match  b1e9b9121869  65c98f6a68fb  netfilter: don't set F_IFACE on ipv6 fib lookups
match  8bff94bfa7d8  1470febbf644  configs: enable modules for nft fib rules
match  412137d83675  53d7b55b54cf  ve/kmod: make fib modules autoloadable from CT
match  c5968b49f551  85188a5dd772  ms/lock_parent: don't step on stale ->d_parent of all-but-freed one
match  82833a8b23ff  0ec859663e86  ploop: Use bio_kmalloc()
match  274f30dcae30  6a82899bae13  ms/netfilter: nft_compat: check extension hook mask only if set
match  a4b9dcf2ccd5  1fa53ad8b0e8  ms/cpufreq: intel_pstate: Add reasons for failure and debug messages
match  59466ba88be9  51d0036c785b  cpufreq: intel_pstate: Make reasons for failure more visible
match  009fc3a3cdfc  ba2e59212d8a  fs/fuse kio: avoid race condition at file expand
match  9d301dd23eca  980c31d68b49  fs/fuse kio: disable parallel fsyncs and file shrinks
match  a4dd0511b5c4  e42942fdf334  netfilter: gpf inside xt_find_revision()
match  a828846bd1e6  1f93051633c9  list: introduce list_for_each_continue()
match  14a8658aa74e  bbb3e273f74f  mm/mem_cgroup_iter: Make 'iter->last_visited' a bit more stable
match  ac9344dcab47  610b4d97b183  mm/mem_cgroup_iter: Always assign iter->last_visited under rcu
match  f52a3e9bebb3  0ce34a0d0e14  mm/mem_cgroup_iter: Provide _iter_invalidate() the dying memcg as an argument
match  6bc45ca5fe09  e28840c23cf8  mm/mem_cgroup_iter: NULL-ify 'last_visited' for invalidated iterators
match  73744f0f33d8  361a9a6083e2  mm/mem_cgroup_iter: Don't bother saving/checking 'dead_count' anymore
match  c0e54e4c8b9c  30a1112fb689  mm/mem_cgroup_iter: Cleanup mem_cgroup_iter_load()
match  c46a1c3c39d0  fb8af892a797  mm/mem_cgroup_iter: Drop dead_count related infrastructure
match  99dd8d99a546  2fd19c0b9de6  configs: change the default cpufreq governor to "performance"
match  81ab513ac8e2  cd8ec7459e44  disable high-order allocations warnings in slip driver
match  64a7d1d90542  e2cec7c2fe63  ms/ext4: don't ignore return values from ext4_ext_dirty()
match  73b824511400  2c4ad15355eb  fs/ext4: Make "lazytime" mount option by default
match  c9348344948e  bbfb9cbfa4dd  cgroup/ve: at container start only check virtualizable cgroups.
match  bd0372f64158  2902a0652769  fs/fuse kio: share stucked requests count for prometheus stats
match  690ee24eb6fb  8fd94abbed83  ms/netfilter: nft_compat: use call_rcu for nfnl_compat_get
match  3d942be69874  df1960312a84  proc/mounts: add cursor
match  e65c9995a2a4  2ba973ce16a8  ve: Add option allowing ioctl(FITRIM) from inside CT
match  b75e7365ed76  2c6fc3de055c  proc/mounts: fix skipping mount after cursor
match  0a0cbb0c5f96  5f80fdc56319  kmapset: lost map->size update in kmapset_del_value()
match  68406aa7f387  3efee1372c46  ms/fuse: fix live lock in fuse_iget()
match  0bc2f21b0107  05a76d764ebe  ve/net: sit: enable in container
match  5a459cc3bfed  36d723979dc6  sync: sync_collect_filesystems: fix possible infinite loop
match  1609de07f73e  cd725822de17  fs/fuse kio: don't use kio with uninitialized statistic
match  c86f82db6129  34b62e4628fa  net: net_assign_generic NULL lead to memory leaks
match  178610dde501  415e49a72dc7  fs/fuse: a typo resulting in corruption of page cache and kernel crash
match  3e8707559436  5a448dac508a  fs/fuse: released handle could be used in fiemap
match  9035f4ba6d82  619a14eaea8f  netfilter: ipt_CLUSTERIP: fix out-of-bounds accesses in clusterip_tg_check()
match  faaac5e813c1  99ce84dd5778  ms/vsock/vmci: remove unused VSOCK_DEFAULT_CONNECT_TIMEOUT
match  4fc5f54b6c23  29622a71f764  ms/vsock: remove vm_sockets_get_local_cid()
match  f045424b9224  1a4bb38c6a42  ms/vsock: remove include/linux/vm_sockets.h file
match  60014fefb30f  bc27ba1587f4  ms/vsock: add 'transport' member in the struct vsock_sock
match  1eefad023aa6  21c1dfd856d2  ms/vsock/virtio: add transport parameter to the virtio_transport_reset_no_sock()
match  fe456ee284b0  7800ab2fa160  ms/vsock: add 'struct vsock_sock *' param to vsock_core_get_transport()
match  a06f51aa4c25  5bf83a231fcb  ms/vsock: handle buffer_size sockopts in the core
match  e24c8c0ab714  2c2385c8d8f3  ms/vsock: add vsock_create_connected() called by transports
match  1b6e9e56172c  f2f096657afe  ms/vsock: move vsock_insert_unbound() in the vsock_create()
match  61b5308749d4  c9a231d1d0ce  ms/hv_sock: set VMADDR_CID_HOST in the hvs_remote_addr_init()
match  2d5dc9c68817  5f223b18e65a  ms/vsock/virtio: Initialize core virtio vsock before registering the driver
match  43e7be0174a2  8dee51478f41  ms/vsock: add multi-transports support
match  8b2ce3a6d282  8da4173dcf26  ms/vsock/vmci: register vmci_transport only when VMCI guest/host are active
match  a64a507b62e0  322eea94d510  ms/vsock: prevent transport modules unloading
match  272d0265b923  110a62f71e4c  ms/vsock: fix bind() behaviour taking care of CID
match  3fb15f06858b  49d0b6d10c89  ms/vhost/vsock: refuse CID assigned to the guest->host transport
match  a1007adbc677  31e41f5d737c  ms/vsock: fix the race conditions in multi-transport support
match  ef4f43770a8b  624c848acb5c  ms/vsock/vmci: make vmci_vsock_cb_host_called static
match  f88d6d41f71e  05ac8cc22e8c  ms/vsock: avoid to assign transport if its initialization fails
match  7f8cca834cec  9e380f3e26db  ms/vsock/virtio: fix null-pointer dereference in virtio_transport_recv_listen()
match  d4f5070d55ea  17f92abe8ef2  ms/vsock/vmci: make vmci_vsock_transport_cb() static
match  c12b13dc1be0  ab684db77789  ms/vsock: fix potential null pointer dereference in vsock_poll()
match  2a654de9b4b0  9ae25290a956  fs/fuse: avoid triggering BUG_ON at file close
match  af7969941356  64b3fa15a0f4  ms/ext4: fix fencepost error in lazytime optimization
match  0c7bd661ae4b  a62a6ec85264  memcg: disable memcg accounting for nf_ct hash tables
match  52b948789dd5  a85375e52090  memcg: enable accounting for netdev_rx_queue objects
match  e4a5067c4f38  ea6cf3b73b73  memcg: Enable accounting for signals
match  93d1148b05f8  b9aaef995ed2  memcg: Enable accounting for pids in nested pid namespaces
match  c1db6f9e8da6  20c433ee2b20  memcg: Enable accounting for new namespaces and struct nsproxy
match  b2b162c07b3f  d31f49f1946c  net: sched: sch_teql: fix null-pointer dereference
match  13b75f4cea75  07b6bb71007b  ploop: Use preallocation for ext4
match  d5feed6f3882  e201ac326146  ipv6 tunnels: enable netdevice register inside container
match  8f4f8a78aa6a  4897b4b3daf8  ms:EDAC/MCE Milan patches
match  dcd94d2f9978  132eb63be5f3  RHEL7 Milan Support Patches
match  3a5e787f1588  802576656122  RHEL7 Perf: Large Increment per Cycle Events for AMD Milan
match  24f78046f2ec  198bcb36769c  ms:x86/amd_nb: Add Family 19h PCI IDs
match  16ef25b27a95  5a0b58ee18e1  pci_ids.h: AMD Milan support
match  412e819bd4f2  56af2765ac16  ms/KVM: AMD Milan Support
match  99c13aa2ed49  c155c3efcee5  ms/netfilter: nf_tables: introduce nft_setelem_parse_flags() helper
match  20d9437d0e72  6319fb16dc56  ms/netfilter: nf_tables: parse element flags from nft_del_setelem()
match  9ead75303a18  961eaff54a62  RCU pathwalk breakage when running into a symlink overmounting something
match  491a410deae8  59681c8dac85  ms/cifs: Limit memory used by lock request calls to a page
match  e71d55b1e88b  8257c47e496c  fs/nfs: break umount cycle if current task does not have enough stack.
match  fd0515a422ba  ec4a54ba2dde  mount: fix mounting of detached mounts onto targets that reside on shared mounts
match  31594cae5b3b  c4664f53bf6e  AMD Milan: update 0001-edac-mce-milan.patch
match  6983197b072d  a5563fbb8a84  net/veth: Increase veth max_mtu for k8s and weave-net
match  86189368ab16  9fc34f6365bb  ms/xfrm6_tunnel: exit_net cleanup check added
match  a78e1a0e62b4  aec076fadd8c  ms/xfrm: Fix warning in xfrm6_tunnel_net_exit.
match  3eb057f50f96  9d09eb909895  ms/xfrm: clean up xfrm protocol checks
match  06b4b35f06e5  ecd3d47b7bc8  ub: ub_ratelimit does not initialize ub_ratelimit->lock
match  bfde2ed7fd0c  0b1d8ccd4baa  ms/ext4: track writeback errors using the generic tracking infrastructure
match  979a5c978950  f1ce36acdc85  ms/ext4: fix punch hole for inline_data file systems
match  db00cf3f694a  992b555ea9b2  ms/ext4: fix EXT_MAX_EXTENT/INDEX to check for zeroed eh_max
match  31369dabccdf  6561d29e89c8  fuse: illegal access to file in vstorage
match  ed4e04778f79  b98904dbc26f  fuse/pcs: missing initialization of client role
match  f30eb2dcc7b0  7e8283518f77  fs/ceph: access beyond end of iovec array in dio_get_pagev_size()
match  de7d9b3a67a9  d2bdb07cab11  ext4: Fix rebase c55a9acde5aa
match  ce54c0317bc3  a1928878e822  ms/ext4: fix bug for rename with RENAME_WHITEOUT
match  d9432f332a49  c4cbc83bc580  ms/ext4: handle unwritten or delalloc buffers before enabling data journaling
match  6479896c45a9  4f52e1fc2f50  ms/ext4: fix xfstest generic/269 double revoked buffer bug with bigalloc
match  760f831dbec7  752309cc6047  ext4: Use initial count in ext4_ind_direct_IO()
match  efdce08db57c  638dcd155f3f  mm/memcg: do not save call stacks of css_get/put by default
match  f196848c75c2  6200816382a4  ploop: Track if we have delta with disable_merge
match  97482bbfd780  fa5a81f0d32a  ploop: Check disable_merge only if there is a delta with such method
match  2c96299e0eb1  5b9640cbcef0  sock: allow reading and changing sk_userlocks with setsockopt
match  f9e8953cad8a  1c7301987541  ve: add get_curr_ve helper
match  c47ea5fefe6a  d17b715fd22e  ve: get_curr_ve: first try getting ve with rcu lock
match  59bed1c08b4e  8cc7e6f5a5f1  cgroup/net_prio: virtualize ifpriomap per-ve
match  a7911eda41ca  b4eed0cac88c  ms/netfilter: remove unused variable
match  59a3d13644b2  d1df2d12b52d  Fix a leak in socket(2) when we fail to allocate a file descriptor.
match  cc4d45dcbe18  320eff35a497  memcg: force accounting to specified memcg
match  41ec4577c539  c537d86e9014  ms/memcg: drop GFP_KERNEL_ACCOUNT use in tty_free_termios()
match  b0ba9fcff269  0a3739d77de8  trace: fix frame skip when saving event stacktrace
match  8f37459aa776  7c3764191917  mm: high order allocation detector
match  37cf6faf0beb  cf65a692154a  mm: make PR_SET_THP_DISABLE immediately active
match  abbf7ac4d996  6fb66a8ca0a0  ms/ipc: remove memcg accounting for sops objects in do_semtimedop()
match  429f05cea9cb  f91ef3bf91f9  ms/ipv6: allocate enough headroom in ip6_finish_output2()
match  85e4eb2720db  4ab7b50aa366  ms/memcg: prohibit unconditional exceeding the limit of dying tasks
match  58a52a7925d0  722ab11378fa  net: export "net/core/xfrm*" sysctls for containers
match  930070cba667  915882da4682  prctl: allow to setup brk for et_dyn executables
match  2ad994d8123e  a66b678b2dd0  ub: correct _ub_get_css() retvalue for dying/stopped containers
match  08db864b0e20  354515cd5ec3  ploop: Fix partition refcounter leak
match  ccd846d11109  cddfd2c04d01  mm: Do not drop __GFP_NOFAIL in __add_to_page_cache_locked
match  a259fb2ce99d  fea87bd48af5  writeback: Write dirty times for WB_SYNC_ALL writeback
match  40ed871d1461  fec5ecb88438  VE/sysrq-trigger: fix log limiting
match  28a66e75d862  cd4cf8303ad9  ms/ipv6: Implement automatic flow label generation on transmit
match  8332b7936c91  d9cef619ed51  ms/net: reallocate new socket option number for IPV6_AUTOFLOWLABEL
match  ed59aac75a66  7e9b285fbc97  ms/ipv6: fix sparse errors in ip6_make_flowlabel()
match  0f1f5186d73e  0d74979f7376  ms/ipv6: Call skb_get_hash_flowi6 to get skb->hash in ip6_make_flowlabel
match  0d25d1dbb2f8  c44c0c3bb4fc  binfmt_misc: don't free per-VE object on error path
match  8c5ffdd62982  8b7f1b6df546  ms/mm, oom: pagefault_out_of_memory: don't force global OOM for dying tasks
match  95f5736c446e  e2045b492e8f  ms/kvm: x86: replace kvm_spec_ctrl_test_value with runtime test on the host
match  452024c1a7ae  f92072522fe5  ms/nfsd: fix jiffies/time_t mixup in LRU list
match  4b556e93f084  b359b0f0d900  ploop: Sanity in kaio_open()
match  f19f21560453  dd5083f34cfb  ms/netlink: Introduce nla_strdup()
match  3ce8da28486c  1383b7f40f53  ms/netfilter: nf_tables: Allow table names of up to 255 chars
match  dbea67f17fce  3e19347908b8  ms/netfilter: nf_tables: Allow chain name of up to 255 chars
match  e5b17aa8f051  96982fa85aa4  pfcache: Fix unitialized s_csum_partial
match  dd470f3dfdee  e5c5d720fd94  ms/ipv6: Provide ipv6 version of "disable_policy" sysctl
match  ef539a53f050  929f14f21d40  ms/ipv6: fix 'disable_policy' for fwd packets
match  6630f6d0e3d9  a3b0c8b0ec05  fs/namei.c: return error if nd->inode check is empty in handle_dotdot_rcu()
match  bce28c331c09  138b7655a287  ms/nfsd4: add refcount for nfsd4_blocked_lock
match  5c199e43e991  5a0d46e2fb6e  ms/fuse: drop obsoleted and incorrect restriction in fuse_setlk
match  90e9f8c2c7a6  14ce983f52c5  ms/fuse: async processing of F_SETLK with FL_SLEEP flag
match  f6c2d50b24d1  70e526aeb756  /proc/<pid>/aio: add dummy read method
match  db007e4a24ef  43a91686bff4  ms/nfs4: skip locks_lock_inode_wait() in nfs4_locku_done if FL_ACCESS is set
match  2909d5b99010  0f13cf0c0acb  ve/posix_timers: adjust CLOCK_BOOTTIME for CT
match  4b6e71d1eb0f  8640c84ea387  hide high-order-request warning in pskb_expand_head()
match  04cb63074ce1  aa93e9fd6728  mm: allow kmem limit bypassing if reclaimable slabs detected
match  baddffd9cc24  21e087df3e29  ms/fs/fuse: missing unlock_page() in fuse_writepage
match  f5df7093438e  8e4718d2a185  fs/fuse: fiq->pending list is killed twice in fuse_invalidate_files()
match  7c6dee230baf  f053c916e8c0  ms/Provide a function to create a NUL-terminated string from unterminated data
match  9ceb1d2c4920  80909ba7a47c  ms/NFS: Create a root NFS directory in /sys/fs/nfs
match  1a5e1faaf235  8aee33f4d822  ms/NFS: Cleanup - add nfs_clients_exit to mirror nfs_clients_init
match  00bd48062164  6cc985f3da2e  ms/NFS: Add sysfs support for per-container identifier
match  d849ef0ec8f2  016d0c118877  ms/fs: nfs: sysfs: Remove NULL check before kfree
match  0134ec7d1834  353f33f0a068  ms/NFSv4: Clean up initialisation of uniquified client id strings
match  4063eaa1a79f  5dee5c9d31ee  ms/NFSv4: Use the net namespace uniquifier if it is set
match  41df783c5803  f11e28131d3d  ms/NFSv4: Fix up RCU annotations for struct nfs_netns_client
match  8e097c108436  7c2c79cd70a2  ms/KVM: x86/mmu: Remove the defunct update_pte() paging hook
match  ae773d62557f  ff246d7070ed  ms/cgroup: no need for cgroup_mutex for /proc/cgroups
match  061913e85177  67a544130495  mm/tswap: make tswap_delete_page handle replaced page gracefully
match  eea15f7f4f21  5a43c1407945  mm/tswap: Add a sanity check in tswap_frontswap_store() on deleting a page
match  a8cbd16e2aac  5d92b8f3ffa7  mutex: Disable irqs in spin_[un]lock_mutex()
match  153e3db7ae67  764a81705ca5  pid_ns: Drop global pid_max declaration leftover
match  8d9383d4dac2  02f97f79c5ec  cgroup: switch from cgroup_mutex to cgroup_root_mutex in proc_cgroup_show
match  af5c63cb82a9  1db2c514cb36  memcg: Add memory accounting for nft expressions
match  c6d086d26219  c0192ab38a66  ms/KVM: SVM: Clear the CR4 register on reset
match  2bc07325c561  10838ab443c3  ms/ext4: check for out-of-order index extents in ext4_valid_extent_entries()
match  514521c49d0e  36b73880effe  ms/ext4: check for inconsistent extents between index and leaf block
match  14879be28725  1c8fb892107d  ms/ext4: prevent partial update of the extent blocks
match  11669bbb103b  bb17804f4e9b  ms/exit: reparent: fix the cross-namespace PR_SET_CHILD_SUBREAPER reparenting
match  601379e2fea5  d02b32ff04b0  ms/exit: reparent: document the ->has_child_subreaper checks
match  1b1a8a3c030c  453827a47089  ms/exit: fix the setns() && PR_SET_CHILD_SUBREAPER interaction
match  a0588f3c02c1  48b0b9d8fc0c  ms/exit: reparent: fix the dead-parent PR_SET_CHILD_SUBREAPER reparenting
match  841c1dcc747f  4abfc75a769d  net/skbuff: hide high-order-request warning in __alloc_skb()
match  f72f4a28c525  20c8cf940ce8  cgroup-v1: Allow setting release_agent from root Container user_ns
match  bc63e51cc307  0c4a04766a33  ms/KVM: nVMX: Properly handle userspace interrupt window request
match  3e777d3ee552  d702a9aaa028  ms/KVM: nSVM: implement check_nested_events for interrupts
match  92e3c25dc62f  8c62d33e39d4  ms/KVM: SVM: introduce nested_run_pending
match  37e820b8f7d5  0aacc21533de  ms/KVM: nSVM: Report NMIs as allowed when in L2 and Exit-on-NMI is set
match  695d599180f5  fc66d0b71b8c  ms/KVM: SVM: Split out architectural interrupt/NMI/SMI blocking checks
match  a37965d5112a  c43d1821bd05  ms/KVM: x86: Fix nmi injection failure when vcpu got blocked
match  bbd7bfd57aa5  ec5d3838c611  ms/KVM: x86: replace is_smm checks with kvm_x86_ops.smi_allowed
match  855994bf86da  664c571cf84e  ms/KVM: x86: Replace late check_nested_events() hack with more precise fix
match  97dd463b97fd  a88af110418c  ms/KVM: nVMX: Require immediate-exit when event reinjected to L2 and L1 event pending
match  2d7949ae46a5  0fe30a226773  ms/KVM: x86: track manually whether an event has been injected
match  1995b7bd1b62  e333ab840ffe  ms/KVM: x86: enable event window in inject_pending_event
match  8b9fbdfd8a21  4a6db3ddd103  ms/Fix detectition of kernel git repository in setlocalversion script [take #2]
match  988f4014fc0c  bbf11bc81dc6  ms/xfrm: fix crash in XFRM_MSG_GETSA netlink handler
match  c8a56570ed95  7a098166fe19  fs/fuse kio: correct data types in tracing calls
match  b2e0847e0d59  a1c4fb0429ea  fs/fuse kio: wording correction in commit_cs_record (dirtying)
match  42a5c21461e7  58b052a404be  fuse: pcs: protection against sync seq numbers wraparound
match  ff212c48b6f0  e32edfef99e7  blk-cbt: disable interrupts before this_cpu_ptr() call
match  77cb7f63ba3c  944773efc42e  vtty: fix slave peer lockdep annotation
match  6c7e14d5f072  30452a04ff4e  ms/drop_monitor: add missing call to genlmsg_end
match  43ac4ba38857  3bb5bcf0da5f  ms/drop_monitor: consider inserted data in genlmsg_end
match  65d191d8f183  9e2de4ecb69e  ms/drop_monitor: use setup_timer
match  069a6710313a  cc71f450d931  ms/drop_monitor: Use correct error code
match  8d4bb881df3c  8d2f83879718  ms/drop_monitor: Rename and document scope of mutex
match  d69fb2e67bf0  8dae7ad79c89  ms/drop_monitor: Use pre_doit / post_doit hooks
match  1095bc8503bd  870706f612d4  ms/drop_monitor: Split tracing enable / disable to different functions
match  fcee0888a659  b6f98192b7c9  ms/drop_monitor: Initialize timer and work item upon tracing enable
match  6b2d3f1b309c  d6ef4d159679  ms/drop_monitor: Reset per-CPU data before starting to trace
match  89c36cc4a624  978f017ab5a4  ms/drop_monitor: Require CAP_NET_ADMIN for drop monitor configuration
match  492179fbd741  4ba928a588e3  ms/drop_monitor: Add alert mode operations
match  6f912fdbb466  c40f135cc1d4  ms/drop_monitor: Add packet alert mode
match  26e8abf82560  633f82ea2dec  Makefile: Fix for "make rpm-pkg" working
ok     35ef97e98b37  5169d0c9a7ed  Makefile: Define the default EXTRAVERSION value
match  c9570533fd97  676393272a8c  ms/tty: Make lock subclasses available for other tty locks
match  0ac02c3ed889  3fefa5f0d6a7  neigh: fix possible DoS due to net iface start/stop loop
match  c8d1801c3099  d69ecf98c98d  neighbour: make proxy_queue.qlen limit per-device
match  38323f5c826d  69a093bfe5f9  hv_balloon: Create debugfs file with hyper-v balloon usage information
match  5043728518a7  76859efe229a  ms/net: neigh: use dev_kfree_skb_irq instead of kfree_skb()
match  140f7035bfc5  0e1e1e02644c  rebase_logs: Add rebase logs for 3.10.0-1160.66.1.el7 to 3.10.0-1160.76.1.el7 rebase
match  83999aa9e4c0  2e76eda6fa76  fs/ext4: Tweak to disable "lazytime" mount option by default
match  75b4148670b1  d7cf6ebba846  ms/mm: kmemleak: avoid deadlock on the kmemleak object insertion error path
match  a723f62abf33  cc1e6285878f  mm/kmemleak: Add support for percpu memory leak detect
match  6baede19b4a6  dff0e82090f1  sunrpc: print debug info for kill-tasks
match  53c88c134da9  d5c2cbf9cae0  ms/netfilter: nf_tables: fix out-of-bounds in nft_chain_commit_update
match  41dbf6f4f559  c13edf2ac425  ms/netfilter: nf_tables: fix memory leaks on chain rename
match  368c1bb08c24  4031b17c985b  ms/netfilter: nf_tables: fix chain filter in nf_tables_dump_rules()
match  fe5aabf2ea52  11e101d90ed8  virtio_balloon: Create debugfs file with the usage information
match  85eacc16ff05  a92c704afb47  Revert "ms/net: neigh: use dev_kfree_skb_irq instead of kfree_skb()"
match  18f6eb0b8142  6de083d7c804  ms/net: neigh: don't call kfree_skb() under spin_lock_irqsave()
match  9b97c13c145a  cb9fbcb1344e  ms/blk-wbt: Avoid lock contention and thundering herd issue in wbt_wait
match  8b1e630e974a  a50b780658a4  ms/blk-wbt: move disable check into get_limit()
match  742bf453d82d  68727b6fcfe1  ms/net: Generalise wq_has_sleeper helper
match  33ee32d151cb  3751e86c83f5  ms/blk-wbt: use wq_has_sleeper() for wq active check
match  5bb00ef560f2  f879d2becf1b  ms/blk-wbt: fix has-sleeper queueing check
match  8c4894837c69  33f1a287da96  ms/blk-wbt: abstract out end IO completion handler
match  f39f017e0903  0c5054c2670b  ms/blk-wbt: improve waking of tasks
match  fe6cdcf174ba  16ef8ae0313f  ms/wait: add wq_has_single_sleeper helper
match  815294bb8cf8  836125399d24  ms/rq-qos: fix missed wake-ups in rq_qos_throttle
match  729c880e01c9  819e2d41c564  ms/rq-qos: don't reset has_sleepers on spurious wakeups
match  22a6559be418  c10255ced941  ms/rq-qos: set ourself TASK_UNINTERRUPTIBLE after we schedule
match  3ae45bd569eb  90df67fd95ad  ms/rq-qos: use a mb for got_token
match  2c0e190f155d  34838754c04e  mm: Add counters to be updated by the balloon drivers
match  b69fd71111db  e24875b3e72c  drivers/virtio: Balloon report stats to mm core
match  51139834e3af  e1779b9a6929  drivers/hyperv: Balloon report stats to mm core
match  efd1f2f29608  a98f77ebdff1  drivers/vmware: Balloon report stats to mm core
match  b5da696faa4a  d6b85f1d7bea  drivers/vmware: Fixup for balloon report stats to mm core
match  088c43468b2e  b3b1a26b7434  ploop: restrict the standby mode flag to work only on devices supporting it
match  50ad5a5cd216  125bb832b1a2  blk-cbt: fix count decrement and check in cbt_page_alloc
match  780dad116d89  44a7847dce75  blk-cbt: fix in_use check in blk_cbt_release
match  2bed27ae4097  e87ee2f46f14  netfilter: core: fix NAT hooks collision check
drop   cb377aa4b4f5  c5e8f6f89313  OpenVZ kernel rh7-3.10.0-1160.76.1.vz7.189.9
